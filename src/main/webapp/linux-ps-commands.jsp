<!DOCTYPE html>
<html lang="en">

  <head>

    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">
    <meta name="description" content="Most frequent ps command example to monitor linux process and troubleshooting, advancec ps command troubleshooting, Real time monitoring with ps">
    <meta name="keywords" content="ps command tutorial, Display all ps Information,find every process on the system, Display process tree, Display info about threads, Display processes owned by specific users,Display security info,Display process running as root,Display every process with a user-defined formatDisplay threads,Display full command executed by the process,Troubleshoot with ps,Sort process by cpu usage,Real time monitoring with ps, linux interview questions">
    <meta name="author" content="Anish nath">
    <meta name="robots" content="index,follow" />
	<meta name="googlebot" content="index,follow" />
	<meta name="resource-type" content="document" />
	<meta name="classification" content="tools" />
	<meta name="language" content="en" />

    <title>Most frequent ps command example to monitor linux process and troubleshooting, advancec ps command troubleshooting, Real time monitoring with ps</title>

    <!-- Bootstrap core CSS -->
    <link href="vendor/bootstrap/css/bootstrap.min.css" rel="stylesheet">

    <!-- Custom styles for this template -->
    <link href="css/blog-post.css" rel="stylesheet">
    
    <link rel="stylesheet"  href="css/highlight/default.min.css">
	<script src="css/highlight/highlight.min.js"></script>
	<script>hljs.initHighlightingOnLoad();</script>
	
	
		<!-- JSON-LD markup generated by Google Structured Data Markup Helper. -->
<script type="application/ld+json">
{
  "@context" : "http://schema.org",
  "@type" : "Article",
  "mainEntityOfPage": {
    "@type": "WebPage",
    "@id": "https://8gwifi.org/docs/linux-ps-commands.jsp"
  },
  "name" : "Most frequent ps command example to monitor linux process and troubleshooting, advancec ps command troubleshooting, Real time monitoring with ps",
  "author" : {
    "@type" : "Person",
    "name" : "Anish"
  },
  "headline": "Most frequent ps command example to monitor linux process and troubleshooting, advancec ps command troubleshooting, Real time monitoring with ps",
  "image":"https://8gwifi.org/docs/img/linux-ps-monitor.gif",
  "datePublished" : "2018-09-13",
  "dateModified": "2018-09-13",
  "articleSection" : "The  process status (ps)",
  "articleBody" : [ "Display information about other users processes","uid, pid, ppid, flags, cpu, pri, nice, vsz=SZ, rss, wchan, state=S, paddr=ADDR, tty time and command=CMD","Display every process on the system","Display process tree:", "Display info about threads:", "Display processes owned by specific users", "Display security info" ,"Display process running as root", "Display every process with a user-defined format:","Display process by command name","Display the process ID of mysqld,"Display the process name of PID","Display children of the process", "Display threads","Display full command executed by the process", "Display processes attached to device","Troubleshoot with ps", "Sort process by Start time", "Sort process by cpu usage","Sort process by memory usage", "Real time monitoring", "Display how many process is created by each user", "Display all Zombie process" ,"Display process stuck in D state IOWait", "Count number of thread created by a given process", "ps command to output specific column","A note on pgrep/pkill","Killing the process","kilall command"],
  "publisher" : {
    "@type" : "Organization",
    "name" : "8gwifi.org Tech Blog",
    "logo" :   {
      "@type": "ImageObject",
      "url": "https://8gwifi.org/docs/img/logo.jpg"
    }
  }
}
</script>


  </head>

  <body>

    <!-- Navigation -->
   <%@ include file="navigation.jsp"%> 

    <!-- Page Content -->
    <div class="container">

      <div class="row">

        <!-- Post Content Column -->
        <div class="col-lg-8">

          <!-- Title -->
          <h1 class="mt-4">Most frequent ps command example to monitor linux process and troubleshooting </h1>

          <!-- Author -->
          <p class="lead">
            by
            <a href="https://www.linkedin.com/in/anishnath">Anish</a>
          </p>

          <hr>

          <!-- Date/Time -->
          <p>Posted on Friday September 13</p>

          <hr>

        
 
          <img class="img-fluid rounded" src="img/linux-ps-monitor.gif" alt="Referefce 8gwifi.org">

           <%@ include file="footer_adsense.jsp"%>
           <%@ include file="analytics.jsp"%>

          <hr>

          <!-- Post Content -->
        <h2 class="mt-4"><a id="The__process_status_ps_2"></a>The  process status (ps)</h2>
<p>The <strong>ps</strong> utility displays a header line, followed by lines containing information about all of your processes that have controlling terminal. The <strong>ps</strong> command only produces a snapshot of processes, meaning the information produced is static</p>
<p>This is the  first command where most of the system administrator uses to troubleshoot the environment so in this article, we will quickly discuss  <strong>ps</strong> related tips that users may find useful.</p>
<p>By simply typing <code>ps</code> will display the process for the current shell</p>
<pre><code class="html"># ps
PID TTY  TIME CMD
20048 pts/0  00:00:00 sudo
20049 pts/0  00:00:00 su
20050 pts/0  00:00:00 bash
20241 pts/0  00:00:00 ps
</code></pre>
<p><strong>Note</strong> the time format is <code>00:00:00</code> indicates no CPU time has been given by the kernel</p>
<p>The output headers and their meaning</p>
<ul>
<li><strong>PID</strong>: Process ID</li>
<li><strong>TTY</strong>: full name of control terminal</li>
<li><strong>TIME</strong>: accumulated CPU time, user + system (alias <strong>cputime</strong>)</li>
<li><strong>CMD</strong>:  Command and Arguments</li>
</ul>
<h2 class="mt-4"><a id="Display_information_about_other_users_processes_25"></a>Display information about other users’ processes</h2>
<p>The <code>ps -A</code> will display information about other users’ processes, including those without controlling terminals.</p>
<pre><code class="html"> # ps -A 
  PID TTY          TIME CMD
    1 ?        00:01:15 systemd
    2 ?        00:00:00 kthreadd
    3 ?        00:35:29 ksoftirqd/0
    .....
</code></pre>
<p><strong>ps -e</strong>  Identical to <strong>ps -A</strong>. many people prefer <code>ps -e</code></p>
<h2 class="mt-4"><a id="Display_all_Information_37"></a>Display all Information</h2>
<p>the <code>ps -l</code> will display information associated with the following keywords: <strong>uid</strong>, <strong>pid</strong>, <strong>ppid</strong>, <strong>flags</strong>, <strong>cpu</strong>, <strong>pri</strong>, <strong>nice</strong>, <strong>vsz=SZ</strong>, <strong>rss</strong>, <strong>wchan</strong>, <strong>state</strong>=S, paddr=<strong>ADDR</strong>, <strong>tty</strong>, <strong>time</strong>, and command=<strong>CMD</strong></p>
<pre><code class="html"># ps -l 
F S   UID   PID  PPID  C PRI  NI ADDR SZ WCHAN  TTY          TIME CMD
4 S     0 20048 20009  0  80   0 - 13233 poll_s pts/0    00:00:00 sudo
4 S     0 20049 20048  0  80   0 - 13071 wait   pts/0    00:00:00 su
4 S     0 20050 20049  0  80   0 -  5340 wait   pts/0    00:00:00 bash
0 R     0 20489 20050  0  80   0 -  7229 -      pts/0    00:00:00 ps
</code></pre>
<p>The output headers and their meaning</p>
<ul>
<li><strong>F</strong>: Flag value (1=forked but didn’t exec, 4=used super-user privileges)</li>
<li><strong>S</strong>: STAT refer below.</li>
<li><strong>UID</strong> : effective user ID</li>
<li><strong>PID</strong> : process ID</li>
<li><strong>PPID</strong> : parent process ID</li>
<li><strong>WCHAN</strong> The address in the system on which a process waits.</li>
<li><strong>ADDR</strong>: swap address</li>
<li><strong>TTY</strong>: full name of control terminal</li>
<li><strong>TIME</strong>: accumulated CPU time, user + system (alias <strong>cputime</strong>)</li>
<li><strong>CMD</strong>:  Command and Arguments</li>
</ul>
<p>the <code>ps -u</code> will display information associated with the following keywords: <strong>user</strong>, <strong>pid</strong>, <strong>%cpu,</strong> <strong>%mem</strong>, <strong>vsz</strong>, <strong>rss</strong>, <strong>tt</strong>, <strong>state</strong>, <strong>start</strong>, <strong>time</strong>, and <strong>command</strong></p>
<pre><code class="html"># ps -u 
USER       PID %CPU %MEM    VSZ   RSS TTY      STAT START   TIME COMMAND
root      1048  0.0  0.0  15936  1500 tty1     Ss+  Jul13   0:00 /sbin/agetty --noclear tty1 linux
root     20048  0.0  0.0  52932  3996 pts/0    S    12:22   0:00 sudo su
root     20049  0.0  0.0  52284  3568 pts/0    S    12:22   0:00 su
root     20050  0.0  0.0  21360  3832 pts/0    S    12:22   0:00 bash
</code></pre>
<p>The output headers and their meaning</p>
<ul>
<li><strong>USER</strong>: The username from uid.</li>
<li><strong>%CPU</strong>: percentage CPU usage</li>
<li><strong>%MEM</strong>: percentage memory usage</li>
<li><strong>STAT</strong>: symbolic process state
<ul>
<li><code>R</code>  running or runnable (on run queue)</li>
<li><code>D</code>  uninterruptible sleep (usually IO)</li>
<li><code>S</code>  interruptible sleep (waiting for an event to complete)</li>
<li><code>Z</code>  defunct/zombie, terminated but not reaped by its parent</li>
<li><code>T</code>  stopped, either by a job control signal or because it is being traced</li>
</ul>
</li>
</ul>
<p>For BSD formats and when the stat keyword is used, additional characters may be displayed:</p>
<ul>
<li>
<p>BSD formats</p>
<ul>
<li><code>&lt;</code>    high-priority (not nice to other users)</li>
<li><code>N</code>    low-priority (nice to other users)</li>
<li><code>L</code>    has pages locked into memory (for real-time and custom IO)</li>
<li><code>s</code>    is a session leader</li>
<li><code>l</code>    is multi-threaded (using CLONE_THREAD, like NPTL pthreads do)</li>
<li><code>+</code>    is in the foreground process group</li>
</ul>
</li>
<li>
<p><strong>START</strong> : time started</p>
</li>
</ul>
<h3 class="mt-4"><a id="Display_every__process_on_the_system_98"></a>Display every  process on the system</h3>
<pre><code class="html">ps -e
ps -ef
ps -eF
ps -ely
</code></pre>
<h3 class="mt-4"><a id="Display_process_tree_105"></a>Display process tree:</h3>
<pre><code class="html">ps -ejH
ps axjf
</code></pre>
<h3 class="mt-4"><a id="Display_info_about_threads_110"></a>Display info about threads:</h3>
<pre><code class="html">ps -eLf
ps axms
</code></pre>
<h3 class="mt-4"><a id="Display_processes_owned_by_specific_users_115"></a>Display processes owned by specific users</h3>
<pre><code class="html">ps -u ansible,www-data
</code></pre>
<h3 class="mt-4"><a id="Display_security_info_120"></a>Display security info</h3>
<p>This will attach an extra header called LABEL , and show security context for SELinux</p>
<pre><code class="html">ps -eo euser,ruser,suser,fuser,f,comm,label
ps axZ

ps -eM
/usr/sbin/mysqld (enforce)  19926 ?  78-11:31:17 mysqld
unconfined  20005 ?  00:00:00 sshd
unconfined  20009 pts/0  00:00:00 bash
unconfined  20048 pts/0  00:00:00 sudo
</code></pre>
<h3 class="mt-4"><a id="Display__process_running_as_root_133"></a>Display  process running as root</h3>
<pre><code class="html">ps -U root -u root u
USER PID %CPU %MEM  VSZ RSS TTY  STAT START TIME COMMAND
root 1  0.0  0.1  37772  5176 ?  Ss Jul13 1:15 /sbin/init
root 2  0.0  0.0  0 0 ?  S  Jul13 0:00 [kthreadd]
root 3  0.0  0.0  0 0 ?  S  Jul13  35:31 [ksoftirqd/0]
</code></pre>
<p>The output headers and their meaning</p>
<ul>
<li><strong>%MEM</strong>: percentage memory usage</li>
<li><strong>VSZ</strong> : virtual size in Kbytes.</li>
<li><strong>RSS</strong> : Resident set size</li>
</ul>
<h3 class="mt-4"><a id="Display_every_process_with_a_userdefined_format_148"></a>Display every process with a user-defined format:</h3>
<p>Using the  <code>-o</code>  or  <code>-format</code>  options to build user-defined output formats as shown below.</p>
<pre><code class="html">ps -eo pid,tid,class,rtprio,ni,pri,psr,pcpu,stat,wchan:14,comm
ps axo stat,euid,ruid,tty,tpgid,sess,pgrp,ppid,pid,pcpu,comm
ps -Ao pid,tt,user,fname,tmout,f,wchan
</code></pre>
<h3 class="mt-4"><a id="Display_process_by_command_name_156"></a>Display process by command name</h3>
<pre><code class="html">ps -C mysqld
PID TTY  TIME CMD
19926 ?  78-10:23:55 mysqld
</code></pre>
<h3 class="mt-4"><a id="Display_the_process_ID_of_mysqld_162"></a>Display the process ID of mysqld</h3>
<pre><code class="html">ps -C mysqld -o pid=
</code></pre>
<h3 class="mt-4"><a id="Display_the_process_name_of_PID_19926_166"></a>Display the process name of PID 19926:</h3>
<pre><code class="html">ps -q  19926  -o comm=
mysqld
</code></pre>
<h3 class="mt-4"><a id="Display_children_of_the_process_171"></a>Display children of the process</h3>
<pre><code class="html"> ps -aef --forest
 UID  PID  PPID  C STIME TTY  TIME CMD
 root 2 0  0 Jul13 ?  00:00:00 [kthreadd]
 root 3 2  0 Jul13 ?  00:35:31  \_ [ksoftirqd/0]
 root 5 2  0 Jul13 ?  00:00:00  \_ [kworker/0:0H]
 root 7 2  0 Jul13 ?  01:49:34  \_ [rcu_sched]
 root 8 2  0 Jul13 ?  00:00:00  \_ [rcu_bh]
</code></pre>
<p>To find children of the process  pass the PID of the process <code>-p &lt;pid&gt;</code> in the <code>pstree</code> command</p>
<pre><code class="html">pstree -p 19926
mysqld(19926)─┬─{mysqld}(19933)
├─{mysqld}(19934)
├─{mysqld}(19935)
├─{mysqld}(19936)
├─{mysqld}(19937)
├─{mysqld}(19938)
</code></pre>
<h3 class="mt-4"><a id="Display_threads_194"></a>Display threads</h3>
<p>use the <code>-L</code> command line option to display all the threads attached with that processid</p>
<pre><code class="html">ps -L 19926
PID LWP TTY  STAT TIME COMMAND
19926 19926 ?  Ssl  2990:32 /usr/sbin/mysqld
19926 19933 ?  Ssl  0:00 /usr/sbin/mysqld
19926 19934 ?  Ssl  1:59 /usr/sbin/mysqld
</code></pre>
<p>The output headers and their meaning</p>
<ul>
<li><strong>LWP</strong> : Light Weight Process.</li>
</ul>
<h3 class="mt-4"><a id="Display_full_command_executed_by_the_process_209"></a>Display full command executed by the process</h3>
<pre><code class="html">ps -efww

root 900 1  0 Jul13 ?  00:00:02 /usr/lib/policykit-1/polkitd --no-debug
root 906 1  0 Jul13 ?  00:00:00 /sbin/dhclient -1 -v -pf /run/dhclient.ens3.pid -lf /var/lib/dhcp/dhclient.ens3.leases -I -df /var/lib/dhcp/dhclient6.ens3.leases ens3
root 927 1  0 Jul13 ?  00:00:00 /sbin/mdadm --monitor --pid-file /run/mdadm/monitor.pid --daemonise --scan --syslog
.....
.....
</code></pre>
<h3 class="mt-4"><a id="Display_processes_attached_to_device_221"></a>Display processes attached to device</h3>
<p>the <code>-T</code> will display information about processes attached to the device associated with the standard input.</p>
<p>the <code>t</code> Display information about processes attached to the specified terminal devices.</p>
<h2 class="mt-4"><a id="Troubleshoot_with_ps_228"></a>Troubleshoot with ps</h2>
<h3 class="mt-4"><a id="Sort_process_by_Start_time_231"></a>Sort process by Start time</h3>
<pre><code class="html">ps -ef --sort=start_time
</code></pre>
<h3 class="mt-4"><a id="Sort_process_by_cpu_usage_235"></a>Sort process by cpu usage</h3>
<pre><code class="html">ps -eo pid,ppid,cmd,%mem,%cpu --sort=-%cpu | head

PID  PPID CMD %MEM %CPU
19926 1 /usr/sbin/mysqld 9.9  125
7374  5367 /usr/lib/jvm/java-8-openjdk 26.1 32.1
27969 27959 python lsat.py 1.0 20.0
25821 1 Xtightvnc :2 -desktop X -au  3.0  3.0
</code></pre>
<h3 class="mt-4"><a id="Sort_process_by_memory_usage_245"></a>Sort process by memory usage</h3>
<pre><code class="html">ps -eo pid,ppid,cmd,%mem,%cpu --sort=-%mem | head

PID  PPID CMD %MEM %CPU
7374  5367 /usr/lib/jvm/java-8-openjdk 26.1 32.1
19926 1 /usr/sbin/mysqld 9.9  125
25821 1 Xtightvnc :2 -desktop X -au  3.0  3.0
27969 27959 python lsat.py 1.0 20.0
25884 1 xfdesktop  0.8  0.0
</code></pre>
<h3 class="mt-4"><a id="Real_time_monitoring_258"></a>Real time monitoring</h3>
<p>using with <code>watch</code> command , to find which process is causing high cpu</p>
<pre><code class="html">watch -n 1 'ps -aux | sort -nrk 4 | head'
</code></pre>
<p><code>-n</code> is to specify the time interval, execute the line every 1 second. Ctrl+c to quit watch.</p>
<p>or</p>
<pre><code class="html">watch -n 1 'ps -eo pid,ppid,cmd,%mem,%cpu --sort=-%cpu'
</code></pre>
<p>which process is eating memory</p>
<pre><code class="html">watch -n 1 'ps -eo pid,ppid,cmd,%mem,%cpu --sort=-%mem'
</code></pre>
<p>Watching specific <strong>command</strong> for the troubleshoot</p>
<pre><code class="html"> ps u -C mysqld

USER PID %CPU %MEM  VSZ RSS TTY  STAT START TIME COMMAND
mysql  19926  125  9.9 1676224 404556 ?  Ssl  Jul13 113018:30 /usr/sbin/mysqld
</code></pre>
<p>with watch command every 1 second.</p>
<pre><code class="html">watch -n 1 &quot;ps u -C  mysqld&quot;

Every 1.0s: ps u -C  mysqld Fri Sep 14 15:01:33 2018
USER PID %CPU %MEM  VSZ RSS TTY  STAT START TIME COMMAND
mysql  19926  125  9.9 1676224 404556 ?  Rsl  Jul13 113020:52 /usr/sbin/mysqld
</code></pre>
<h3 class="mt-4"><a id="Display__how_many_process_is_created_by_each_user_291"></a>Display  how many process is created by each user</h3>
<pre><code class="html">ps -ef | cut -d &quot; &quot; -f 1 |  sort -n  | uniq -c | sort -nr

121 root
28 ansible
5 www-data
...
</code></pre>
<h3 class="mt-4"><a id="Display_all_Zombie_process_300"></a>Display all Zombie process</h3>
<pre><code class="html">ps aux |grep &quot;defunct&quot;
</code></pre>
<p><strong>Note</strong>: Zombie processes can not be killed with the normal commands like <code>kill -9 PID</code> , you will have to reboot the system to kill them</p>
<h3 class="mt-4"><a id="Display_process_stuck_in_D_state_IOWait_306"></a>Display process stuck in D state IOWait</h3>
<pre><code class="html">ps aux | awk '{if ($8 ~ &quot;D&quot;) print $0}'
</code></pre>
<p>Through watch command</p>
<pre><code class="html">watch -d -n 1 &quot;(ps aux | awk '\$8 ~ /D/ { print \$0 }')&quot;
</code></pre>
<h3 class="mt-4"><a id="Count__number_of_thread_created_by_a_given_process_316"></a>Count  number of thread created by a given process</h3>
<pre><code class="html"># ps -T 7374  | cut -d &quot; &quot; -f 2  | wc -l
18
</code></pre>
<h3 class="mt-4"><a id="ps_command_to_output_specific_column_321"></a>ps command to output specific column</h3>
<p>This command will output command and arguments  returned by the <code>ps</code> command</p>
<pre><code class="html">ps ax | awk -v p='COMMAND' 'NR==1 {n=index($0, p); next} {print substr($0, n)}'

/sbin/init
[kthreadd]
[ksoftirqd/0]
[kworker/0:0]
[kworker/0:0H]
...
....
</code></pre>
<h2 class="mt-4"><a id="Things_to_know_336"></a>Things to know</h2>
<p><code>ps -e</code> and <code>ps e</code> is not same.  Try out in your shell<br>
<code>ps -ef</code> and <code>ps aux</code> is same, there is historical divergences between POSIX and BSD systems</p>
<h2 class="mt-4"><a id="A_note_on_pgreppkill_341"></a>A note on pgrep/pkill</h2>
<p><strong>pgrep</strong> &amp; <strong>pkill</strong>  looks through the currently running processes and lists the process IDs which match the selection criteria to stdout</p>
<p>for example this will only list the processes called <strong>sshd</strong> AND owned by <strong>root</strong></p>
<pre><code class="html"># pgrep -u root sshd
973
19905
</code></pre>
<p>and  <code>pgrep -u root,daemon</code> will list the processes owned by <strong>root</strong> or <strong>daemon</strong>.</p>
<h2 class="mt-4"><a id="Killing_the_process_354"></a>Killing the process</h2>
<p>To kill a process you need the processid  and then using <code>SIGKILL</code>  or option <code>9</code> will terminate the process</p>
<p>for  example to kill the  mysql process, first find the PID and then kill the process.</p>
<pre><code class="html">kill -9 $(pgrep -f mysql)
</code></pre>
<p>or</p>
<pre><code class="html">kill -9 &lt;pid_of_mysql&gt;
</code></pre>
<p>if no option is specified , then it will Send the default signal, <strong>SIGTERM</strong>, to all those processes.</p>
<pre><code class="html">kill pid
</code></pre>
<p>To get all the available signal use <code>kill -l</code>, <strong>OMG</strong> there are 64 signals, each signal carry a specific meaning by the OS.</p>
<pre><code class="html"> kill -l
 
1) SIGHUP    2) SIGINT   3) SIGQUIT  4) SIGILL   5) SIGTRAP
 6) SIGABRT  7) SIGBUS   8) SIGFPE   9) SIGKILL 10) SIGUSR1
11) SIGSEGV 12) SIGUSR2 13) SIGPIPE 14) SIGALRM 15) SIGTERM
16) SIGSTKFLT   17) SIGCHLD 18) SIGCONT 19) SIGSTOP 20) SIGTSTP
21) SIGTTIN 22) SIGTTOU 23) SIGURG  24) SIGXCPU 25) SIGXFSZ
26) SIGVTALRM   27) SIGPROF 28) SIGWINCH    29) SIGIO   30) SIGPWR
31) SIGSYS  34) SIGRTMIN    35) SIGRTMIN+1  36) SIGRTMIN+2  37) SIGRTMIN+3
38) SIGRTMIN+4  39) SIGRTMIN+5  40) SIGRTMIN+6  41) SIGRTMIN+7  42) SIGRTMIN+8
43) SIGRTMIN+9  44) SIGRTMIN+10 45) SIGRTMIN+11 46) SIGRTMIN+12 47) SIGRTMIN+13
48) SIGRTMIN+14 49) SIGRTMIN+15 50) SIGRTMAX-14 51) SIGRTMAX-13 52) SIGRTMAX-12
53) SIGRTMAX-11 54) SIGRTMAX-10 55) SIGRTMAX-9  56) SIGRTMAX-8  57) SIGRTMAX-7
58) SIGRTMAX-6  59) SIGRTMAX-5  60) SIGRTMAX-4  61) SIGRTMAX-3  62) SIGRTMAX-2
63) SIGRTMAX-1  64) SIGRTMAX    
</code></pre>
<p><strong>For example Taking Java thread dumps</strong></p>
<p>In jRE <code>kill -3</code> option is used thread dump is sent to the standard error stream.</p>
<pre><code class="html">kill -3 &lt;pid&gt;
or 
kill -QUIT &lt;pid&gt;
</code></pre>
<p><strong>Make syslog</strong> reread its configuration file</p>
<pre><code class="html">pkill -HUP syslogd
or 
kill -1 syslogd
</code></pre>
<p>The <strong>killall</strong> commands  sends a signal to all processes running any of the specified commands.  If no signal name is specified, <strong>SIGTERM</strong> is sent.</p>

<p>Next Reading :  <a href="linux-monitor-commands.jsp">How to Monitoring All Executed Commands in Linux </a> </p>

<hr>
<%@ include file="thanks.jsp"%>
          <!-- Comments Form -->
    

          <!-- Single Comment -->
 

          <!-- Comment with nested comments -->
          

        </div>

        <!-- Sidebar Widgets Column -->
        <div class="col-md-4">

          <!-- Ad Widget -->
         <%@ include file="footer_adsense.jsp"%> 

          <!-- Article Widget -->
         <%@ include file="related-linux.jsp"%>
         
           <!-- Article Widget -->
         <%@ include file="related-ansible.jsp"%>
         
         <%@ include file="related-kube.jsp"%>
         
         <%@ include file="related-openstack.jsp"%>
         
         <%@ include file="related-cryptography.jsp"%>
         <%@ include file="related-window-crypto.jsp"%>
         
         
         
         
         <!-- Topic Widget -->
         <%@ include file="side.jsp"%>
         
        </div>

      </div>
      <!-- /.row -->
      <%@ include file="addcomments.jsp"%>

    </div>
    <!-- /.container -->

    <!-- Footer -->
    <footer class="py-5 bg-dark">
      <div class="container">
        <p class="m-0 text-center text-white">Copyright &copy; 8gwifi.org 2018</p>
      </div>
      <!-- /.container -->
    </footer>

    <!-- Bootstrap core JavaScript -->
    <script src="vendor/jquery/jquery.min.js"></script>
    <script src="vendor/bootstrap/js/bootstrap.bundle.min.js"></script>

  </body>

</html>