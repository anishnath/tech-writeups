<!DOCTYPE html>
<html lang="en">

  <head>

    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">
    <meta name="description" content="Introduction to iptables and common rules, iptables CHAINS,iptables Actions,iptables Default Policy,How to Change Default iptables Policy,Most common IPtables rules">
    <meta name="keywords" content="iptables, iptables interview questions, iptables chain, iptables default policy, Block All Traffics,iptables Block Incoming Traffic Only,iptables How Block Outgoing Traffic Only,Block Specific Incoming port or Service,block specific host,block outgoing to specific hosts,allow access to specific mac address only,allow only SSH,block all outgoing connection for example telnet,block ping,configure connection wait,Block Smurf attacks,drop excessive RST packets to avoid smurf attacks,do Port Forwarding,iptables List IPtables Rules,save rule changes made to iptables,restore iptables rules from file,flush clear all iptables rules,delete PREROUTING NAT rule,do logging of iptbales,build DDoS Rule in iptables,iptables block portscans">
    <meta name="author" content="Anish nath">
    <meta name="robots" content="index,follow" />
	<meta name="googlebot" content="index,follow" />
	<meta name="resource-type" content="document" />
	<meta name="classification" content="tools" />
	<meta name="language" content="en" />

    <title>Introduction to iptables and iptables top 20 common rules </title>

    <!-- Bootstrap core CSS -->
    <link href="vendor/bootstrap/css/bootstrap.min.css" rel="stylesheet">

    <!-- Custom styles for this template -->
    <link href="css/blog-post.css" rel="stylesheet">
    
    <link rel="stylesheet"  href="css/highlight/default.min.css">
	<script src="css/highlight/highlight.min.js"></script>
	<script>hljs.initHighlightingOnLoad();</script>
	
	
		<!-- JSON-LD markup generated by Google Structured Data Markup Helper. -->
<script type="application/ld+json">
{
  "@context" : "http://schema.org",
  "@type" : "Article",
  "mainEntityOfPage": {
    "@type": "WebPage",
    "@id": "https://8gwifi.org/docs/iptables.jsp"
  },
  "name" : "Introduction to iptables and iptables top 20 common rules",
  "author" : {
    "@type" : "Person",
    "name" : "Anish"
  },
  "headline": "Introduction to iptables and iptables top 20 common rules",
  "image":"https://8gwifi.org/docs/img/firewall.png",
  "datePublished" : "2018-08-18",
  "dateModified": "2018-08-18",
  "articleSection" : "iptables",
  "articleBody" : [ "iptables","iptables CHAINS","iptables Actions","iptables Default Policy","How to Change Default iptables Policy","iptables: How to Block All Traffics","iptables How to Block Incoming Traffic Only","iptables How Block Outgoing Traffic Only","iptables: How to Block Specific Incoming port or Service","iptables: How to block specific host","iptables: How to block outgoing to specific hosts","iptables: How to allow access to specific mac address only","iptables: How to allow only SSH","iptables: How to block all outgoing connection for example telnet","iptables: How to block ping","iptables: How to configure connection wait","iptables: How to Block Smurf attacks","iptables: How to drop excessive RST packets to avoid smurf attacks","iptables: How to do Port Forwarding","iptables How to List IPtables Rules","iptables: How to save rule changes made to iptables","How to restore iptables rules from file","iptables: How to delete PREROUTING NAT rule","iptables: How to build DDoS Rule in iptables"],
  "publisher" : {
    "@type" : "Organization",
    "name" : "8gwifi.org Tech Blog",
    "logo" :   {
      "@type": "ImageObject",
      "url": "https://8gwifi.org/docs/img/logo.jpg"
    }
  }
}
</script>


  </head>

  <body>

    <!-- Navigation -->
   <%@ include file="navigation.jsp"%> 

    <!-- Page Content -->
    <div class="container">

      <div class="row">

        <!-- Post Content Column -->
        <div class="col-lg-8">

          <!-- Title -->
          <h1 class="mt-4">iptables</h1>

          <!-- Author -->
          <p class="lead">
            by
            <a href="https://www.linkedin.com/in/anishnath">Anish</a>
          </p>

          <hr>

          <!-- Date/Time -->
          <p>Posted on Saturday August 18</p>

          <hr>

        
 
          <img class="img-fluid rounded" src="img/firewall.png" alt="Referefce 8gwifi.org">

           <%@ include file="footer_adsense.jsp"%>
           <%@ include file="analytics.jsp"%>

          <hr>

          <!-- Post Content -->
          
          
<p>IPtables is the firewall service that is available in a lot of different Linux Distributions. While modifying it might seem difficult to dealt with at first, this writeup should be able to show you just how easy it is to use and how quickly you can be on your way mucking around with your firewall</p>
<h2 class="mt-4">iptables CHAINS</h2>
<p>Iptables is made up of 5 tables, each associated to specific functionalities of the net filter and each split into several "chains", specifying the functionalities of each table further</p>
<ul>
<li>
<p><strong>INPUT</strong> - Used to control the behavior of INCOMING connections.</p>
</li>
<li>
<p><strong>FORWARD</strong> - Used to control the behavior of connections that aren't delivered locally but sent immediately out.</p>
</li>
<li>
<p><strong>OUTPUT</strong> - Used to control the behavior of OUTGOING connections.</p>
</li>
<li>
<p><strong>PREROUTING</strong>: This chain is used to make any routing related decisions before (<strong>PRE</strong>) sending any packets. Here is an example, we are redirecting any traffic that just reached the server on port 80 to the port 8080:</p>
<pre><code class="html">  iptables -t nat -A PREROUTING -i eth0 -p tcp --dport 80 -j REDIRECT --to-port 8080
</code></pre>
</li>
<li>
<p><strong>FORWARD</strong>: As the name suggests, The <code class="html">FORWARD</code> chain of <code class="html">FILTER</code> table is used to forward the packets from a source to a destination. Here is an example of <code class="html">FORWARD</code> chain where any <code class="html">TCP</code> traffic received on port 80 on interface <code class="html">eth0</code> meant for the host <code class="html">192.168.0.4</code> will be accepted and forwarded to <code class="html">192.168.0.4</code>:</p>
<pre><code class="html">  iptables -A FORWARD -i eth0 -p tcp --dport 80 -d 192.168.0.4 -j ACCEPT
</code></pre>
<p>You should use nat's PREROUTING only to change the destination address of the packets and filters FORWARD only for filtering (dropping/accepting packets).</p>
</li>
</ul>
<h2 class="mt-4">iptables Actions</h2>
<ul>
<li><strong>ACCEPT</strong>: Allow the connection</li>
<li><strong>DROP</strong>: Drop the connection (as if no connection was ever made; Useful if you want the system to disappear on the network)</li>
<li><strong>REJECT</strong>: Dont allow the connection but send an error back.</li>
</ul>
<h2 class="mt-4">iptables Default Policy</h2>
<p>In every linux system, the chain is configured with default ACTION, in order to know what is the default policy</p>
<pre><code class="html">sudo iptables -L | grep policy
Chain INPUT (policy ACCEPT)
Chain FORWARD (policy ACCEPT)
Chain OUTPUT (policy ACCEPT)
</code></pre>
<h2 class="mt-4">How to Change  Default iptables Policy</h2>
<p>sysadmins can change the default policy by <code class="html">iptables --policy &lt;CHAIN&gt; &lt;ACTCION&gt;</code></p>
<p>for example</p>
<pre><code class="html">iptables --policy INPUT DROP
iptables --policy OUTPUT ACCEPT
iptables --policy FORWARD DROP
</code></pre>


<h2 class="mt-4">iptables main command options</h2>
<p>Get familiar you self with iptables rules  <code>iptables -h</code> , this is great place to start, some tips</p>
<ul>
<li><p><code class="html">iptables -A</code> will add the rule at the end</p></li>
<li><p><code class="html">iptables -I</code> will add the rule at the top by default</p></li>
<li><p><code class="html">iptables -D</code> will delete a rule (specify a rule number or specify the whole rule you want to remove for this option to work)</p></li>
<li><p><code class="html">iptables -C</code> will check for the existence of a rule</p></li>
<li><p><code class="html">iptables -F</code> Delete all rules in  chain or all chains</p></li>
</ul>

<h2 class="mt-4">Most common IPtables rules</h2>
<ul>
<li>
<p><strong>iptables: How to Block All Traffics</strong></p>
<pre><code class="html">  iptables -F 
  iptables -A INPUT -j REJECT 
  iptables -A OUTPUT -j REJECT 
  iptables -A FORWARD -j REJECT
</code></pre>
</li>
<li>
<p><strong>iptables How to Block Incoming Traffic Only</strong></p>
<pre><code class="html">  iptables -F INPUT 
  iptables -A INPUT -m state --state ESTABLISHED -j ACCEPT 
  iptables -A INPUT -j REJECT
</code></pre>
</li>
<li>
<p><strong>iptables How Block Outgoing Traffic Only</strong></p>
<pre><code class="html">  iptables -F OUTPUT 
  iptables -A OUTPUT -m state --state ESTABLISHED -j ACCEPT 
  iptables -A OUTPUT -j REJECT
</code></pre>
</li>
<li>
<p><strong>iptables: How to Block Specific Incoming port or Service</strong><br>
This will block http service any incoming traffic</p>
<pre><code class="html">  iptables -A INPUT -p tcp --dport 80 -j REJECT
</code></pre>
<p>or</p>
<pre><code class="html">  iptables -A INPUT -p tcp --dport www -j REJECT
</code></pre>
<p>to allow only local interfaces for http</p>
<pre><code class="html">  iptables -A INPUT -p tcp --dport 80 -j REJECT
</code></pre>
</li>
<li>
<p><strong>iptables: How to block specific host</strong></p>
<p>This will block all access by that host</p>
<pre><code class="html">  iptables -A INPUT -s &lt;remote_ip&gt; -j REJECT
</code></pre>
</li>
<li>
<p><strong>iptables: How to block outgoing to specific hosts</strong></p>
<pre><code class="html">  iptables -A INPUT -s &lt;remote_ip&gt; -j REJECT
</code></pre>
</li>
<li>
<p><strong>iptables: How to allow access to specific  mac address only</strong></p>
<pre><code class="html">  iptables -A INPUT -m mac --mac-source &lt;mac_address&gt; -j ACCEPT
  iptables -A INPUT -j REJECT
</code></pre>
</li>
<li>
<p><strong>iptables: How to allow only SSH</strong></p>
<pre><code class="html">  iptables -A INPUT -j REJECT
  iptables -A INPUT -p tcp --dport ssh -j ACCEPT
  iptables -A INPUT -i lo -j ACCEPT
  iptables -A INPUT -j REJECT
</code></pre>
</li>
<li>
<p><strong>iptables: How to block all outgoing connection for example telnet</strong></p>
<pre><code class="html">  iptables -A OUTPUT -p tcp --dport telnet -j REJECT
</code></pre>
</li>
<li>
<p><strong>iptables: How to block ping</strong></p>
<pre><code class="html">  iptables -A INPUT -p icmp --icmp-type echo-request -j DROP
</code></pre>
<p>or</p>
<pre><code class="html">  iptables -A INPUT -p icmp --icmp-type 8 -j DROP
</code></pre>
</li>
<li>
<p><strong>iptables: How to configure connection wait</strong></p>
<p>Makes iptables wait 15 seconds between new connections from the same IP on port 22 (SSH):</p>
<pre><code class="html">  iptables -A INPUT -p tcp -i eth0 -m state --state NEW --dport 22 -m recent --update --seconds 15 -j DROP

  iptables -A INPUT -p tcp -i eth0 -m state --state NEW --dport 22 -m recent --set -j ACCEPT
</code></pre>
</li>
<li>
<p><strong>iptables: How to Block Smurf attacks</strong></p>
<pre><code class="html">  iptables -A INPUT -p icmp -m icmp --icmp-type address-mask-request -j DROP
  iptables -A INPUT -p icmp -m icmp --icmp-type timestamp-request -j DROP
  iptables -A INPUT -p icmp -m icmp -j DROP
</code></pre>
</li>
<li>
<p><strong>iptables: How to  drop excessive RST packets to avoid smurf attacks</strong></p>
<pre><code class="html">  iptables -A INPUT -p tcp -m tcp --tcp-flags RST RST -m limit --limit 2/second --limit-burst 2 -j ACCEPT
</code></pre>
</li>
<li>
<p><strong>iptables: How to do Port Forwarding</strong></p>
<p>This rules will forward all the incoming request on port 80 to port 8080</p>
<pre><code class="html">  iptables -t nat -A PREROUTING -p tcp --dport 80 -j REDIRECT --to-port 8080
</code></pre>
<p>This rules will forward all the incoming request on port 80 from localhost to port 8080</p>
<pre><code class="html">  iptables -t nat -I OUTPUT -p tcp -d 127.0.0.1 --dport 80 -j REDIRECT --to-ports 8080
</code></pre>
</li>
<li>
<p><strong>iptables</strong> <strong>How to List IPtables Rules</strong></p>
<pre><code class="html">  iptables -L 
  iptables -t nat --line-numbers -n -L
</code></pre>
</li>
<li>
<p><strong>iptables: How to save rule changes made to iptables</strong></p>
<pre><code class="html">  Ubuntu: sudo /sbin/iptables-save

  RedHat / Centos: /sbin/service iptables save

  Others: /etc/init.d/iptables save

  Generic:  iptables-save &gt; /etc/sysconfig/iptables
</code></pre>
</li>
<li>
<p><strong>How to restore iptables rules from file</strong></p>
</li>

<pre><code class="html">    sudo iptables-save | sudo tee /etc/iptables.conf
    sudo iptables-restore &lt; /etc/iptables.conf
</code></pre>
</ul>
<ul>
<li>
<p><strong>How to flush clear all iptables rules</strong></p>
This command will not clear NAT rules
<pre><code class="html">  iptables -F
</code></pre>
<p>Note if there are NAT rule, then to flush it </p>
<pre><code class="html">  iptables -t nat -F</code></pre>
</li>
<li>
<p><strong>iptables: How to delete PREROUTING NAT rule</strong></p>
<p>First  find out what line it is  by <code class="html">iptables -t nat -L --line-numbers</code></p>
<pre><code class="html">  iptables -t nat -L --line-numbers
  Chain PREROUTING (policy ACCEPT)
  num  target     prot opt source               destination         
  1    REDIRECT   tcp  --  anywhere             anywhere             tcp dpt:8082 redir ports 8083
  2    REDIRECT   tcp  --  anywhere             anywhere             tcp dpt:8084 redir ports 8083

  Chain INPUT (policy ACCEPT)
  num  target     prot opt source               destination         

  Chain OUTPUT (policy ACCEPT)
  num  target     prot opt source               destination         
  1    REDIRECT   tcp  --  anywhere             localhost            tcp dpt:8084 redir ports 8083
  2    REDIRECT   tcp  --  anywhere             localhost            tcp dpt:8082 redir ports 8083
</code></pre>
<p>Then delete the rule <strong>number</strong><br>
<code class="html">iptables -t nat -D PREROUTING 2</code></p>
</li>
<li>
<p><strong>iptables</strong>: How to do logging of iptbales</p>
<p>create a new rule chain that logs and drops in sequence:</p>
<pre><code class="html">  # Create a new chain called LOGGING
  iptables -N LOGGING 
  #All the remaining incoming packets will jump to the LOGGING chain
  iptables -A INPUT -j LOGGING 
  #Log the incoming packets to syslog (/var/log/messages)
  iptables -A LOGGING -m limit --limit 3/min -j LOG --log-prefix &quot;iptables drop packets&quot; --log-level 4
  #Finally, drop all the packets that came to the LOGGING chain
  iptables -A LOGGING -j DROP
</code></pre>
<p>Log All Dropped Outgoing Packets</p>
<pre><code class="html">  iptables -N LOGGING
  iptables -A OUTPUT -j LOGGING
  iptables -A LOGGING -m limit --limit 3/min -j LOG --log-prefix &quot;iptables drop packets &quot; --log-level 4
  iptables -A LOGGING -j DROP
</code></pre>
</li>
<li>
<p><strong>iptables: How to build  DDoS Rule in iptables</strong></p>
<pre><code class="html">  # Reject spoofed packets
  iptables -A INPUT -s 10.0.0.0/8 -j DROP
  iptables -A INPUT -s 169.254.0.0/16 -j DROP
  iptables -A INPUT -s 172.16.0.0/12 -j DROP
  iptables -A INPUT -i eth0 -s 127.0.0.0/8 -j DROP

  iptables -A INPUT -s 224.0.0.0/4 -j DROP
  iptables -A INPUT -d 224.0.0.0/4 -j DROP
  iptables -A INPUT -s 240.0.0.0/5 -j DROP
  iptables -A INPUT -d 240.0.0.0/5 -j DROP
  iptables -A INPUT -s 0.0.0.0/8 -j DROP
  iptables -A INPUT -d 0.0.0.0/8 -j DROP
  iptables -A INPUT -d 239.255.255.0/24 -j DROP
  iptables -A INPUT -d 255.255.255.255 -j DROP

  # Stop smurf attacks
  iptables -A INPUT -p icmp -m icmp --icmp-type address-mask-request -j DROP
  iptables -A INPUT -p icmp -m icmp --icmp-type timestamp-request -j DROP
  iptables -A INPUT -p icmp -m icmp -j DROP

  # Drop all invalid packets
  iptables -A INPUT -m state --state INVALID -j DROP
  iptables -A FORWARD -m state --state INVALID -j DROP
  iptables -A OUTPUT -m state --state INVALID -j DROP

  # Drop excessive RST packets to avoid smurf attacks
  iptables -A INPUT -p tcp -m tcp --tcp-flags RST RST -m limit --limit 2/second --limit-burst 2 -j ACCEPT
</code></pre>
</li>
<li>
<p><strong>iptables How to block  portscans</strong></p>
<pre><code class="html">  # Anyone who tried to portscan us is locked out for an entire day.
  iptables -A INPUT   -m recent --name portscan --rcheck --seconds 86400 -j DROP
  iptables -A FORWARD -m recent --name portscan --rcheck --seconds 86400 -j DROP

  # Once the day has passed, remove them from the portscan list
  iptables -A INPUT   -m recent --name portscan --remove
  iptables -A FORWARD -m recent --name portscan --remove

  # These rules add scanners to the portscan list, and log the attempt.
  iptables -A INPUT   -p tcp -m tcp --dport 139 -m recent --name portscan --set -j LOG --log-prefix &quot;Portscan:&quot;
  iptables -A INPUT   -p tcp -m tcp --dport 139 -m recent --name portscan --set -j DROP

  iptables -A FORWARD -p tcp -m tcp --dport 139 -m recent --name portscan --set -j LOG --log-prefix &quot;Portscan:&quot;
  iptables -A FORWARD -p tcp -m tcp --dport 139 -m recent --name portscan --set -j DROP
</code></pre>
</li>
</ul>
 

<p> if i Missed out any rules, post a comment, I will add in the List </p>

<hr>
<p><strong> Thanku for reading !!! Give a Share for Support</strong></p>
          <!-- Comments Form -->
    

          <!-- Single Comment -->
 

          <!-- Comment with nested comments -->
          

        </div>

        <!-- Sidebar Widgets Column -->
        <div class="col-md-4">

          <!-- Ad Widget -->
         <%@ include file="footer_adsense.jsp"%> 

          <!-- Article Widget -->
         <%@ include file="related-linux.jsp"%>
         
           <!-- Article Widget -->
         <%@ include file="related-ansible.jsp"%>
         
         <%@ include file="related-kube.jsp"%>
         
         <%@ include file="related-openstack.jsp"%>
         
         <%@ include file="related-cryptography.jsp"%>
         
         
         
         
         <!-- Topic Widget -->
         <%@ include file="side.jsp"%>
         
        </div>

      </div>
      <!-- /.row -->
      <%@ include file="addcomments.jsp"%>

    </div>
    <!-- /.container -->

    <!-- Footer -->
    <footer class="py-5 bg-dark">
      <div class="container">
        <p class="m-0 text-center text-white">Copyright &copy; 8gwifi.org 2018</p>
      </div>
      <!-- /.container -->
    </footer>

    <!-- Bootstrap core JavaScript -->
    <script src="vendor/jquery/jquery.min.js"></script>
    <script src="vendor/bootstrap/js/bootstrap.bundle.min.js"></script>

  </body>

</html>