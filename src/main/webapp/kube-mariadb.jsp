<!DOCTYPE html>
<html lang="en">

  <head>

    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">
    <meta name="description" content="How to install mariadb cluster in kubernetes helm">
    <meta name="keywords" content="mariadb in kubernetes helm, mariadb kubernetes installaion, helm mariadb install, mariadb PersistentVolume, PersistentVolumeClaim">
    <meta name="author" content="Anish nath">
    <meta name="robots" content="index,follow" />
	<meta name="googlebot" content="index,follow" />
	<meta name="resource-type" content="document" />
	<meta name="classification" content="tools" />
	<meta name="language" content="en" />

    <title>How to install mariadb cluster in kubernetes helm</title>

    <!-- Bootstrap core CSS -->
    <link href="vendor/bootstrap/css/bootstrap.min.css" rel="stylesheet">

    <!-- Custom styles for this template -->
    <link href="css/blog-post.css" rel="stylesheet">
    
    <link rel="stylesheet"  href="css/highlight/default.min.css">
	<script src="css/highlight/highlight.min.js"></script>
	<script>hljs.initHighlightingOnLoad();</script>
	
	
		<!-- JSON-LD markup generated by Google Structured Data Markup Helper. -->
<!-- JSON-LD markup generated by Google Structured Data Markup Helper. -->
<script type="application/ld+json">
{
  "@context" : "http://schema.org",
  "@type" : "Article",
  "mainEntityOfPage": {
    "@type": "WebPage",
    "@id": "https://8gwifi.org/docs/kube-mariadb.jsp"
  },
  "name" : "How to install mariadb in kubernetes helm",
  "author" : {
    "@type" : "Person",
    "name" : "Anish"
  },
  "headline": "Kubernetes mariadb Installation (helm)",
  "image":"https://8gwifi.org/docs/img/kube-install.png",
  "datePublished" : "2019-01-11",
  "dateModified": "2019-01-11",
  "articleSection" : "Kubernetes mariadb Installation (helm)",
  "articleBody" : [ "Introduction" ,"kubernetes Installation starts here", "First define the PersistentVolume mariadb-pv where the mariadb data to be stored. The hostPath tells the mariadb directory is in /opt/mariadb location" ,"Create PersistentVolume in kube cluster" ,"Define PersistentVolumeClaim mariadb-pvc", "mariadb Installation starts here, this is done through helm the kubernetes package manager"],
  "publisher" : {
    "@type" : "Organization",
    "name" : "8gwifi.org Tech Blog",
    "logo" :  {
      "@type": "ImageObject",
      "url": "https://8gwifi.org/docs/img/logo.jpg"
    }
  }
}
</script>


  </head>

  <body>

    <!-- Navigation -->
 	<%@ include file="navigation.jsp"%>

    <!-- Page Content -->
    <div class="container">

      <div class="row">

        <!-- Post Content Column -->
        <div class="col-lg-8">

          <!-- Title -->
          <h1 class="mt-4">Kubernetes mariadb Installation (helm)</h1>

          <!-- Author -->
          <p class="lead">
            by
            <a href="https://www.linkedin.com/in/anishnath">Anish</a>
            <p>Posted on Friday Jnauary 11, 2019</p>
          </p>
          
          <img class="img-fluid rounded" src="img/kube-install.png" height="400" width="500" alt="Referefce ">
          
          <%@ include file="footer_adsense.jsp"%>
           <%@ include file="analytics.jsp"%>
           
          <hr>

<h3 class="mt-4">Introduction </h3>
<p>In this article we will learn how to to setup jenkins in kubernetes cluster using helm</p>
<p><a href="helm.sh">Helm</a>: Helm is a tool for managing Kubernetes charts. Charts are packages of pre-configured Kubernetes resources.</p>
<ul>
<li>Letâ€™s Begin deploying <strong>mariadb</strong> using helm in <strong>kubernetes</strong> , if you are new to helm then download and initialize helm as follows</li>
</ul>
<pre><code class="language-console">root@kube-master:#  helm init
root@kube-master:# kubectl create serviceaccount --namespace kube-system tiller
root@kube-master:# kubectl create clusterrolebinding tiller-cluster-rule \
   --clusterrole=cluster-admin --serviceaccount=kube-system:tiller
root@kube-master:#  kubectl patch deploy --namespace kube-system tiller-deploy \
   -p '{&quot;spec&quot;:{&quot;template&quot;:{&quot;spec&quot;:{&quot;serviceAccount&quot;:&quot;tiller&quot;}}}}'
</code></pre>
<ul>
<li>Make sure the title-deploy pod is up and running</li>
</ul>
<pre><code class="language-console">root@kube-master:/home/ansible# kubectl get pods -n kube-system 
NAME                                  READY     STATUS    RESTARTS   AGE
coredns-78fcdf6894-jvmlb              1/1       Running   0          1h
coredns-78fcdf6894-xstbn              1/1       Running   0          1h
etcd-kube-master                      1/1       Running   0          1h
kube-apiserver-kube-master            1/1       Running   0          1h
kube-controller-manager-kube-master   1/1       Running   0          1h
kube-flannel-ds-5gzn9                 1/1       Running   0          1h
kube-flannel-ds-tlc8j                 1/1       Running   0          1h
kube-proxy-kl4fg                      1/1       Running   0          1h
kube-proxy-krt6n                      1/1       Running   0          1h
kube-scheduler-kube-master            1/1       Running   0          1h
<mark>tiller-deploy-85744d9bfb-wh98g        1/1       Running   0          1h</mark>
</code></pre>
<ul>
<li>
<p>Once titler pod is up and running, deploying <strong>mariadb</strong>  uses bitnami docker images, for this we need to go and create <strong>PersistentVolume</strong> and <strong>PersistentVolumeClaim</strong></p>
</li>
<li>
<p>Define the PersistentVolume  for <strong>mariadb-pv</strong> where the mariadb data to be stored.  The <strong>hostPath</strong> tells the mysql directory is in <strong>/bitnami/mariadb</strong> location</p>
</li>
</ul>
<pre><code class="language-console">root@kube-master:# cat mariadb-hostpath.yaml 
apiVersion: v1
kind: PersistentVolume
metadata:
  name: mariadb-pv
spec:
  capacity: 
    storage: 1Gi
  accessModes:
    - ReadWriteOnce
    - ReadOnlyMany
  persistentVolumeReclaimPolicy: Retain
  hostPath:
    path: /bitnami/mariadb
</code></pre>
<p>Define the PersistentVolume  for <strong>mariadbslave-pv</strong> where the <strong>mariadbslave</strong> data to be stored.  The <strong>hostPath</strong> tells the mysql directory is in <strong>/bitnami/mariadbslave</strong> location</p>
<pre><code class="language-console">apiVersion: v1
kind: PersistentVolume
metadata:
  name: mariadbslave-pv
spec:
  capacity: 
    storage: 1Gi
  accessModes:
    - ReadWriteOnce
    - ReadOnlyMany
  persistentVolumeReclaimPolicy: Retain
  hostPath:
    path: /bitnami/mariadbslave
</code></pre>
<ul>
<li>Create PersistentVolume in kube cluster</li>
</ul>
<pre><code class="language-console">root@kube-master:# kubectl create -f  mariadb-hostpath.yaml 
persistentvolume/mariadb-pv created

root@kube-master:# kubectl create -f  mariadbslave-hostpath.yaml  
persistentvolume/mariadbslave-pv created
</code></pre>
<ul>
<li>Check the PersistentVolume is available for use</li>
</ul>
<pre><code class="language-console">root@kube-master:/home/ansible# kubectl get pv 
NAME              CAPACITY   ACCESS MODES   RECLAIM POLICY   STATUS    CLAIM                                  STORAGECLASS   REASON    AGE
mariadb-pv        1Gi        RWO,ROX        Retain           Bound     default/data-mariadb-mariadb-slave-0                            6m
mariadbslave-pv   1Gi        RWO,ROX        Retain           Bound     default/mariadb-pvc        
</code></pre>
<ul>
<li>Define PersistentVolumeClaim <strong>mariadb-pvc</strong></li>
</ul>
<pre><code class="language-console">kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: mariadb-pvc
spec:
  storageClassName: &quot;&quot;
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi

</code></pre>
<ul>
<li>Define PersistentVolumeClaim <strong>data-mariadb-mariadb-slave-0</strong></li>
</ul>
<pre><code class="language-console">root@kube-master:# cat mariadbslave-pvc.yaml 
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: data-mariadb-mariadb-slave-0
spec:
  storageClassName: &quot;&quot;
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
</code></pre>
<ul>
<li>Create PersistentVolumeClaim  in kube cluster</li>
</ul>
<pre><code class="language-console">root@kube-master:# kubectl create -f  mariadb-pvc.yaml 
persistentvolumeclaim/mariadb-pvc created

root@kube-master:# kubectl create -f  mariadbslave-pvc.yaml 
persistentvolumeclaim/data-mariadb-mariadb-slave-0 created
</code></pre>
<ul>
<li>Check the PersistentVolumeClaim  is bounded to <strong>mysql-pv</strong></li>
</ul>
<pre><code class="language-console">root@kube-master:# kubectl get pvc
NAME                           STATUS    VOLUME            CAPACITY   ACCESS MODES   STORAGECLASS   AGE
data-mariadb-mariadb-slave-0   Bound     mariadb-pv        1Gi        RWO,ROX                       11s
mariadb-pvc                    Bound     mariadbslave-pv   1Gi        RWO,ROX                       25s                      6s
</code></pre>
<ul>
<li>mariadb Installation starts here, this is done through helm the kubernetes package manager,</li>
<li>Download the mariadb required chart configuration file</li>
</ul>
<pre><code class="language-console">root@kube-master:# wget https://raw.githubusercontent.com/helm/charts/master/stable/mariadb/values.yaml
</code></pre>
<ul>
<li>Edit the file and change to according to your need, for this demo i just change the master existingClaim value</li>
</ul>
<pre><code class="language-console"># Enable persistence using an existing PVC
existingClaim: mariadb-pvc
</code></pre>
<p>while setting up mariadb cluster the  <code>persistence.existingClaim=jenkins-pvc</code> is set which we have created earlier for manual change use the below setting</p>
<blockquote>
<p>helm install --name mariadb --set<br>
master.persistence.existingClaim=mariadb-pvc  stable/mariadb</p>
</blockquote>
<pre><code class="language-console">root@kube-master:# helm install --name mariadb  -f values.yaml stable/mariadb
NAME:   mariadb
LAST DEPLOYED: Tue Jan 15 15:36:17 2019
NAMESPACE: default
STATUS: DEPLOYED

RESOURCES:
==&gt; v1beta1/StatefulSet
NAME                    DESIRED  CURRENT  AGE
mariadb-mariadb-master  1        1        2s
mariadb-mariadb-slave   1        1        2s

==&gt; v1/Pod(related)
NAME                      READY  STATUS             RESTARTS  AGE
mariadb-mariadb-master-0  0/1    ContainerCreating  0         2s
mariadb-mariadb-slave-0   0/1    ContainerCreating  0         2s

==&gt; v1/Secret
NAME     TYPE    DATA  AGE
mariadb  Opaque  2     2s

==&gt; v1/ConfigMap
NAME                    DATA  AGE
mariadb-mariadb-master  1     2s
mariadb-mariadb-slave   1     2s
mariadb-tests           1     2s

==&gt; v1/Service
NAME                   TYPE       CLUSTER-IP     EXTERNAL-IP  PORT(S)   AGE
mariadb                ClusterIP  10.108.173.99  &lt;none&gt;       3306/TCP  2s
mariadb-mariadb-slave  ClusterIP  10.99.252.152  &lt;none&gt;       3306/TCP  2s


NOTES:

Please be patient while the chart is being deployed

Tip:

  Watch the deployment status using the command: kubectl get pods -w --namespace default -l release=mariadb

Services:

  echo Master: mariadb.default.svc.cluster.local:3306
  echo Slave:  mariadb-mariadb-slave.default.svc.cluster.local:3306

Administrator credentials:

  Username: root
  Password : $(kubectl get secret --namespace default mariadb -o jsonpath=&quot;{.data.mariadb-root-password}&quot; | base64 --decode)

To connect to your database:

  1. Run a pod that you can use as a client:

      kubectl run mariadb-client --rm --tty -i --restart='Never' --image  docker.io/bitnami/mariadb:10.1.37 --namespace default --command -- bash

  2. To connect to master service (read/write):

      mysql -h mariadb.default.svc.cluster.local -uroot -p my_database

  3. To connect to slave service (read-only):

      mysql -h mariadb-mariadb-slave.default.svc.cluster.local -uroot -p my_database

To upgrade this helm chart:

  1. Obtain the password as described on the 'Administrator credentials' section and set the 'rootUser.password' parameter as shown below:

      ROOT_PASSWORD=$(kubectl get secret --namespace default mariadb -o jsonpath=&quot;{.data.mariadb-root-password}&quot; | base64 --decode)
      helm upgrade mariadb stable/mariadb --set rootUser.password=$ROOT_PASSWORD
</code></pre>
<ul>
<li>View the mariadb container pod is up and running</li>
</ul>
<pre><code class="language-console">root@kube-master:# kubectl get pods --watch
NAME                       READY     STATUS    RESTARTS   AGE
mariadb-mariadb-master-0   1/1       Running   0          1m
mariadb-mariadb-slave-0    0/1       Running   4          1m
mariadb-mariadb-slave-0   1/1       Running   4         2m
</code></pre>
<ul>
<li>
<p>Once the <strong>mariadb</strong> POD is up and running , your mariadb is ready to use</p>
</li>
<li>
<p>To get your root password of mariad run</p>
</li>
</ul>
<pre><code class="language-console">root@kube-master:/home/ansible# kubectl get secret --namespace default mariadb -o jsonpath=&quot;{.data.mariadb-root-password}&quot; | base64 --decode
AsGt2o7JQ5
</code></pre>
<ul>
<li>To connect to master service (read/write) within k8 cluster</li>
</ul>
<pre><code class="language-console">I have no name!@mariadb-client:/$ mysql -h mariadb.default.svc.cluster.local -uroot -p my_database
Enter password:
**Welcome to the MariaDB monitor.  Commands end with ; or \g.**
**Your MariaDB connection id is 262**
**Server version: 10.1.37-MariaDB Source distribution**
**Copyright (c) 2000, 2018, Oracle, MariaDB Corporation Ab and others.**
**Type 'help;' or '\h' for help. Type '\c' to clear the current input statement.**
MariaDB [my_database]&gt;
</code></pre>
<ul>
<li>To connect to slave service (read-only):</li>
</ul>
<pre><code class="language-console">mysql -h mariadb-mariadb-slave.default.svc.cluster.local -uroot -p my_database
</code></pre>
<p>All right you have successfully created mariadb master/slave</p>

<hr>
<p><h2>Video Demo </h2> </p>
<iframe width="420" height="315"
src="https://youtube.com/embed/ixdQCktXxXA">
</iframe>

          



<%@ include file="thanks.jsp"%>


<hr>


      <!-- Comments Form -->
    

          <!-- Single Comment -->
 

          <!-- Comment with nested comments -->
        
          

        </div>

		
        
        <!-- Sidebar Widgets Column -->
        <div class="col-md-4">

          <!-- Ad Widget -->
         <%@ include file="footer_adsense.jsp"%> 

          
          <%@ include file="related-kube.jsp"%>
          
          <!-- Article Widget -->
         <%@ include file="related-linux.jsp"%>
         
           <!-- Article Widget -->
         <%@ include file="related-ansible.jsp"%>
         
         
         <%@ include file="related-openstack.jsp"%>
         
         <%@ include file="related-cryptography.jsp"%>
         <%@ include file="related-window-crypto.jsp"%>
         
         <!-- Topic Widget -->
         <%@ include file="side.jsp"%>
         
           <!-- Add Comments Support -->
         
         
         

        </div>

      </div>
      <!-- /.row -->


	<%@ include file="addcomments.jsp"%>
    
    </div>
    
    
    
    
    <!-- /.container -->

    <!-- Footer -->
    <footer class="py-5 bg-dark">
      <div class="container">
        <p class="m-0 text-center text-white">Copyright &copy; 8gwifi.org 2018</p>
      </div>
      <!-- /.container -->
    </footer>
    
    Here

    <!-- Bootstrap core JavaScript -->
    <script src="vendor/jquery/jquery.min.js"></script>
    <script src="vendor/bootstrap/js/bootstrap.bundle.min.js"></script>


  </body>

</html>