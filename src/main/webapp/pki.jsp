<!DOCTYPE html>
<html lang="en">

  <head>

    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">
    <meta name="description" content="pki concepts, Certification Authority (CA),Registration Authority (RA),PKI Users,PKI Architecture, openssl Generating hierarchical CA structure, PKI Data Structure,X.509 certificates, CRL, Implement CERTIFICATION REVOCATION LIST, Adding CRL distribution point">
    <meta name="keywords" content="pki tutorial,pki concepts, Certification Authority (CA),Registration Authority (RA),PKI Users,PKI Architecture, openssl Generating hierarchical CA structure, PKI Data Structure,X.509 certificates, CRL, Implement CERTIFICATION REVOCATION LIST, Adding CRL distribution point, openssl commands crl, openssl adding distribution points, openssl crl commands">
    <meta name="author" content="Anish nath">
    <meta name="robots" content="index,follow" />
	<meta name="googlebot" content="index,follow" />
	<meta name="resource-type" content="document" />
	<meta name="classification" content="tools" />
	<meta name="language" content="en" />

    <title>PKI Introduction X.509,CRL</title>

    <!-- Bootstrap core CSS -->
    <link href="vendor/bootstrap/css/bootstrap.min.css" rel="stylesheet">

    <!-- Custom styles for this template -->
    <link href="css/blog-post.css" rel="stylesheet">
    
    <link rel="stylesheet"  href="css/highlight/default.min.css">
	<script src="css/highlight/highlight.min.js"></script>
	<script>hljs.initHighlightingOnLoad();</script>
	
	
		<!-- JSON-LD markup generated by Google Structured Data Markup Helper. -->
<!-- JSON-LD markup generated by Google Structured Data Markup Helper. -->
<script type="application/ld+json">
{
  "@context" : "http://schema.org",
  "@type" : "Article",
  "mainEntityOfPage": {
    "@type": "WebPage",
    "@id": "https://8gwifi.org/docs/pki.jsp"
  },
  "name" : "PKI Introduction X.509,CRL",
  "author" : {
    "@type" : "Person",
    "name" : "Anish"
  },
  "headline": "An Introduction to PKI ",
  "image":"https://8gwifi.org/docs/img/pki.png",
  "datePublished" : "2018-08-11",
  "dateModified": "2018-08-11",
  "articleSection" : "PUBLIC KEY INFRASTRUCTURES in Nutshel",
  "articleBody" : [ "PUBLIC KEY INFRASTRUCTURES","Certification Authority (CA)","Registration Authority (RA)","PKI Users","PKI Architecture","openssl generating hierarchical CA structure", "PKI Data Structure","X.509","CRL" ,"Implement CERTIFICATION REVOCATION LIST","Adding CRL distribution point"]
  "publisher" : {
    "@type" : "Organization",
    "name" : "8gwifi.org Tech Blog",
    "logo" :  {
      "@type": "ImageObject",
      "url": "https://8gwifi.org/docs/img/logo.jpg"
    }
  }
}
</script>


  </head>

  <body>

    <!-- Navigation -->
 	<%@ include file="navigation.jsp"%>

    <!-- Page Content -->
    <div class="container">

      <div class="row">

        <!-- Post Content Column -->
        <div class="col-lg-8">

          <!-- Title -->
          <h1 class="mt-4">PUBLIC KEY INFRASTRUCTURES in Nutshell</h1>

          <!-- Author -->
          <p class="lead">
            by
            <a href="https://www.linkedin.com/in/anishnath">Anish</a>
            <p>Posted on Monday July 30, 2018</p>
          </p>
          
          <img class="img-fluid rounded" src="img/pki.png" height="400" width="600" alt="Referefce ">
          
          <%@ include file="footer_adsense.jsp"%>
           <%@ include file="analytics.jsp"%>
           
          <hr>

<h2 class="mt-4">Introduction </h3>

<p><mark>This sample chapter </mark> extracted from the book, <a href="https://leanpub.com/crypto">The Modern Cryptograhy CookBook </a>. The Book theme is<mark>Cryptography is for EveryOne. Learn from Crypto Principle to Applied Cryptography With Practical Example</mark> </p>
<p><mark>Get 20% discount Coupon on this book </mark> By Commenting and Sharing this Article </p>
<p><iframe class="embed-responsive-item" width='160' height='400' src='https://leanpub.com/crypto/embed' frameborder='0' allowtransparency='true'></iframe></p>

<hr>
<p>A public key infrastructure (PKI) binds public keys to entities, enables other entities to verify public key bindings, and provides the services needed for ongoing management of keys in a distributed system</p>

<h2 class="mt-4"><a id="Certification_Authority_CA_8"></a>Certification Authority (CA)</h2>
<p>The CA issues a public key certificate for each identity, confirming that the identity has the appropriate credentials.</p>
<p><strong>Main Functions of CA</strong></p>
<ul>
<li>Verify the CSR request</li>
<li>Issue the Certificate (Create and SIgn them)</li>
<li>Attach CRL  for Certificate revocation</li>
<li>Publish it’s current (Expired Certificate ) and CRL’s</li>
</ul>
<h2 class="mt-4"><a id="Registration_Authority_RA_18"></a>Registration Authority (RA)</h2>
<p>An RA is designed to verify certificate contents for the CA. Each CA will maintain a list of accredited RAs; that is a list of RAs determined to be trustworthy</p>
<h2 class="mt-4"><a id="PKI_Users_21"></a>PKI Users</h2>
<p>PKI Users are organizations or individuals that use the PKI, but do not issue certificates.</p>
<p><strong>Main Functions of PKI user</strong></p>
<ul>
<li>Generate the Certificate Signing Request.</li>
<li>Maintain the Certificate obtain by the CA.</li>
</ul>
<h2 class="mt-4"><a id="PKI_Architecture_29"></a>PKI Architecture</h2>
<p>CAs may be linked in a number of ways. Most enterprises that deploy a PKI will choose either a <strong>mesh</strong> or a <strong>hierarchical</strong> architecture, This is an example of <strong>hierarchical</strong> Structure</p>
<p><img src="img/pki2.png" alt="PKI"></p>
<h2 class="mt-4"><a id="Generating_hierarchical_CA_structure_35"></a>Generating hierarchical CA structure</h2>
<ul>
<li>
<p><strong>rootCA</strong>  will generate <strong>self signed certificate</strong> and <strong>key</strong> with longer validity</p>
<pre><code class="html"> openssl genrsa -des3 -out rootCA.key 4096
 openssl req -new -x509 -days 3650 -key rootCA.key -out rootCA.crt
</code></pre>
</li>
<li>
<p><strong>intCA</strong> will generate <strong>CSR</strong> and get it signed with <strong>rootCA</strong>  and set Validity for Longer Year.</p>
<pre><code class="html"> openssl genrsa -des3 -out intCA.key 4096
 openssl req -new -key intCA.key -out intCA.csr
</code></pre>
</li>
</ul>
<p>intCA Submited the CSR information to rootCA to get it signed</p>
<pre><code class="html">    Enter pass phrase for intCA.key:
    You are about to be asked to enter information that will be incorporated
    into your certificate request.
    What you are about to enter is what is called a Distinguished Name or a DN.
    There are quite a few fields but you can leave some blank
    For some fields there will be a default value,
    If you enter '.', the field will be left blank.
    -----
    Country Name (2 letter code) [AU]:
    State or Province Name (full name) [Some-State]:KA
    Locality Name (eg, city) []:IN
    Organization Name (eg, company) [Internet Widgits Pty Ltd]:IntermediateCA Issuers
    Organizational Unit Name (eg, section) []:intermediateCA Issue of myOrg
    Common Name (e.g. server FQDN or YOUR name) []:intCA
    Email Address []:

    Please enter the following 'extra' attributes
    to be sent with your certificate request
    A challenge password []:     
    An optional company name []:
</code></pre>
<ul>
<li>
<p>Sign <strong>intermediateCA</strong> with rootCA private key, control the serial Number to <strong>specific</strong> pattern (Usability)</p>
<pre><code class="html">  openssl x509 -req -days 365 -in intCA.csr -CA rootCA.crt -CAkey rootCA.key -set_serial 1111111 -out intCA.crt
  Signature ok
  subject=/C=AU/ST=KA/L=IN/O=IntermediateCA Issuers/OU=intermediateCA Issue of myOrg/CN=intCA
  Getting CA Private Key
  Enter pass phrase for rootCA.key:
</code></pre>
</li>
<li>
<p><strong>PKI (End)Users</strong> will create the <strong>CSR</strong> and send to <strong>CA</strong> to get it signed</p>
<pre><code class="html">  openssl genrsa -des3 -out client.key 2048
  openssl req -new  -key client.key -out client.csr
</code></pre>
</li>
</ul>
<p>End user submit the CSR information to get it signed by the CA, the CA used intermediate CA to sign the CSR</p>
<pre><code class="html">    Enter pass phrase for client.key:
    You are about to be asked to enter information that will be incorporated
    into your certificate request.
    What you are about to enter is what is called a Distinguished Name or a DN.
    There are quite a few fields but you can leave some blank
    For some fields there will be a default value,
    If you enter '.', the field will be left blank.
    -----
    Country Name (2 letter code) [AU]:
    State or Province Name (full name) [Some-State]:My Org
    Locality Name (eg, city) []:IN
    Organization Name (eg, company) [Internet Widgits Pty Ltd]:8gwifi
    Organizational Unit Name (eg, section) []:Crypto
    Common Name (e.g. server FQDN or YOUR name) []:8gwifi.org
    Email Address []:

    Please enter the following 'extra' attributes
    to be sent with your certificate request
    A challenge password []:
    An optional company name []:
</code></pre>
<ul>
<li>
<p>Sign with Intermediate CA,set the exipry date to 1 or 2 year Max, and generate a serial number for this</p>
<pre><code class="html">  openssl x509 -req -in client.csr -days 530 -CA intCA.crt -CAkey intCA.key -CAcreateserial -out client.crt
</code></pre>
</li>
</ul>
<p>The CSR getting signed</p>
<pre><code class="html">    Signature ok
    subject=/C=AU/ST=My Org/L=IN/O=8gwifi/OU=Crypto/CN=8gwifi.org
    Getting CA Private Key
    Enter pass phrase for intCA.key:
</code></pre>
<ul>
<li>
<p>View the Client Certificate Information , The issuer is IntermediateCA</p>
<pre><code class="html">  openssl x509 -text -in client.crt
  ....... ...... 
  Signature Algorithm: sha1WithRSAEncryption
      Issuer: C=AU, ST=KA, L=IN, O=IntermediateCA Issuers, OU=intermediateCA Issue of myOrg, CN=intCA
</code></pre>
</li>
<li>
<p><strong>Verify Certificate</strong></p>
</li>
</ul>
<p>Verify Client certificate with <strong>Full CA chain</strong></p>
<pre><code class="html">    openssl verify -verbose -CAfile &lt;(cat intCA.crt rootCA.crt) client.crt
    client.crt: OK
</code></pre>
<p>Verify <strong>intermediateCA</strong> belongs to <strong>rootCA</strong> chain</p>
<pre><code class="html">    openssl verify -verbose -CAfile rootCA.crt   intCA.crt 
    intCA.crt: OK
</code></pre>
<h2 class="mt-4"><a id="PKI_Data_Structure_139"></a>PKI Data Structure</h2>
<p>Two Basic data structures  used in PKI</p>
<ul>
<li><strong>X.509</strong> Public Key Certificates</li>
<li><strong>CRL</strong>  Certificate Revocation List</li>
<li><strong>Attribute</strong> Certificates</li>
</ul>
<h2 class="mt-4"><a id="X509_145"></a>X.509</h2>
<p>There are <strong>ten</strong> common fields,  <strong>six</strong> <strong>mandatory</strong> and <strong>four optional</strong>.</p>
<p>The mandatory fields are:  <strong>serial number, signature algorithm identifier, certificate issuer name, certificate validity period,  public key Info , and the subject name</strong></p>
<table class="table table-striped table-bordered">
<thead>
<tr>
<th>X.509 Attributes</th>
<th>Description</th>
</tr>
</thead>
<tbody>
<tr>
<td>Version</td>
<td>v2 or v3</td>
</tr>
<tr>
<td>Serial Number</td>
<td>CA Assigned Serial Number to the Certificate</td>
</tr>
<tr>
<td>Signature</td>
<td>Indicate which digital Signature Algorithms ex: SHA-256 with RSA Encryption</td>
</tr>
<tr>
<td>Issuer</td>
<td>Contains x.500 DN</td>
</tr>
<tr>
<td>Validity</td>
<td>Certificate Expiry Dates</td>
</tr>
<tr>
<td>Subject</td>
<td>Contains the DN of the Holder of private Key Corresponding to the public key in the certificate</td>
</tr>
<tr>
<td>Subject public key Information</td>
<td>Optional Parameter, Algorithm Identifiers</td>
</tr>
<tr>
<td>Issuer UniqueID and Subject UniqueID</td>
<td>ID of the Issues only in v2 and v3</td>
</tr>
<tr>
<td>Extensions</td>
<td>Optional only in v3 Certificate version</td>
</tr>
<tr>
<td>subjectType</td>
<td>Indicate whether a subject is CA or ENtity</td>
</tr>
<tr>
<td>Names and identity information</td>
<td>c=US; o=8gwifi; ou=Crypto; <a href="http://cn=8gwifi.org">cn=8gwifi.org</a></td>
</tr>
<tr>
<td>Key Attributes</td>
<td>Specifies relevant attributes whether it used for key transport, or be used to verify a digital signature</td>
</tr>
<tr>
<td>Policy Information</td>
<td>Policies related to Certificate</td>
</tr>
<tr>
<td>Certificate Extensions</td>
<td>extension identifier, a criticality flag, and extension value</td>
</tr>
</tbody>
</table>
<p><strong>Reader Note</strong> <em>what is self Signed Certificate</em></p>
<p>In self signed certificate the issuer and subject are same :)</p>
<pre><code class="html">Issuer:  C=AU, ST=KA, L=IN, O=rootCA Issuers, OU=rootCA, CN=rootCA
Subject: C=AU, ST=KA, L=IN, O=rootCA Issuers, OU=rootCA, CN=rootCA
</code></pre>
<h2 class="mt-4"><a id="CRL_175"></a>CRL</h2>
<p>The CRL contains the following fields:</p>
<table class="table table-striped table-bordered">
<thead>
<tr>
<th>CRL Fields</th>
<th>Description</th>
</tr>
</thead>
<tbody>
<tr>
<td>Version</td>
<td>Optional Version, Default 2</td>
</tr>
<tr>
<td>Signature</td>
<td>algorithm identifier for the digital signature algorithm used by the CRL issuer to sign the CRL</td>
</tr>
<tr>
<td>Issuer</td>
<td>X.500 DN of the CRL issuer</td>
</tr>
<tr>
<td>This update</td>
<td>Issue date of the CRL</td>
</tr>
<tr>
<td>Next update</td>
<td>Next CRL Issue date</td>
</tr>
<tr>
<td>Revoked Certificates</td>
<td>Structured List of Revoked Certificates</td>
</tr>
<tr>
<td>CRL Extensions</td>
<td>Additional Information About the CRL</td>
</tr>
</tbody>
</table>
<p>Pem format of CRL</p>
<pre><code class="html">-----BEGIN X509 CRL-----
-----END X509 CRL-----
</code></pre>
<h2 class="mt-4"><a id="Implement_CERTIFICATION_REVOCATION_LIST_194"></a>Implement CERTIFICATION REVOCATION LIST</h2>
<ul>
<li>
<p><strong>Make a directory</strong> for a CRL:</p>
<pre><code class="html">  mkdir -p /etc/pki/crl
</code></pre>
</li>
<li>
<p>Create an <strong>index file,</strong> <strong>the CRL Database</strong> with the following command:</p>
<pre><code class="html">  touch /etc/pki/crl/index.txt
</code></pre>
</li>
<li>
<p><strong>Create a file for the CRL number</strong>. This file should contain the text 00 only.</p>
<pre><code class="html">  echo 00 &gt; /etc/pki/crl/crl_number
</code></pre>
</li>
<li>
<p><strong>crl_openssl.conf</strong>: create and write the following contents into a crl_openssl.conf file.</p>
<pre><code class="html">  cat &lt;&lt;EOF &gt; crl_openssl.conf
  # OpenSSL configuration for CRL generation
  #
  ####################################################################
  [ ca ]
  default_ca  = CA_default        # The default ca section

  ####################################################################
  [ CA_default ]
  database = /etc/pki/crl/index.txt
  crlnumber = /etc/pki/crl_number


  default_days    = 365           # how long to certify for
  default_crl_days= 30            # how long before next CRL
  default_md  = default       # use public key default MD
  preserve    = no            # keep passed DN ordering

  ####################################################################
  [ crl_ext ]
  # CRL extensions.
  # Only issuerAltName and authorityKeyIdentifier make any sense in a CRL.
  # issuerAltName=issuer:copy
  authorityKeyIdentifier=keyid:always,issuer:always
  EOF
</code></pre>
</li>
<li>
<p><strong>Generate</strong> CRL file</p>
<pre><code class="html">  openssl ca -gencrl -keyfile  intCA.key -cert intCA.crt -out intCA.crl -config crl_openssl.conf
</code></pre>
</li>
<li>
<p><strong>View</strong> CRL file</p>
</li>
</ul>
<p>Added with required CRL field, at this time no certificate is Invoked</p>
<pre><code class="html">openssl crl  -text -noout -in intCA.crl
Certificate Revocation List (CRL):
        Version 2 (0x1)
    Signature Algorithm: sha256WithRSAEncryption
        Issuer: /C=AU/ST=Some-State/O=Internet Widgits Pty Ltd/CN=intermediateCA
        Last Update: Aug  8 06:54:55 2018 GMT
        Next Update: Sep  7 06:54:55 2018 GMT
        CRL extensions:
            X509v3 CRL Number: 
                0
No Revoked Certificates.
    Signature Algorithm: sha256WithRSAEncryption
</code></pre>
<p>if the CRL is DER Encoded then issue the below command</p>
<pre><code class="html">openssl crl -inform DER -text -noout -in mycrl.crl
</code></pre>
<ul>
<li>
<p><strong>Revoke</strong> the Certificate</p>
<pre><code class="html">  openssl ca -revoke client.crt -keyfile intCA.key -cert intCA.crt -config crl_openssl.conf 
  Using configuration from crl_openssl.conf
  Enter pass phrase for intCA.key:
  Adding Entry with serial number AC12C39820C69327 to DB for /C=AU/ST=Some-State/O=Internet Widgits Pty Ltd/CN=8gwifi.org
  Revoking Certificate AC12C39820C69327.
  Data Base Updated
</code></pre>
</li>
<li>
<p>Again revoking the same client certificate will through an error <strong>Already Revoked</strong></p>
<pre><code class="html">  openssl ca -revoke client.crt -keyfile intCA.key -cert intCA.crt -config crl_openssl.conf 
  Using configuration from crl_openssl.conf
  Enter pass phrase for intCA.key:
  ERROR:Already revoked, serial number AC12C39820C69327
</code></pre>
</li>
<li>
<p><strong>Regenerate the CRL list</strong></p>
<pre><code class="html">  openssl ca -gencrl -keyfile intCA.key -cert intCA.crt -out intCA.crl -config crl_openssl.conf
  Using configuration from crl_openssl.conf
  Enter pass phrase for intCA.key:
</code></pre>
</li>
<li>
<p><strong>View CRL file</strong></p>
</li>
</ul>
<p><strong>One revoked certificate is Added</strong> in the CRL entry</p>
<pre><code class="html">openssl crl  -text -noout -in intCA.crl
Certificate Revocation List (CRL):
        Version 2 (0x1)
    Signature Algorithm: sha256WithRSAEncryption
        Issuer: /C=AU/ST=Some-State/O=Internet Widgits Pty Ltd/CN=intermediateCA
        Last Update: Aug  8 07:08:08 2018 GMT
        Next Update: Sep  7 07:08:08 2018 GMT
        CRL extensions:
            X509v3 CRL Number: 
                2
Revoked Certificates:
    Serial Number: AC12C39820C69327
        Revocation Date: Aug  8 07:01:07 2018 GMT
</code></pre>
<h2 class="mt-4"><a id="Adding_CRL_distribution_point_307"></a>Adding CRL distribution point</h2>
<ul>
<li>
<p>Edit the file <strong>crl_openssl.conf</strong> and point out the <strong>PEM</strong> and <strong>DER</strong></p>
<pre><code class="html">  crlDistributionPoints=@crl_section
  [crl_section]
  URI.1 = https://8gwifi.org/intCA.crl
  URI.2 = https://8gwifi.org/intCA.der
</code></pre>
</li>
<li>
<p>CA role , once CA sign the file it will use <code>-extfile crl_openssl.conf</code> to locate the <strong>crlDistributionPoints</strong></p>
<pre><code class="html">  openssl x509 -req -in client.csr -days 530 -CA intCA.crt -CAkey intCA.key -CAcreateserial -out client.crt -extfile crl_openssl.conf
</code></pre>
</li>
<li>
<p>Once certificate is Signed, the x.509 certificate will have <strong>X509v3</strong> extensions that contains CRL Distribution Points</p>
<pre><code class="html">  openssl x509 -text -in client.crt
 ......
 X509v3 extensions:
      X509v3 CRL Distribution Points: 
          Full Name:
            URI:https://8gwifi.org/intCA.crl
          Full Name:
            URI:https://8gwifi.org/intCA.der
</code></pre>
</li>
</ul>


<%@ include file="footer_adsense.jsp"%> 
<p><strong> Thanku for reading !!! Give a Share for Support</strong></p>

<hr>


      <!-- Comments Form -->
    

          <!-- Single Comment -->
 

          <!-- Comment with nested comments -->
        
          

        </div>

		
        
        <!-- Sidebar Widgets Column -->
        <div class="col-md-4">

          <!-- Ad Widget -->
         <%@ include file="footer_adsense.jsp"%> 

		 <%@ include file="related-cryptography.jsp"%>
          <!-- Article Widget -->
         <%@ include file="related-ansible.jsp"%>
         
         <%@ include file="related-kube.jsp"%>
         
         
         
         <%@ include file="related-openstack.jsp"%>
         <%@ include file="related-linux.jsp"%>
         
         
         <!-- Topic Widget -->
         <%@ include file="side.jsp"%>
         
           <!-- Add Comments Support -->
         
         
         

        </div>

      </div>
      <!-- /.row -->


	<%@ include file="addcomments.jsp"%>
    
    </div>
    
    
    
    
    <!-- /.container -->

    <!-- Footer -->
    <footer class="py-5 bg-dark">
      <div class="container">
        <p class="m-0 text-center text-white">Copyright &copy; 8gwifi.org 2018</p>
      </div>
      <!-- /.container -->
    </footer>
    
    Here

    <!-- Bootstrap core JavaScript -->
    <script src="vendor/jquery/jquery.min.js"></script>
    <script src="vendor/bootstrap/js/bootstrap.bundle.min.js"></script>


  </body>

</html>