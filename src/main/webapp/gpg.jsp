<!DOCTYPE html>
<html lang="en">

  <head>

    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">
    <meta name="description" content="gpg commands list keys,Generating Master keys,Expert Mode,Encrypting Messages with PGP Public Key,Decrypting Messages with PGP Public Key,Delete Keys,Sign Key,Create Authenticated Subkey (SSH),GnuPG for SSH authentication,GPG Character Code and Descriptions, restore keys,export keys">
    <meta name="keywords" content="gpg commands list keys,Generating Master keys,Expert Mode,Encrypting Messages with PGP Public Key,Decrypting Messages with PGP Public Key,Delete Keys,Sign Key,Create Authenticated Subkey (SSH),GnuPG for SSH authentication,GPG Character Code and Descriptions,restore keys,export keys">
    <meta name="author" content="Anish nath">
    <meta name="robots" content="index,follow" />
	<meta name="googlebot" content="index,follow" />
	<meta name="resource-type" content="document" />
	<meta name="classification" content="tools" />
	<meta name="language" content="en" />

    <title>Light Dive to GPG</title>

    <!-- Bootstrap core CSS -->
    <link href="vendor/bootstrap/css/bootstrap.min.css" rel="stylesheet">

    <!-- Custom styles for this template -->
    <link href="css/blog-post.css" rel="stylesheet">
    
    <link rel="stylesheet"  href="css/highlight/default.min.css">
	<script src="css/highlight/highlight.min.js"></script>
	<script>hljs.initHighlightingOnLoad();</script>
	
	
		<!-- JSON-LD markup generated by Google Structured Data Markup Helper. -->
<!-- JSON-LD markup generated by Google Structured Data Markup Helper. -->
<script type="application/ld+json">
{
  "@context" : "http://schema.org",
  "@type" : "Article",
  "mainEntityOfPage": {
    "@type": "WebPage",
    "@id": "https://8gwifi.org/docs/kube-dash.jsp"
  },
  "name" : "Light Dive to GPG",
  "author" : {
    "@type" : "Person",
    "name" : "Anish"
  },
  "headline": "Light Dive to GPG",
  "image":"https://www.gnupg.org/share/logo-gnupg-light-purple-bg.png",
  "datePublished" : "2018-07-27",
  "dateModified": "2018-07-27",
  "articleSection" : "Light Dive to GPG",
  "articleBody" : [ "GPG Installation", "GPG Character Code and Descriptions" "Setting up GPG store","OPenPGP Pem Formats","GPG Conventions","GPG Commands","gpg list keys","Generating Master keys (Basic Mode)","Generating Master keys (Expert Mode)","Export PGP public key from PGP private key","Sign Key","Delete Keys","Create Signature file","Detach Signature","Editing key Adding uid","Revoking key","Create Authenticated Subkey (SSH)","Gnu pg for SSH authentication"],
  "publisher" : {
    "@type" : "Organization",
    "name" : "8gwifi.org Tech Blog",
    "logo" :  {
      "@type": "ImageObject",
      "url": "https://8gwifi.org/docs/img/logo.jpg"
    }
  }
}
</script>


  </head>

  <body>

    <!-- Navigation -->
 	<%@ include file="navigation.jsp"%>

    <!-- Page Content -->
    <div class="container">

      <div class="row">

        <!-- Post Content Column -->
        <div class="col-lg-8">

          <!-- Title -->
          <h1 class="mt-4">Light Dive to GPG</h1>

          <!-- Author -->
          <p class="lead">
            by
            <a href="https://www.linkedin.com/in/anishnath">Anish</a>
            <p>Posted on Friday July 27, 2018</p>
          </p>
          
          <img class="img-fluid rounded" src="https://www.gnupg.org/share/logo-gnupg-light-purple-bg.png" height="400" width="600" alt="Referefce GNU Offical Site ">
          
          <%@ include file="footer_adsense.jsp"%>
           <%@ include file="analytics.jsp"%>
           
          <hr>

<h1 class="mt-4" id="gpg">GPG <mark>Celebrating 20 years </mark></h1>

<p><mark>GPG</mark> the GNU project is a free alternative to PGP, is encryption software that is compliant with the <mark>OpenPGP (RFC4880) </mark> standard which helps people ensure the confidentiality, integrity and assurance of their data.</p>

<p>For more reference around this project visit <a href="https://www.gnupg.org/">GNU</a></p>



<h2 class="mt-4" id="beforeyoubegin">Before you Begin</h2>

<p>The example shown in this document will only work on <strong>UNIX-based (Linux &amp; OS X) machines</strong>, </p>

<h2 class="mt-4" id="littlebackground">Little Background</h2>

<p>Understanding GPG is complex as many terms used which create confusion, The Idea of this writeup is keep things simple and aligned with the use cases which we deals in our environment. </p>

<p>GPG is fun learning, and once you understand the key concept, you will be amazed !!! how it's differ from TLS. </p>

<p>PGP is based on an <mark>introducer-model</mark> which depends on the integrity of a chain of authenticators, the <strong>users themselves</strong> which build a <strong> <mark>web-of-trust</mark></strong></p>

<p>You might found these terms <strong>OpenPGP</strong>, <strong>PGP</strong>, <strong>GPG</strong>,  <strong>GPG2</strong> when you google it which is used relatively, </p>

<ol>
<li>OpenPGP is Standard is defined in <a href="https://tools.ietf.org/html/rfc4880">IETF RFC4880</a></li>

<li>The <a href="http://www.gnupg.org/">GPG</a> software is an independent implementation of the OpenPGP standards</li>

<li>The GPG2 is a redesigned version of GPG</li>

<li>PGP : A proprietary encryption solution owned by Symantec.</li>
</ol>

<h2 class="mt-4" id="keyconceptexplainedinthisarticle">Key Concept Explained in this Article</h2>

<p>What you will going to learn after the end of this Article </p>

<ul>
<li>GPG Installation</li>

<li>Setting up GPG store </li>

<li>OPenPGP Pem Formats </li>

<li>GPG Conventions</li>

<li>GPG Character Code and Descriptions</li>

<li>GPG Commands</li>
<ul>
<li>Listing Keys </li>

<li>Generating Master keys (Basic Mode)</li>

<li>Generating Master keys (Expert Mode)</li>

<li>Export PGP public key from PGP private key</li>

<li>Import PGP private key</li>

<li>Encrypting Messages with PGP Public Key</li>

<li>Decrypting Messages with PGP Public Key</li>

<li>Delete Keys </li>

<li>Sign Key</li>

<li>Create Signature file</li>

<li>Detach Signature</li>

<li>Verify Signature</li>

<li>Editing key Adding UID</li>

<li>Revoking key</li>
</ul>

<li>Create Authenticated Subkey (SSH)</li>
<li>GnuPG for SSH authentication </li>
</ul>

<h2 class="mt-4" id="gpginstallation">GPG Installation</h2>

<h3 id="ubuntu">Ubuntu</h3>

<p>On Ubuntu, GnuPG 2.0 is available for all supported releases under the package name gnupg2</p>

<pre><code class="html">sudo apt-get install gnupg2
sudo apt-get install gnupg
sudo apt-get install rng-tools
</code></pre>

<h3 id="macosx">MacOSx</h3>

<pre><code class="html">brew install gnupg gpg-agent pinentry-mac
</code></pre>

<p>You may have to do:</p>

<pre><code class="html">export GPG_TTY=$(tty)
</code></pre>

<h3 id="linux">Linux</h3>

<pre><code class="html">yum install gpg
</code></pre>


<h2 class="mt-4" id="pemformats">OpenPGP PEM formats</h2>

<p>whenever you see message in the below formats, it's considered as PGP Messages, it contains <strong>base64 (armor)</strong> encoded messages

<table class="table table-striped">
<tr>
<th>OpenPGP Message</th>
<th>Format</th>
</tr>
<tr>
<td>
PGP Public Key
</td>
<td>
-----BEGIN PGP PUBLIC KEY BLOCK----- <br>-----END PGP PUBLIC KEY BLOCK----- 
</td>
</tr>

<tr>
<td>
PGP Private Key
</td>
<td>
 -----BEGIN PGP PRIVATE KEY BLOCK----- <br>-----END PGP PRIVATE KEY BLOCK------ 
</td>
</tr>

<tr>
<td>
PGP Message
</td>
<td>
 ----BEGIN PGP MESSAGE----- <br>-----END PGP MESSAGE-----
</td>
</tr>
</table>




<p><strong>Examples</strong> </p>

<p>A PGP Public message can be used for <strong>encrypting</strong> the message </p>

<pre><code class="html">-----BEGIN PGP PUBLIC KEY BLOCK-----
Version: BCPG v1.58

mI0EW1iMngEEAJJULdBGqKLBKQcnytCcIU9UbI+awmWn+3mTBEUENhMLIHPo3n+q
brFX/ntOvS/vDK2B1s+haXLbL9HpE+tTRD582tGnoQh4S9qbbSwfMOoh7bx+7Q9M
+SZAPl24Np+c8VqgF5ostDhzS7D9FUS4ziA+mK3tD/8/+9LkP3yE2y0pABEBAAG0
FXphcmlnYXRvbmd5QGdtYWlsLmNvbYicBBABAgAGBQJbWIyeAAoJELRQng4/pli/
kvoD/jczYnysGnv1sLFCkvR1QUHwGrFVG7m8WKY6lz9M+0Zh54OqzsPyZKdE3LMD
jCu7239Pq7L/vaaMbPLao4SePx/AaRi5wgylkvNzl5GtJVQ3PN+t5J9T0CCgSCGy
lp6BWrqz25fRTzkXCPz8Lzt1h3ROaADSPoD8CAmsl8COCciW
=dduA
-----END PGP PUBLIC KEY BLOCK-----
</code></pre>

<p>A PGP Private message can be used for <strong>decrypting</strong> the message </p>

<pre><code class="html">-----BEGIN PGP PRIVATE KEY BLOCK-----
Version: BCPG v1.58

lQH+BFtYjJ4BBACSVC3QRqiiwSkHJ8rQnCFPVGyPmsJlp/t5kwRFBDYTCyBz6N5/
qm6xV/57Tr0v7wytgdbPoWly2y/R6RPrU0Q+fNrRp6EIeEvam20sHzDqIe28fu0P
TPkmQD5duDafnPFaoBeaLLQ4c0uw/RVEuM4gPpit7Q//P/vS5D98hNstKQARAQAB
/gQDAsOHqqoXmSiSYDIcZagYAhFm1aUEa0LTyMDgOGmNrsmFOhYLFpQQbt9De03O
HUVf18pTbztKQ9/E8xM3uy7Afcm/zHpbuTdXeEmD7ukpOefxlicUhnpJpDlcnDFg
140NGY1Nr2V7rvKDU550isUwgwvL/Zgohc4Hfix0y/gNiBIDlYSwmMiRQEsf+c3r
sYtqg+FdYk3q9++PzvwlDPBG56NLOJVHAsjKBEj4XBgftmP+lNw9+MEmzKu/VUPw
UJ7Nqq6E9JSbI+LylOrZ2DF2rI+5KPt1oIlPwckH5u0XNV1tgxl3T4BjCuP9I6S3
S4H5AYTaNeQEGTaOP+88/OuNFd1L5nWTAq79aFV9G2d+7PxOZ6qcP6ETr3BcYZnU
JupsXntbltB1FgxUAzLmlRtJWVwiVTIxYaly3u/wo23TMbPVJi7PiKzmwymCDH2E
Yna4+Z9yXrkk+X8wc+ByLGWGuXRmY8xE2jsfapOyX7NAtBV6YXJpZ2F0b25neUBn
bWFpbC5jb22InAQQAQIABgUCW1iMngAKCRC0UJ4OP6ZYv5L6A/43M2J8rBp79bCx
QpL0dUFB8BqxVRu5vFimOpc/TPtGYeeDqs7D8mSnRNyzA4wru9t/T6uy/72mjGzy
2qOEnj8fwGkYucIMpZLzc5eRrSVUNzzfreSfU9AgoEghspaegVq6s9uX0U85Fwj8
/C87dYd0TmgA0j6A/AgJrJfAjgnIlg==
=BdaL
-----END PGP PRIVATE KEY BLOCK-----
</code></pre>

<p>First you need check if there is a gpg key for your ID.</p>

<h2 class="mt-4" id="gpgconventions">GPG Conventions</h2>

<p>There are many codes used in the <code>gpg</code> command output. Familiarize with then </p>

<ul>
<li><strong>sec</strong> The master/primary secret key. Contains ( key size, keyid, creation date, expiration date and fingerprint) </li>

<li><strong>ssb</strong> Secret Subkeys. These can be your sub signing key, encryption key or authentication key. Users can have multiple subkeys</li>

<li><strong>uid</strong> User information associated with the secret key. You can have multiple uids.</li>

<li><strong>pub</strong> The following is public key Information</li>

<li><strong>sec#</strong> <code>#</code> after sec means that your secret key is missing from the machine contains a refrence</li>

<li><strong>ssb></strong> <code>&gt;</code> after ssb means that your subkeys are not the machine. Instead they are on a smartcard (<strong>YubiKube</strong>)</li>

<li><strong>sub</strong> your public subkey info.</li>
</ul>

<h2 class="mt-4" id="pemformats">GPG Character Code and Descriptions</h2>
Few Important flags, which will be output during the <code>gpg --list-keys </code> or <code>gpg --list-secret-keys </code>, lets have a quick summary of thoose
<table class="table table-striped">
<tr>
<th>Flag</th>
<th>Character</th>
<th>Description</th>
</tr>
<tr>
<td>
0x01
</td>
<td>
C
</td>
<td>
Key Certification
</td>
</tr>

<tr>
<td>
0x02
</td>
<td>
S
</td>
<td>
Sign Data
</td>
</tr>

<tr>
<td>
0x04
</td>
<td>
E
</td>
<td>
Encrypted Communication
</td>
</tr>

<tr>
<td>
0x20
</td>
<td>
A
</td>
<td>
Authentication
</td>
</tr>
</table>

<h2 class="mt-4" id="settingupgpgstore">Setting up GPG store</h2>

<p>The directory <code>~/.gnupg</code> is where configuration files for GnuPG, the GNU Privacy Guard, reside</p>

<p><strong>setting up  ~/.gnupg</strong> : This can be done by issues and gpg command</p>

<pre><code class="html">$ gpg --list-keys
gpg: /Users/anish/.gnupg/trustdb.gpg: trustdb created
</code></pre>

For Any doubt check take the help <code>gpg</code> command
<pre><code class="html">$ gpg -h
</code></pre>

<h2 class="mt-4" id="gpglistkeys">GPG List Keys</h2>
<p> Well this command server two purpose, if you are running it for the first time, it will create a <strong>db </strong>  for you in your home folder location <code>~/.gnupg/</code> where all the keys,certificate will be stored</p>
<p> if the directory <code>~/.gnupg/</code>  exists, it will fetch the all the <mark>public keys only </mark>
<pre><code class="html">$ gpg --list-key
/Users/anish/.gnupg/pubring.kbx
pub   rsa1024 2018-07-25 [SCEA]
      B9DC677415D74D9FEA948D8BB4509E0E3FA658BF
uid           [ unknown] zarigatongy@gmail.com
</code></pre>

<p>Run <code>gpg --list-keys 'your uid'</code> to list the keys associated with the given <strong>uid</strong></p>

<pre><code class="html">vm2-$ gpg --list-keys 'anish'
pub   rsa2048 2018-07-25 [SC] [expires: 2020-07-24]
      8120745E3C9D01A498850EC3548E99438838675A
uid           [ultimate] Anish &lt;zarigatongy@gmail.com&gt;
sub   rsa2048 2018-07-25 [E] [expires: 2020-07-24]
</code></pre>
<p> Ok what <mark> about my private keys  </mark> where it's stored </p>

<pre><code class="html">vm2-$ gpg --list-secret-keys
</code></pre>

<p>Use the <code>gpg --list-secret-keys --keyid-format LONG</code> command to list GPG keys for which you have both a public and private key. </p>

<pre><code class="html">vm2-$ gpg --list-secret-keys --keyid-format LONG
</code></pre>

<h2 class="mt-4" id="generatingmasterkeysbasicmode">Generating Master keys (Basic Mode)</h2>

<p>Generate a new key pair with default option will not give you <strong>capabilities</strong>  option  to further secure your keys (Like Expiry/Cipher Algo preference)</p>

<pre><code class="html">vm2-$ gpg --gen-key
........    ......    ......    ......
Real name: Anish
Email address: zarigatongy@gmail.com
You selected this USER-ID:          
    "Anish &lt;zarigatongy@gmail.com&gt;"
Image gpg3/4
Change (N)ame, (E)mail, or (O)kay/(Q)uit? O
......    ......    ......    ......    ......
gpg: key 548E99438838675A marked as ultimately trusted
gpg: directory '/Users/anish/.gnupg/openpgp-revocs.d' created
gpg: revocation certificate stored as '/Users/anish/.gnupg/openpgp-revocs.d/8120745E3C9D01A498850EC3548E99438838675A.rev'
public and secret key created and signed.

pub   rsa2048 2018-07-25 [SC] [expires: 2020-07-24]
      8120745E3C9D01A498850EC3548E99438838675A
uid                      Anish &lt;zarigatongy@gmail.com&gt;
sub   rsa2048 2018-07-25 [E] [expires: 2020-07-24]
Invoke gpg --full-generate-key to expose some additional menu items.
</code></pre>

<h2 class="mt-4" id="generatingmasterkeysexpertmode">Generating Master keys (Expert Mode)</h2>

<p>Invoke <code>gpg --gen-key with the --expert flag</code> to expose some additional menu items.</p>

<ul>
<li>MacOSX <code>vm2-$ gpg --full-generate-key</code></li>

<li>Linux  <code>vm2-$ gpg  --expert --gen-key</code></li>
</ul>

<pre><code class="html">Please select what kind of key you want:
(1) RSA and RSA (default)
(2) DSA and Elgamal
(3) DSA (sign only)
(4) RSA (sign only)
(7) DSA (set your own capabilities)
(8) RSA (set your own capabilities)
</code></pre>

<p>Choose the Algorithm from the given option <strong>(RSA/DSA/Elgamal)</strong></p>

<blockquote>
  <p><code>Your selection? 4</code></p>

<pre><code class="html">RSA keys may be between 1024 and 4096 bits long.
What keysize do you want? (2048) 
Requested keysize is 2048 bits
</code></pre>
</blockquote>

<pre><code class="html">Please specify how long the key should be valid.
         0 = key does not expire
      &lt;n&gt;  = key expires in n days
      &lt;n&gt;w = key expires in n weeks
      &lt;n&gt;m = key expires in n months
      &lt;n&gt;y = key expires in n years
</code></pre>

<p>Specifying the Key Expiry Data, Based on the type of Key <strong>Harden your Expiry requirement here</strong> </p>

<blockquote>
  <p>Key is valid for? (0) 3y</p>
</blockquote>

<pre><code class="html">    Key expires at Sat Jul 24 21:06:35 2021 IST
    Is this correct? (y/N) 
    GnuPG needs to construct a user ID to identify your key.
</code></pre>

<p>Associate <strong>Identity</strong>  to this key</p>

<blockquote>
<pre><code class="html">Real name: anishn
Email address: zarigatongy@gmail.com
Comment: MySecureKey
</code></pre>
  
  <p>Change (N)ame, (C)omment, (E)mail or (O)kay/(Q)uit?  O</p>
</blockquote>

<p>List out your <strong>Public Keys</strong></p>

<pre><code class="html"> vm2-$ gpg --list-keys
/root/.gnupg/pubring.gpg
------------------------
pub   2048R/9605D032 2018-07-26 [expires: 2021-07-25]
uid                  anishn (MySecureKey) &lt;zarigatongy@gmail.com&gt;
</code></pre>

<p>List out your <strong>Private Keys</strong></p>

<pre><code class="html">vm2-$  gpg --list-secret-keys
/root/.gnupg/secring.gpg
------------------------
sec 2048R/9605D032 2018-07-26 [expires: 2021-07-25]
uid  anishn (MySecureKey) &lt;zarigatongy@gmail.com&gt;
</code></pre>

<h2 class="mt-4" id="encryptingmessageswithpgppublickey">Encrypting Messages with PGP Public Key</h2>

<p>Use the <code>gpg --armor --encrypt --recipient &lt;uid&gt;</code> command to encrypt the message. The <strong>--armor</strong>  option  will output the encrypted message in <strong>base64 encoded</strong></p>

<p><strong>Text Encyption</strong></p>

<pre><code class="html">vm2-$ echo "Hello 8gwifi.org" | gpg --armor --encrypt --recipient zarigatongy@gmail.com &gt; pgpencypted.txt 
gpg: B4509E0E3FA658BF: There is no assurance this key belongs to the named user
pub  rsa1024/B4509E0E3FA658BF 2018-07-25 zarigatongy@gmail.com
 Primary key fingerprint: B9DC 6774 15D7 4D9F EA94  8D8B B450 9E0E 3FA6 58BF
</code></pre>

<p>The <strong>armor</strong> output PGP Message </p>

<pre><code class="html">vm2-$ cat pgpencypted.txt 
-----BEGIN PGP MESSAGE-----

hIwDtFCeDj+mWL8BA/9S2AZauDug0lzHl6Qc2qkqhKQ+dVUZ9xdi3leUA36Pr9BH
v9JmccnJbQCc69mth3a/paK4nVYy/APoI+5n5X4HU+K3Vl47aGAxj4R2oitR5V5Z
zUvJb7pOR2SZ9tEq/995ZTqzVVy8pmLzKFZklUj7JxALH3Hs533hQAfIx6htLtI+
AXJ+L3vwHM1N6XjjSjGJAFw3diQtNyeCHwLGU+u6DHFf3AS234PPE3Vj2tr1bjSo
zB5XDTtHXiLpkwZQdOI=
=7d1u
-----END PGP MESSAGE-----
</code></pre>

<p><strong>File Encryption</strong> </p>

<pre><code class="html">gpg -r email.address@domain.com --encrypt file-to-encrypt
</code></pre>

<h2 class="mt-4" id="decryptingmessageswithpgppublickey">Decrypting Messages with PGP Public Key</h2>

<p>Use the <code>gpg --output decrypted.txt --no-tty &lt;filename&gt;</code> command to decrypt the message. </p>

<pre><code class="html">vm2-$ gpg --output decrypted.txt --no-tty pgpencypted.txt 
</code></pre>

<p><img src="/img/gpg.png" alt="Pasword Prompt" /></p>
<pre><code class="html">gpg: WARNING: no command supplied.  Trying to guess what you mean ...
gpg: encrypted with 2048-bit RSA key, ID 1AFA5B35FAA8D03B, created 2018-07-25
"Anish <a href="&#109;&#97;&#105;l&#116;o:&#x7a;&#x61;&#x72;&#x69;&#103;a&#x74;o&#x6e;g&#x79;&#64;&#x67;m&#97;&#x69;&#108;.&#x63;&#x6f;&#109;">&#x7a;&#x61;&#x72;&#x69;&#103;a&#x74;o&#x6e;g&#x79;&#64;&#x67;m&#97;&#x69;&#108;.&#x63;&#x6f;&#109;</a>"</code></pre>

<p>Verify the output of the file </p>

<pre><code class="html">vm2-$ cat decrypted.txt
Hello 8gwifi
</code></pre>

<h2 class="mt-4" id="importprivatekey">Import private key</h2>

<pre><code class="html">Use the `gpg --import  &lt;filename&gt; ` command to import your  pgp private key 
vm2-$ gpg --import privkey.pem 
</code></pre>

<p><img src="https://8gwifi.org/docs/img/gpg.png" alt="enter image description here" /> </p>
<pre><code class="html">gpg: key B4509E0E3FA658BF: public key "zarigatongy@gmail.com" imported
gpg: key B4509E0E3FA658BF: secret key imported
gpg: Total number processed: 1
gpg:               imported: 1
gpg:       secret keys read: 1
gpg:   secret keys imported: 1    
</code></pre>
<h2 class="mt-4" id="exportpgppublickeyfrompgpprivatekey">Export PGP public key from PGP private key</h2>

<p>use the <code>gpg --export &lt;fingerprint&gt;</code> or <code>gpg --export &lt;uid&gt;</code> option to export public key </p>

<p><strong>This will Export in Binary format</strong> </p>

<pre><code class="html">vm2-$  gpg --export 8120745E3C9D01A498850EC3548E99438838675A &gt; pub.gpg
</code></pre>

<p><strong>ASCII-armoured public key.</strong></p>

<pre><code class="html">vm2-$  gpg -a --export 8120745E3C9D01A498850EC3548E99438838675A &gt; pub.asc
</code></pre>

<p>or</p>

<pre><code class="html">gpg -a --export anishn &gt; pub.asc

vm2-$ cat pub.asc 
</code></pre>

<p><strong>The PGP Public Key file</strong> </p>

<pre><code class="html"> -----BEGIN PGP PUBLIC KEY BLOCK-----
    mQENBFtYkZwBCACk/0K0e4V46ZOk42Roa+HvZNTY7u76yrvN0YyuI8ZR0h/m7u/H
    4bIk9R/e7PgbnP+MjSJGcZMa+Eq6bk1848mS7rZXdeF7TZN3oc1efKg6oOFQKcpB
    ........
    ........
    -----END PGP PUBLIC KEY BLOCK-----
</code></pre>

<p><em>Now using this PGP Public key Message can be encrypted</em> </p>

<h2 class="mt-4" id="backup">Use Export Option to Backup PGP keys </h2>
<p>generate base64-encoded <mark>armored</mark> backups</p>
<pre><code class="html">
gpg --armor --export > pgp-public-keys.asc
gpg --armor --export-secret-keys > pgp-private-keys.asc
gpg --export-ownertrust > pgp-ownertrust.asc
</code></pre>

<p><strong> To restore it</strong></p>

<pre><code class="html">gpg --import pgp-public-keys.asc
gpg --import pgp-private-keys.asc
gpg --import-ownertrust pgp-ownertrust.asc</code></pre>

<h2 class="mt-4" id="uploadthekeytothekeyservernetwork">Upload the key to the key server network</h2>

<p>Usually, keys are distributed using the key server network. Uploading your public key is very easy using the <code>--send-key</code> command.</p>

<pre><code class="html">gpg --send-key [key-id]
</code></pre>

<h2 class="mt-4" id="searchandreceiveyourkeybyexecuting">Search and receive your key by executing</h2>

<p>Search and receive your key by executing </p>

<pre><code class="html">gpg --search [mail address]
gpg --recv-key [key-id]
</code></pre>

<h2 class="mt-4" id="editkeys">Edit Keys</h2>

<p>you can edit your existing keys to perform many function offered by GPG, use the <code>gpg --edit-key &lt;id&gt;</code> command </p>

<pre><code class="html">gpg --edit-key D3CEAB0F
</code></pre>

<p>Few example of performing -<strong>-edit-key</strong> operation </p>

<h3 id="addinganotheruid">Adding Another UID</h3>
In this example we are <mark>associating an email with your GPG key id name D3CEAB0F </mark>

<pre><code class="html">gpg&gt; adduid
Real name: anish2
Email address: anish2@xyz.com
Comment: mysecondkey
You selected this USER-ID:
"anish2 (mysecondkey) &lt;anish2@xyz.com&gt;"
Change (N)ame, (C)omment, (E)mail or (O)kay/(Q)uit? O
</code></pre>

<p>At the end you will see another key is added not the <strong>trust</strong> level is set to unknown here <strong>key2</strong></p>

<blockquote>
<pre><code class="html">pub  2048R/D3CEAB0F  created: 2018-07-26  expires: 2021-07-25  usage: SC
trust: ultimate  validity: ultimate
[ultimate] (1)  anishn (My Trustedkey) &lt;zarigatongy@gmail.com&gt;
[ unknown] (2). anish2 (mysecondkey) &lt;anish2@xyz.com&gt;
</code></pre>
  
  <p>Finally Save the configuration</p>
</blockquote>

<pre><code class="html">gpg&gt; save
</code></pre>

<p>List key will show newly added key with the new Identity associated <strong>with your public key</strong> </p>

<pre><code class="html"> vm2-$ gpg --list-key
/root/.gnupg/pubring.gpg
------------------------
pub 2048R/D3CEAB0F 2018-07-26 [expires: 2021-07-25]
uid  anish2 (mysecondkey) &lt;anish2@xyz.com&gt;
uid  anishn (My Trustedkey) &lt;zarigatongy@gmail.com&gt;
</code></pre>

<h3 id="changingtrustlevel">Changing Trust Level</h3>

<p>change the trust level of your key by using the command   <code>gpg --edit-key &lt;key-id&gt; trust</code>
Decide the trust level</p>

<pre><code class="html">1 = I don't know or won't say
2 = I do NOT trust
3 = I trust marginally
4 = I trust fully
5 = I trust ultimately
m = back to the main menu
</code></pre>

<h3 id="revokingthekey">Revoking the key</h3>

<p>vm2-$ gpg --edit-key anishn</p>

<pre><code class="html">pub  2048R/A31E5C75  created: 2018-07-26  expires: 2021-07-25  usage: SC  
                     trust: ultimate      validity: ultimate
sub  2048R/20EE3BF8  created: 2018-07-26  expires: 2021-07-25  usage: A   
[ultimate] (1). anishn (MySecure Key) &lt;zarigatongy@gmail.com&gt;
</code></pre>

<p><strong>Select Which key need to revoked,</strong> </p>

<blockquote>
  <p>gpg> key 1</p>
</blockquote>

<pre><code class="html">pub  2048R/A31E5C75  created: 2018-07-26  expires: 2021-07-25  usage: SC  
                     trust: ultimate      validity: ultimate
sub* 2048R/20EE3BF8  created: 2018-07-26  expires: 2021-07-25  usage: A   
[ultimate] (1). anishn (MySecure Key) &lt;zarigatongy@gmail.com&gt;
</code></pre>

<p>Issue the <strong>revkey</strong> command</p>

<blockquote>
  <p>gpg> revkey</p>
</blockquote>

<pre><code class="html">Do you really want to revoke this subkey? (y/N) y
Please select the reason for the revocation:
  0 = No reason specified
  1 = Key has been compromised
  2 = Key is superseded
  3 = Key is no longer used
  Q = Cancel
Your decision? 0
Enter an optional description; end it with an empty line:
&gt; 
Reason for revocation: No reason specified
(No description given)
Is this okay? (y/N) y
</code></pre>

<p>It requires passphrase of unlocking , Provide the password </p>

<pre><code class="html">You need a passphrase to unlock the secret key for
user: "anishn (MySecure Key) &lt;zarigatongy@gmail.com&gt;"
2048-bit RSA key, ID A31E5C75, created 2018-07-26

pub  2048R/A31E5C75  created: 2018-07-26  expires: 2021-07-25  usage: SC  
                     trust: ultimate      validity: ultimate
This key was revoked on 2018-07-26 by RSA key A31E5C75 anishn (MySecure Key) &lt;zarigatongy@gmail.com&gt;
sub  2048R/20EE3BF8  created: 2018-07-26  revoked: 2018-07-26  usage: A   
[ultimate] (1). anishn (MySecure Key) &lt;zarigatongy@gmail.com&gt;

gpg&gt; save
</code></pre>

<h2 class="mt-4" id="deletekeys">Delete Keys</h2>

<p>use option <code>gpg --delete-secret-keys</code> to delete the secret key first 
use the <code>gpg --delete-key &lt;fingerprint&gt;</code> or <code>gpg --delete-key &lt;uid&gt;</code> to delete the key </p>

<pre><code class="html">vm2-$ gpg --delete-secret-keys  zarigatongy@gmail.com
</code></pre>

<p>It will prompt for confirmation <br />
<img src="/img/gpg5.png" alt="enter image description here" />
   Then delete the key 
    vm2-$ gpg --delete-key zarigatongy@gmail.com</p>

<h2 class="mt-4" id="singinguserkey">Singing user key</h2>

<p>When you sign the key, it means you verify that you trust the person is who they claim to be
use option <code>gpg --sign-key  &lt;uid&gt;</code> to sign the user key </p>

<pre><code class="html">vm2-$ gpg --sign-key zarigatongy@gmail.com
</code></pre>

<pre><code class="html">pub  rsa1024/B4509E0E3FA658BF
     created: 2018-07-25  expires: never       usage: SCEA
     trust: unknown       validity: unknown
[ unknown] (1). zarigatongy@gmail.com


pub  rsa1024/B4509E0E3FA658BF
     created: 2018-07-25  expires: never       usage: SCEA
     trust: unknown       validity: unknown
 Primary key fingerprint: B9DC 6774 15D7 4D9F EA94  8D8B B450 9E0E 3FA6 58BF

     zarigatongy@gmail.com

Are you sure that you want to sign this key with your
key "Anish &lt;zarigatongy@gmail.com&gt;" (548E99438838675A)
Image gpg6

Really sign? (y/N) y
</code></pre>

<p>vm2-$ gpg --output signed.key --export --armor zarigatongy@gmail.com</p>

<h2 class="mt-4" id="creatingsignatureforfile">Creating Signature for file</h2>

<p>To create Signature of any given file, <strong>this will use default-key</strong></p>

<pre><code class="html">gpg --output out.sig --sign filename
</code></pre>

<p>To create signature with different key add  <code>--local-user &lt;uid&gt;</code> option </p>

<pre><code class="html">gpg --local-user test3 --output out.sig --sign filename
You need a passphrase to unlock the secret key for
user: "test3"
1024-bit RSA key, ID 57ED5CD6, created 2018-07-26
</code></pre>

<p>The document is compressed before signed, <strong>and the output is in binary format.</strong></p>

<h2 class="mt-4" id="detachedsignature">Detached Signature</h2>

<p>A detached signature is created using the <strong>--detach-sig</strong> option.</p>

<p>To detach signature <strong>not signed by default key</strong>  pass the <strong>--local-user <uid></strong></p>

<pre><code class="html">gpg --local-user test3 --output out.sig --detach-sig filename
</code></pre>

<p>With default key <code>gpg  --output out.sig --detach-sig filename</code></p>

<h2 class="mt-4" id="verifyingsignature">Verifying Signature</h2>

<p>After detaching the signature ato verify the signature. <strong>The --verify</strong> option can be to check the signature.</p>

<pre><code class="html">gpg --verify out.sig doc
gpg: Signature made Thu 26 Jul 2018 11:18:33 AM EDT using RSA key ID D3CEAB0F
gpg: Good signature from "anish2 (mysecondkey) &lt;anish2@xyz.com&gt;"
gpg: aka "anishn (My Trustedkey) &lt;zarigatongy@gmail.com&gt;"
gpg: WARNING: This key is not certified with a trusted signature!
gpg:  There is no indication that the signature belongs to the owner.
Primary key fingerprint: 88C4 A883 500D D788 2B0C  7082 372B B5E9 D3CE AB0F
</code></pre>

<h2 class="mt-4" id="createauthenticatekeyssh">Create Authenticate key (SSH)</h2>

<p>In this example we will add a new key that will be used for <strong>SSH Authentication</strong> </p>

<p>Edit your OpenPGP key such as the following:</p>

<pre><code class="html">vm2-$ gpg --expert --edit-key anishn
</code></pre>

<blockquote>
<pre><code class="html">gpg&gt; addkey
Key is protected.
</code></pre>
</blockquote>

<p>You need a passphrase to unlock the secret key for
Once password is <strong>verified</strong>  it will prompt for the menu</p>

<pre><code class="html">Please select what kind of key you want:
   (3) DSA (sign only)
   (4) RSA (sign only)
   (5) Elgamal (encrypt only)
   (6) RSA (encrypt only)
   (7) DSA (set your own capabilities)
   (8) RSA (set your own capabilities)
  (10) ECC (sign only)
  (11) ECC (set your own capabilities)
  (12) ECC (encrypt only)
  (13) Existing key
</code></pre>

<p><strong>Select (8) RSA (set your own capabilities):</strong></p>

<blockquote>
  <p>Your selection? 8</p>
</blockquote>

<p><strong>Select successively (S), (E), and (A)</strong> to remove the signing and encryption capabilities and enable the authentication capability.
Possible actions for a RSA key: Sign Encrypt Authenticate 
Current allowed actions: Sign Encrypt </p>

<pre><code class="html"> **(S) Toggle the sign capability**
   (E) Toggle the encrypt capability
   (A) Toggle the authenticate capability
   (Q) Finished

**Your selection? S**
</code></pre>

<p>Select <strong>E</strong> on the Next Prompt</p>

<pre><code class="html">   (S) Toggle the sign capability
   **(E) Toggle the encrypt capability**
   (A) Toggle the authenticate capability
   (Q) Finished

**Your selection? E**
</code></pre>

<p><strong>select A    (Toggle the authenticate capability)</strong>          </p>

<pre><code class="html">Possible actions for a RSA key: Sign Encrypt Authenticate 
Current allowed actions: 
   (S) Toggle the sign capability
   (E) Toggle the encrypt capability
   **(A) Toggle the authenticate capability**
   (Q) Finished

**Your selection? A**

Finally Finished by Selecting  Q          
Possible actions for a RSA key: Sign Encrypt Authenticate 
Current allowed actions: Authenticate 

   (S) Toggle the sign capability
   (E) Toggle the encrypt capability
   (A) Toggle the authenticate capability
   **(Q) Finished**
select (Q) Finished to exit this sub-menu. The remaining of the procedure is like any other key generation:

**Your selection? Q**
</code></pre>

<p><strong>Configure RSA Keys (2048 Bits )</strong></p>

<pre><code class="html">RSA keys may be between 1024 and 4096 bits long.
What keysize do you want? (2048) 
Requested keysize is 2048 bits   
</code></pre>

<p>Setup Expiry </p>

<pre><code class="html">Please specify how long the key should be valid.
         0 = key does not expire
      &lt;n&gt;  = key expires in n days
      &lt;n&gt;w = key expires in n weeks
      &lt;n&gt;m = key expires in n months
      &lt;n&gt;y = key expires in n years
**Key is valid for? (0) 1y**
Key expires at Thu Jul 25 21:23:31 2019 IST
Is this correct? (y/N) y
Really create? (y/N) y  
........
</code></pre>

<p><strong><em>At the end Notice the usgae is set to A</em></strong></p>

<pre><code class="html">pub  2048R/D3CEAB0F  created: 2018-07-26  expires: 2021-07-25  usage: SC
trust: full  validity: unknown
sub  2048R/6445A49E  created: 2018-07-26  expires: 2019-07-26  **usage: A**
[ unknown] (1). anish2 (mysecondkey) &lt;anish2@xyz.com&gt;
[ unknown] (2)  anishn (My Trustedkey) &lt;zarigatongy@gmail.com&gt;
gpg&gt; quit
Save changes? (y/N) y
</code></pre>

<h2 class="mt-4" id="exportsubkey">Export  Subkey</h2>

<p>Export your subkey by replacing key-id with the eight-character key ID :</p>

<pre><code class="html">vm2-$ gpg -a --export-secret-subkeys  20EE3BF8 &gt;&gt; mysub.key
</code></pre>

<p>Sample Output</p>

<pre><code class="html">  vm2-$ cat mysub.key 
    -----BEGIN PGP PRIVATE KEY BLOCK-----
    ......................
    lQM2BFtYmZwRCACB+Umh4N1LSpWzm4sDHI0dhiykpdPWIQ9ADMMJD/NxsTMQvCfO
    ......................
    ......................
    -----END PGP PRIVATE KEY BLOCK-----
</code></pre>

<h1 class="mt-4" id="gnupgforsshauthentication">GnuPG for SSH authentication</h1>

<p>To use PGP keys as authentication keys, <em>first create the Authentication key,</em> which is explained earlier </p>

<p>Install necessary Packages , <strong>monkeysphere</strong> provides <strong><em>openpgp2ssh</em></strong></p>

<pre><code class="html">apt-get install monkeysphere
apt-get install rng-tools
apt-get install gnupg-agent
</code></pre>

<ol>
<li>Start gpg-agent <code>eval $( gpg-agent --daemon --disable-scdaemon --enable-ssh-support )</code></li>

<li>Verify Agent is running </li>
</ol>

<pre><code class="html">    vm2-$ eval `ssh-agent -s`
    Agent pid 13138
</code></pre>

<ol>
<li>Export the  <strong>Authentication key</strong></li>
</ol>

<pre><code class="html">    vm2-$ gpg  --export-options export-reset-subkey-passwd,export-minimal,no-export-attributes --export-secret-subkeys 20EE3BF8 | openpgp2ssh 20EE3BF8 &gt;  '.anishn'
</code></pre>

<ol>
<li>Add this key in <code>~/.gnupg/private-keys-v1.d/</code></li>
</ol>

<pre><code class="html"> vm2-$ ssh-add '.anishn'
Identity added: .anishn (.anishn)
</code></pre>

<p>This will store a copy of the key in <strong>~/.gnupg/private-keys-v1.d/</strong>. It will also add the keygrp of the subkey to <strong>~/.gnupg/sshcontrol.</strong></p>

<ol>
<li>Verify </li>
</ol>

<pre><code class="html">vm2-$ ls -l ~/.gnupg/private-keys-v1.d/
total 4
-rw-r----- 1 root root 1194 Jul 26 00:21 40B0A8A78B1E9153848E820D80573E3906B1A390.key
</code></pre>

<ol>
<li>Serve Your GPG key Instead of an SSH key
To check that it has worked you can do ssh-add -l</li>
</ol>

<pre><code class="html">    vm2-$ ssh-add -l
    2048 02:b2:c5:0f:e9:3a:66:fe:79:5d:4f:07:e7:dc:5a:8a .anishn (RSA)
</code></pre>

<pre><code class="html">vm2-$ ssh-add -L
ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDb7PMpbTnh1UF3RpcKZBPwIf0NhkFc8uD5U1w9yrD0FtyT20c2H+EsZxJtb1cu/huQ/UG1opVWtucCvH/6sF2F+K2mnUmUIlqS+zlZAKJKd6Jf0Zo7hSgKCgYkiUevuTr5GFVxDQw5PTHYHjay2NXHvUF/mp7A9XfqeuK8MX9iL1nh+sp2vAF7dtNGpn3IRGwEZFYFO0arUIsiqEvazm1sWEQKRxQl/KHn8O0TisGJLvh2T48rDIJ5HEO1Lax6ZULnWPFnsMP84jLW1tA4eBkZ+CPqYnua5Y/rXjYjaW1XrBI7GAtmJ5FHsv4TMKGN3cwTc83HVag0TFL1qmdOkov9 .anishn
</code></pre>

<ol>
<li>Save this Key to a file  <code>ssh-add -L &gt;&gt; authorized_keys</code></li>

<li>copy this authorized key to the remote machine</li>
</ol>

<pre><code class="html">vm2-$ scp authorized_keys adminuser@192.168.1.7:~/.ssh/
adminuser@192.168.1.7's password: 
authorized_keys                                                                                                                            100%  776     0.8KB/s   00:00
</code></pre>

<ol>
<li>Verify the Login </li>
</ol>

<pre><code class="html">vm2-$ ssh adminuser@192.168.1.7
Welcome to Ubuntu 14.04.1 LTS (GNU/Linux 3.13.0-32-generic x86_64)
</code></pre>

<ol>
<li><p>start <strong>gpg-agent</strong> automatically, Edit the <strong>~/.bash_profile</strong> </p>

<p>if [ -f "${HOME}/.gpg-agent-info" ]; then
     source "${HOME}/.gpg-agent-info"
       export GPG<em>AGENT</em>INFO
       export SSH<em>AUTH</em>SOCK
       export SSH<em>AGENT</em>PID
else
    eval $( gpg-agent --daemon --write-env-file ~/.gpg-agent-info )
fi</p></li>

<li><p>Create <strong>~/.gnupg/gpg-agent.conf</strong> </p>

<p>default-cache-ttl 3600
max-cache-ttl 7200
enable-ssh-support
write-env-file ~/.gpg-agent-info</p></li>
</ol>

<p>Thanks for reading .. </p>

<p><strong> Thanku for reading !!! Give a Share for Support</strong></p>


<hr>


      <!-- Comments Form -->
    

          <!-- Single Comment -->
 

          <!-- Comment with nested comments -->
        
          

        </div>

		
        
        <!-- Sidebar Widgets Column -->
        <div class="col-md-4">

          <!-- Ad Widget -->
         <%@ include file="footer_adsense.jsp"%> 
         
         <%@ include file="related-cryptography.jsp"%>
         
         <%@ include file="related-linux.jsp"%>

          <!-- Article Widget -->
         <%@ include file="related-ansible.jsp"%>
         
         <%@ include file="related-kube.jsp"%>
         
         <%@ include file="related-openstack.jsp"%>
         
         <!-- Topic Widget -->
         <%@ include file="side.jsp"%>
         
           <!-- Add Comments Support -->
         
         
         

        </div>

      </div>
      <!-- /.row -->


	<%@ include file="addcomments.jsp"%>
    
    </div>
    
    
    
    
    <!-- /.container -->

    <!-- Footer -->
    <footer class="py-5 bg-dark">
      <div class="container">
        <p class="m-0 text-center text-white">Copyright &copy; 8gwifi.org 2018</p>
      </div>
      <!-- /.container -->
    </footer>
    
    Here

    <!-- Bootstrap core JavaScript -->
    <script src="vendor/jquery/jquery.min.js"></script>
    <script src="vendor/bootstrap/js/bootstrap.bundle.min.js"></script>


  </body>

</html>