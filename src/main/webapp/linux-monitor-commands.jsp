<!DOCTYPE html>
<html lang="en">

  <head>

    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">
    <meta name="description" content="How to Monitoring All Executed Commands in Linux, accton and monitor changes in file, Summarizes accounting sa,Print statistics about users sc,lastcomm,last">
    <meta name="keywords" content="How to Monitoring All Executed Commands in Linux, accton and monitor changes in file, Summarizes accounting sa,Print statistics about users sc,lastcomm,last, linux interview questions, linux watch command,linux inotifywait">
    <meta name="author" content="Anish nath">
    <meta name="robots" content="index,follow" />
	<meta name="googlebot" content="index,follow" />
	<meta name="resource-type" content="document" />
	<meta name="classification" content="tools" />
	<meta name="language" content="en" />

    <title>How to Monitoring All Executed Commands in Linux, accton and monitor changes in file </title>

    <!-- Bootstrap core CSS -->
    <link href="vendor/bootstrap/css/bootstrap.min.css" rel="stylesheet">

    <!-- Custom styles for this template -->
    <link href="css/blog-post.css" rel="stylesheet">
    
    <link rel="stylesheet"  href="css/highlight/default.min.css">
	<script src="css/highlight/highlight.min.js"></script>
	<script>hljs.initHighlightingOnLoad();</script>
	
	
		<!-- JSON-LD markup generated by Google Structured Data Markup Helper. -->
<script type="application/ld+json">
{
  "@context" : "http://schema.org",
  "@type" : "Article",
  "mainEntityOfPage": {
    "@type": "WebPage",
    "@id": "https://8gwifi.org/docs/linux-monitor-commands.jsp"
  },
  "name" : "How to Monitoring All Executed Commands in Linux, accton and monitor changes in file",
  "author" : {
    "@type" : "Person",
    "name" : "Anish"
  },
  "headline": "How to Monitoring All Executed Commands in Linux",
  "image":"https://8gwifi.org/docs/img/linux-file-monitor.png",
  "datePublished" : "2018-08-21",
  "dateModified": "2018-08-21",
  "articleSection" : "How to Monitoring All Executed Commands in Linux",
  "articleBody" : [ "How to Monitoring All Executed Commands in Linux","accton","Install psacct or acct","Summarizes accounting (SA)","acct","savacct","usracct","Print statistics about users (ac)","LASTCOMM","LAST","Wtmp","Monitor changes in File","watch","inotifywait"],
  "publisher" : {
    "@type" : "Organization",
    "name" : "8gwifi.org Tech Blog",
    "logo" :   {
      "@type": "ImageObject",
      "url": "https://8gwifi.org/docs/img/logo.jpg"
    }
  }
}
</script>


  </head>

  <body>

    <!-- Navigation -->
   <%@ include file="navigation.jsp"%> 

    <!-- Page Content -->
    <div class="container">

      <div class="row">

        <!-- Post Content Column -->
        <div class="col-lg-8">

          <!-- Title -->
          <h1 class="mt-4">How to Monitoring All Executed Commands in Linux</h1>

          <!-- Author -->
          <p class="lead">
            by
            <a href="https://www.linkedin.com/in/anishnath">Anish</a>
          </p>

          <hr>

          <!-- Date/Time -->
          <p>Posted on Tuesday August 21</p>

          <hr>

        
 
          <img class="img-fluid rounded" src="img/linux-file-monitor.png" alt="Referefce 8gwifi.org">

           <%@ include file="footer_adsense.jsp"%>
           <%@ include file="analytics.jsp"%>

          <hr>

          <!-- Post Content -->
        <h2 class="mt-4">Introduction </h3>

<p>To safeguards the production environment requires additional control. This can be achieve through logging the user activity and this will be rescued in the scenario like  investigating suspicious activity happening on that environment.</p>
<p>The Linux  kernel can record a lot of information about processes as they exit. In this article we will go though one of command that can help for audit trail and detective work.</p>
<p>The  <code>accton</code>  command enables process accounting, and specifies the file used for the audit trail i.e <code>/var/account/pacct</code> .</p>
<p>This file must already exist, so manually create an empty file first if necessary, carefully restricting access to prevent public viewing of the sensitive accounting data.</p>
<p>If the filename is omitted, then the  <code>accton</code>  command disables process accounting.</p>
<ul>
<li>
<p>Prepare the file</p>
<pre><code class="html">   umask 077
  touch /var/account/pacct
</code></pre>
</li>
<li>
<p>Install psacct or acct</p>
<pre><code class="html">   RHEL :  yum install psacct
  Ubuntu : sudo apt-get install acct
</code></pre>
</li>
<li>
<p>Check the status of psacct if itâ€™s not started then start it</p>
<pre><code class="html">   systemctl status psacct
  psacct.service - Kernel process accounting
  Loaded: loaded (/usr/lib/systemd/system/psacct.service; disabled; vendor preset: disabled)
  Active: inactive (dead)
</code></pre>
</li>
<li>
<p>Start the psacct service<br>
Centos7.x/RHEL7.x</p>
<pre><code class="html">systemctl start psacct
systemctl status psacct

psacct.service - Kernel process accounting
Loaded: loaded (/usr/lib/systemd/system/psacct.service; enabled; vendor preset: disabled)
Active: **active (exited)** since Tue 2018-08-21 05:17:41 EDT; 56min ago
Main PID: 9124 (code=exited, status=0/SUCCESS)
CGroup: /system.slice/psacct.service
Aug 21 05:17:41 host-192-0-2-74 systemd[1]: Starting Kernel process accounting...
Aug 21 05:17:41 host-192-0-2-74 accton[9124]: Turning on process accounting, file set to '/var/account/pacct'.
Aug 21 05:17:41 host-192-0-2-74 systemd[1]: Started Kernel process accounting.
</code></pre>
<p>Centos6.x/RHEl6.x</p>
<pre><code class="html">   /etc/init.d/psacct start
  /etc/init.d/acct start    # In Ubuntu
</code></pre>
</li>
<li>
<p>Enable this changes in Linux runlevel</p>
<pre><code class="html">   chkconfig psacct on
</code></pre>
</li>

<li>
<p>Note: Logrotate file for psacct, other wise your system will fill-up immediately. In centos/rhel the daily rotation specified in the file <code> /etc/logrotate.d/psacct </code></p>
<pre><code class="html">/var/account/pacct {
    compress
    delaycompress
    notifempty
    daily
    rotate 31
    create 0600 root root
    postrotate
       if /usr/bin/systemctl --quiet is-active psacct.service ; then
           /usr/sbin/accton /var/account/pacct | /usr/bin/grep -v "Turning on process accounting, file set to '/var/account/pacct'." | /usr/bin/cat
       fi
    endscript
}</code></pre>
</li>


</ul>

<h2 class="mt-4"><a id="Summarizes_accounting_SA_77"></a>Summarizes accounting (SA)</h2>
<p>The Linux <strong>sa</strong> summarizes information about previously executed commands as recorded in the acct file.  In addition, it condenses this data into a summary file named <strong>savacct</strong> which contains the number of times the command was called and the system resources used.  The information can also be summarized on a per-user basis;</p>
<p><strong>Files Used</strong></p>
<table class="table table-striped table-bordered">
<thead>
<tr>
<th>fileName</th>
<th>Description</th>
</tr>
</thead>
<tbody>
<tr>
<td>acct</td>
<td>The raw system wide process accounting file</td>
</tr>
<tr>
<td>savacct</td>
<td>A summary of system process accounting sorted by command</td>
</tr>
<tr>
<td>usracct</td>
<td>A summary of system process accounting sorted by user ID</td>
</tr>
</tbody>
</table>
<p><strong>sa output summary</strong></p>
<table class="table table-striped table-bordered">
<thead>
<tr>
<th>label</th>
<th>description</th>
</tr>
</thead>
<tbody>
<tr>
<td>cpu</td>
<td>sum of system and user time in cpu minutes</td>
</tr>
<tr>
<td>re</td>
<td>Elapsed time in minutes</td>
</tr>
<tr>
<td>k</td>
<td>cpu-time averaged core usage, in 1k units</td>
</tr>
<tr>
<td>avio</td>
<td>average number of I/O operations per execution</td>
</tr>
<tr>
<td>tio</td>
<td>total number of I/O operations</td>
</tr>
<tr>
<td>k*sec</td>
<td>cpu storage integral (kilo-core seconds)</td>
</tr>
<tr>
<td>u</td>
<td>user cpu time in cpu seconds</td>
</tr>
<tr>
<td>s</td>
<td>system time in cpu seconds</td>
</tr>
</tbody>
</table>
<p><strong>Command Options</strong></p>
<ul>
<li>
<p>If no arguments are specified, <strong>sa</strong> will print information about all of the commands in the acct file</p>
<pre><code class="html">   # sa
  294     428.58re       0.01cp         0avio     23947k
  29     277.34re       0.00cp         0avio     14085k   ***other*
  14       0.00re       0.00cp         0avio     29616k   troff
  14      14.45re       0.00cp         0avio     29712k   man
  98       0.00re       0.00cp         0avio     29770k   man*
  14      14.44re       0.00cp         0avio     27584k   less
  14       0.01re       0.00cp         0avio     28288k   nroff
  14       0.01re       0.00cp         0avio      3190k   groff
  14       0.01re       0.00cp         0avio     29200k   grotty
  14       0.00re       0.00cp         0avio      3198k   tbl
</code></pre>
</li>
<li>
<p>User Summary <code>sa -m</code><br>
this command will print  the number of processes and number of CPU minutes on a per-user basis</p>
<pre><code class="html"># sa -m 
                               330     446.58re       0.01cp         0avio     24026k
     root                      330     446.58re       0.01cp         0avio     24026k
</code></pre>
</li>
<li>
<p>Show userid and command name  executed by each user with <code>sa -u</code></p>
<pre><code class="html">   sa -u 
  ansible    0.00 cpu    28832k mem      0 io bash            *
  ansible    0.00 cpu    26992k mem      0 io touch           
  ansible    0.00 cpu    28864k mem      0 io bash            
  root       0.01 cpu    31264k mem      0 io su              
  root       0.00 cpu     1624k mem      0 io sa              
  root       0.00 cpu    34960k mem      0 io useradd         *
  root       0.00 cpu    34960k mem      0 io useradd         *
  root       0.00 cpu    34960k mem      0 io useradd         *
  root       0.00 cpu    34960k mem      0 io useradd         *
  root       0.00 cpu    34960k mem      0 io useradd         
  test1      0.00 cpu     3842k mem      0 io id              
  test1      0.00 cpu     2920k mem      0 io bash            *
  test1      0.00 cpu     1626k mem      0 io hostname        
</code></pre>
</li>
<li>
<p>last but not least check the help <code>sa -h</code> to explore all the available options</p>
</li>
</ul>

<h2 class="mt-4"><a id="Print_statistics_about_users_50"></a>Print statistics about users (AC)</h2>
<p>The linux <strong>ac</strong> commands  prints out a report of connect time (in hours) based on the logins/logouts in the current wtmp file.  A total is also printed out.</p>
<p>This accounting file wtmp is maintained by <strong>init</strong>(8) and <strong>login</strong>(1).  Neither <strong>ac</strong> nor <strong>login</strong> creates the wtmp if it doesn't exist, no accounting is done.  To begin accounting, create the file with a length of zero.</p>
<p>NOTE:  The wtmp file can get really big, really fast.  You might want to trim it every once and a while.</p>
<p>Some use-case about <code>ac</code> comand line</p>
<ul>
<li>
<p>print statistics of user <strong>day wise</strong> <code>ac -d</code><br>
Print totals for each day rather than just one big total at the end.  The output looks like this:</p>
<pre><code class="html">   ac -d
  Aug  3  total 1.17
  Today  total  5.64
</code></pre>
</li>
<li>
<p>Print total time for <strong>each users</strong>  <code>ac -p</code></p>
<p>Print time totals for each user in addition to the usual everything-lumped-into-one value.  It looks like:</p>
<pre><code class="html">   ac -p 
  bob 8.06
  goff  0.60
  maley 7.37
  root  0.12
  total  16.15
</code></pre>
</li>
</ul>

<h2 class="mt-4"><a id="LASTCOMM_144"></a>LASTCOMM</h2>
<p><strong>lastcomm</strong> prints out information about previously executed commands, it uses the file <strong>acct</strong></p>
<ul>
<li>
<p>Find the commands executed by the user <strong>test1</strong></p>
<pre><code class="html">    # lastcomm test1
  
  bash S test1  pts/1  0.00 secs Tue Aug 21 06:09
  touch  test1  pts/1  0.00 secs Tue Aug 21 06:09
  bash  F  test1  pts/1  0.00 secs Tue Aug 21 06:09
  consoletype  test1  pts/1  0.00 secs Tue Aug 21 06:09
  grep test1  pts/1  0.00 secs Tue Aug 21 06:09
</code></pre>
</li>
<li>
<p>If no arguments are specified, <strong>lastcomm</strong> will print info about all of the commands in acct(the record file)</p>
</li>
<li>
<p>finding with lastcomm which user has added the new user, here you can see after few fail attempts the user is created by the root</p>
<pre><code class="html">   # lastcomm adduser
  adduser  root pts/1  0.00 secs Tue Aug 21 06:24
  adduser S  root pts/1  0.00 secs Tue Aug 21 06:24
  adduser F  root pts/1  0.00 secs Tue Aug 21 06:24
  adduser F  root pts/1  0.00 secs Tue Aug 21 06:24
  adduser F  root pts/1  0.00 secs Tue Aug 21 06:24
</code></pre>
</li>
</ul>
<h2 class="mt-4"><a id="LAST_167"></a>LAST</h2>
<p><strong>Last</strong> searches back through the file <strong>/var/log/wtmp</strong> and displays a list of all users logged in (and out) since that file was created.</p>
<pre><code class="html"> # last
root pts/1  192.0.2.67 Tue Aug 21 04:23 still logged in
root pts/0  192.0.2.67 Tue Aug 21 03:09 - 05:22  (02:12)
root tty1  Tue Aug 21 03:09 still logged in
reboot system boot  3.10.0-862.el7.x Tue Aug 21 03:08 - 06:29  (03:21)
root tty1  Thu Jul  5 06:59 - 07:00  (00:01)
reboot system boot  3.10.0-862.el7.x Thu Jul  5 06:58 - 07:00  (00:02)
wtmp begins Thu Jul  5 06:58:40 2018
</code></pre>
<h3 class="mt-4"><a id="Wtmp_179"></a>Wtmp</h3>
<p>This is not command it's the file on the Linux, Solaris, and BSD operating systems that keeps a history of all logins and logouts. On Linux systems. it is located at <strong>/var/log/wtmp</strong>. Various commands access wtmp to report login statistics, like  <code>who</code> , <code>last</code>,  <code>lastb</code> commands.</p>
<h2 class="mt-4"><a id="Monitor_changes_in_File_182"></a>Monitor changes in File</h2>
<p>In production environment certain file integrity needs to be maintained and should be reported for any accidental or purpose fully changes</p>
<p>The linux <strong>watch</strong>  commands  allows you to watch the program output change over time.  By default, the program is run every 2 seconds.  By default, <strong>watch</strong> will run until interrupted.</p>
<pre><code class="html"> watch -n 10 -d ls -l /etc/shadow
</code></pre>
<p><code>inotifywait</code>  from  <a href="https://github.com/rvoicilas/inotify-tools/wiki">inotify-tools</a>  is useful if you want to run a command every time a file (or any files in a directory) change. For example:</p>
<pre><code class="html"> inotifywait -r -m -e modify /var/log | 
   while read path _ file; do 
       echo $path$file modified
   done
</code></pre>
<p>Next Reading :  <a href="linux-ps-commands.jsp">Most frequent ps command example to monitor linux process and troubleshooting </a> </p>
<hr>
<%@ include file="thanks.jsp"%>
          <!-- Comments Form -->
    

          <!-- Single Comment -->
 

          <!-- Comment with nested comments -->
          

        </div>

        <!-- Sidebar Widgets Column -->
        <div class="col-md-4">

          <!-- Ad Widget -->
         <%@ include file="footer_adsense.jsp"%> 

          <!-- Article Widget -->
         <%@ include file="related-linux.jsp"%>
         
           <!-- Article Widget -->
         <%@ include file="related-ansible.jsp"%>
         
         <%@ include file="related-kube.jsp"%>
         
         <%@ include file="related-openstack.jsp"%>
         
         <%@ include file="related-cryptography.jsp"%>
         <%@ include file="related-window-crypto.jsp"%>
         
         
         
         
         <!-- Topic Widget -->
         <%@ include file="side.jsp"%>
         
        </div>

      </div>
      <!-- /.row -->
      <%@ include file="addcomments.jsp"%>

    </div>
    <!-- /.container -->

    <!-- Footer -->
    <footer class="py-5 bg-dark">
      <div class="container">
        <p class="m-0 text-center text-white">Copyright &copy; 8gwifi.org 2018</p>
      </div>
      <!-- /.container -->
    </footer>

    <!-- Bootstrap core JavaScript -->
    <script src="vendor/jquery/jquery.min.js"></script>
    <script src="vendor/bootstrap/js/bootstrap.bundle.min.js"></script>

  </body>

</html>