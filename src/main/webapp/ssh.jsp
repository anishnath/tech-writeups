<!DOCTYPE html>
<html lang="en">

  <head>

    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">
    <meta name="description" content="how to harden your ssh server, ssh hardening, disable root login, fail2ban etc  ">
    <meta name="keywords" content="ssh server hardening, The /etc/ssh/moduli, Allow/Deny rules, pam module, ChrootDirectory,SSHv2 Protocol,  Use secure ciphers and MACs">
    <meta name="author" content="Anish nath">
    <meta name="robots" content="index,follow" />
	<meta name="googlebot" content="index,follow" />
	<meta name="resource-type" content="document" />
	<meta name="classification" content="tools" />
	<meta name="language" content="en" />

    <title>Twenty Steps to obtain SSH Hardening</title>

    <!-- Bootstrap core CSS -->
    <link href="vendor/bootstrap/css/bootstrap.min.css" rel="stylesheet">

    <!-- Custom styles for this template -->
    <link href="css/blog-post.css" rel="stylesheet">
    
    <link rel="stylesheet"  href="css/highlight/default.min.css">
	<script src="css/highlight/highlight.min.js"></script>
	<script>hljs.initHighlightingOnLoad();</script>
	
	
		<!-- JSON-LD markup generated by Google Structured Data Markup Helper. -->
<script type="application/ld+json">
{
  "@context" : "http://schema.org",
  "@type" : "Article",
  "mainEntityOfPage": {
    "@type": "WebPage",
    "@id": "https://8gwifi.org/docs/ssh.jsp"
  },
  "name" : "wenty Steps to obtain SSH Hardening",
  "author" : {
    "@type" : "Person",
    "name" : "Anish"
  },
  "headline": "Twenty Steps to obtain SSH Hardening",
  "image":"https://8gwifi.org/docs/img/ssh2.png",
  "datePublished" : "2018-08-18",
  "dateModified": "2018-08-18",
  "articleSection" : "Twenty Steps to obtain SSH Hardening",
  "articleBody" : [ "The /etc/ssh/moduli","Allow/Deny rules", "Black List with PAM", "Chroot Directory", "Force SSHv2 Protocol", "HostKeys for protocol version 2", "Use secure ciphers and MACs", "Disable unused authentication schemes", "Disable root SSH access" , "Public key authentication & Password authentication" , "Enable Logging" ],
  "publisher" : {
    "@type" : "Organization",
    "name" : "8gwifi.org Tech Blog",
    "logo" :   {
      "@type": "ImageObject",
      "url": "https://8gwifi.org/docs/img/logo.jpg"
    }
  }
}
</script>


  </head>

  <body>

    <!-- Navigation -->
   <%@ include file="navigation.jsp"%> 

    <!-- Page Content -->
    <div class="container">

      <div class="row">

        <!-- Post Content Column -->
        <div class="col-lg-8">

          <!-- Title -->
          <h1 class="mt-4">Twenty Steps to obtain SSH Hardening</h1>

          <!-- Author -->
          <p class="lead">
            by
            <a href="https://www.linkedin.com/in/anishnath">Anish</a>
          </p>

          <hr>

          <!-- Date/Time -->
          <p>Posted on Thursday January 24</p>

          <hr>

        
 
          <img class="img-fluid rounded" src="img/ssh2.png" alt="Referefce 8gwifi.org">

           <%@ include file="footer_adsense.jsp"%>
           <%@ include file="analytics.jsp"%>

          <hr>

          <!-- Post Content -->
        <h2 class="mt-4">Introduction </h3>

<p>The OpenSSH server reads a configuration file from  <code>/etc/ssh/sshd_config</code>when it's started. The default values for /<code>etc/ssh/sshd_config</code>in OpenSSH are quite restrictive and need to be further tuned to meet the demand of the current security need for the production environment and being compliance with governance requirement like PCI/DSS, HIPPA etc.</p>
<p>You will need to be <code>root</code> or use <code>sudo</code> to edit and control the SSH server.</p>
<p>Usually this is done by editing the default configuration file to change and more harden configuration for example.</p>
<p>It is always a good idea to make a backup of any configuration files before editing them.</p>
<pre><code class="html">cp /etc/ssh/sshd_config /etc/ssh/backup.sshd_config
</code></pre>
<p>To disable passwords for root, but still allow key-based access without forced command, use:</p>
<pre><code class="html">PermitRootLogin prohibit-password
</code></pre>
<p>To disable passwords and only allow key-based access with a forced command, use:</p>
<pre><code class="html">PermitRootLogin forced-commands-only
</code></pre>
<p>To  disable root login for the key-based access also and prompting the message</p>
<pre><code class="html">no-port-forwarding,no-agent-forwarding,no-X11-forwarding,command=&quot;echo 'Please login as the user \&quot;alibabacloud\&quot; rather than the user \&quot;root\&quot;.';echo;sleep 10&quot; ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDePRIy/ ECS 
</code></pre>
<h2><a id="1_Theetcsshmoduli_32"></a>1. The /etc/ssh/moduli</h2>
<p>The <code>/etc/ssh/moduli</code>file usually contains several different entries called groups and <code>sshd</code> picks one randomly for each session. As shown in the below diagram the  1024 bits simply don't offer sufficient security margin.</p>
<p><img class="img-fluid rounded" src="img/ssh.png" alt="enter image description here"></p>
<p>OpenSSH supports 13 key exchange methods</p>
<table class="table table-striped table-bordered">
<thead>
<tr>
<th>SL no</th>
<th>Key Exchange Method Name</th>
<th>Implement</th>
</tr>
</thead>
<tbody>
<tr>
<td>1</td>
<td>curve25519-sha256</td>
<td>SHOULD</td>
</tr>
<tr>
<td>2</td>
<td>diffie-hellman-group-exchange-sha1</td>
<td>MUST NOT</td>
</tr>
<tr>
<td>3</td>
<td>diffie-hellman-group1-sha1</td>
<td>MUST NOT</td>
</tr>
<tr>
<td>4</td>
<td>diffie-hellman-group14-sha1</td>
<td>SHOULD-</td>
</tr>
<tr>
<td>5</td>
<td>diffie-hellman-group14-sha256</td>
<td>MUST</td>
</tr>
<tr>
<td>6</td>
<td>diffie-hellman-group16-sha512</td>
<td>SHOULD</td>
</tr>
<tr>
<td>7</td>
<td>ecdh-sha2-nistp256</td>
<td>SHOULD</td>
</tr>
<tr>
<td>8</td>
<td>gss-gex-sha1-*</td>
<td>MUST NOT</td>
</tr>
<tr>
<td>9</td>
<td>gss-group1-sha1-*</td>
<td>MUST NOT</td>
</tr>
<tr>
<td>10</td>
<td>gss-group14-sha1-*</td>
<td>SHOULD</td>
</tr>
<tr>
<td>11</td>
<td>gss-group14-sha256-*</td>
<td>SHOULD</td>
</tr>
<tr>
<td>12</td>
<td>gss-group16-sha512-*</td>
<td>SHOULD</td>
</tr>
<tr>
<td>13</td>
<td>rsa1024-sha1</td>
<td>MUST NOT</td>
</tr>
</tbody>
</table>
<p>If option 4 is selected then delete the lines from the 5thcolumn from the file <code>/etc/ssh/moduli</code>  where bit size is less than 2000</p>
<pre><code class="html">awk '$5 &gt; 2000' /etc/ssh/moduli &gt; &quot;${HOME}/moduli&quot;
wc -l &quot;${HOME}/moduli&quot; # make sure there is something left
mv &quot;${HOME}/moduli&quot; /etc/ssh/moduli
</code></pre>
<p>If this file doesn't exist then generate a strong DH key size, higher bit size means more secure keys and less likely to break</p>
<pre><code class="html">ssh-keygen -G /etc/ssh/moduli.all -b 4096
ssh-keygen -T /etc/ssh/moduli.safe -f /etc/ssh/moduli.all
mv /etc/ssh/moduli.safe /etc/ssh/moduli
rm /etc/ssh/moduli.all
</code></pre>
<p>Recommended KexAlgorithms  <code>/etc``/ssh/sshd_config</code> :</p>
<pre><code class="html">KexAlgorithms curve25519-sha256@libssh.org,diffie-hellman-group-exchange-sha256
</code></pre>
<h2><a id="2_AllowDeny_rules_81"></a>2. Allow/Deny rules</h2>
<p>Do consider SSH access control mechanism, Once you add one AllowUsers rule, then the only users allowed to login via SSH are the listed ones:</p>
<p><strong>User Based Logins</strong></p>
<pre><code class="html">AllowUsers user1
AllowUsers user2 
</code></pre>
<p><strong>Host based Logins</strong></p>
<pre><code class="html">AllowUsers *@mywebserver.xyz.com
AllowUsers *@myprovisioningserver.xyz.com 
</code></pre>
<p><strong>Domain Based Logins</strong></p>
<pre><code class="html">AllowUsers *@*.xyz.com 
</code></pre>
<h2><a id="3_Black_List_with_PAM_105"></a>3. Black List with PAM</h2>
<p>pam_abl is a pam module designed to automatically block hosts which are attempting a brute force attack</p>
<pre><code class="html"># /etc/security/pam_abl.conf
debug
host_db=/var/lib/abl/hosts.db
host_purge=2d
host_rule=*:10/1h,30/1d
user_db=/var/lib/abl/users.db
user_purge=2d
user_rule=!root:10/1h,30/1d
</code></pre>
<p><code>*:10/1h,30/1d:</code>means block any user (*) if they are responsible for ten or more failed authentication attempts in the last hour or thirty or more failed attempts in the last day.</p>
<h2><a id="4_ChrootDirectory_121"></a>4. Chroot Directory</h2>
<p>This will give a client access to the server, but limit those users to their home directories, and it's a powerful feature and serve many secure use case like <strong>To chroot an SFTP directory</strong></p>
<p>Create an user and force root to be owner of it</p>
<pre><code class="html">cd /home
mkdir ftp
useradd -d /home/ftp -M -N -g users ftp
sudo chown root:root /home/ftp
sudo chmod 755 /home/ftp
</code></pre>
<p>Change the subsystem location on <code>/etc/ssh/sshd_config</code>:</p>
<pre><code class="html">#Subsystem sftp /usr/lib/openssh/sftp-server
Subsystem sftp internal-sftp
</code></pre>
<p>and create a user section at the end of the file</p>
<pre><code class="html">Match User john
    ChrootDirectory /home/ftp
    ForceCommand internal-sftp
    AllowTCPForwarding no
    X11Forwarding no
</code></pre>
<h2><a id="5_Force_SSHv2_Protocol_150"></a>5. Force SSHv2 Protocol</h2>
<pre><code class="html">Protocol 2
</code></pre>
<h2><a id="6_HostKeys_for_protocol_version_2_155"></a>6. HostKeys for protocol version 2</h2>
<pre><code class="html">HostKey /etc/ssh/ssh_host_rsa_key
HostKey /etc/ssh/ssh_host_dsa_key
HostKey /etc/ssh/ssh_host_ecdsa_key
</code></pre>
<h2><a id="7_Use_secure_ciphers_and_MACs_163"></a>7. Use secure ciphers and MACs</h2>
<pre><code class="html">Ciphers chacha20-poly1305@openssh.com,aes256-gcm@openssh.com,aes128-gcm@openssh.com,aes256-ctr,aes192-ctr,aes128-ctr
MACs hmac-sha2-512-etm@openssh.com,hmac-sha2-256-etm@openssh.com,umac-128-etm@openssh.com,hmac-sha2-512,hmac-sha2-256,umac-128@openssh.com
</code></pre>
<h2><a id="8_Disable_unused_authentication_schemes_169"></a>8. Disable unused authentication schemes</h2>
<pre><code class="html">RhostsRSAAuthentication no
HostbasedAuthentication no
ChallengeResponseAuthentication no
KerberosAuthentication no
GSSAPIAuthentication no
</code></pre>
<h2><a id="9_Disable_root_SSH_access_179"></a>9. Disable root SSH access</h2>
<pre><code class="html">PermitRootLogin no
PermitEmptyPasswords no
</code></pre>
<h2><a id="10_Public_key_authentication__Password_authentication_185"></a>10. Public key authentication &amp; Password authentication:</h2>
<p>Tune it according to your environment like only key based authentication</p>
<pre><code class="html">RSAAuthentication yes
PubkeyAuthentication yes
PasswordAuthentication yes
AuthenticationMethods publickey,password
</code></pre>
<h2><a id="11_Enable_Logging_195"></a>11. Enable Logging</h2>
<p>Logging provide traceability and enable the audit for the users.</p>
<pre><code class="html">SyslogFacility AUTH
LogLevel INFO
</code></pre>
<h2><a id="12_Authentication_must_happen_within_20_seconds_203"></a>12. Authentication must happen within 20 seconds</h2>
<pre><code class="html">LoginGraceTime 20
</code></pre>
<h2><a id="13_Reduce_Timeout_Intervals_209"></a>13. Reduce Timeout Intervals</h2>
<pre><code class="html"># Sets a timeout interval in seconds, default is 15 
ClientAliveInterval 40

# Sets the number of client alive messages, default value is 3 
ClientAliveCountMax 3
</code></pre>
<h2><a id="14_Deny_Empty_Password_218"></a>14. Deny Empty Password</h2>
<pre><code class="html"># Don't allows login to accounts with empty password, The default value is no
passworPermitEmptyPasswords no
</code></pre>
<h2><a id="15_Fail2Ban_224"></a>15. Fail2Ban</h2>
<p>Fail2ban can scan logs and ban temporarily ban IPs based on possible malicious activity.You will need to install Fail2ban.</p>
<pre><code class="html">#ubutnu
sudo apt-get install fail2ban
#rhel/centos
sudo yum install fail2ban
</code></pre>
<p>copy the fail2ban configuration file.</p>
<pre><code class="html">cp /etc/fail2ban/jail.conf /etc/fail2ban/jail.local
</code></pre>
<p>Open the <code>/etc/fail2ban/jail.local</code> files and find the spot that starts <code>[sshd].</code>Edit it like so, adding enabled = true:</p>
<pre><code class="html">[sshd]
</code></pre>
<pre><code class="html">enabled  = true
port    = ssh
logpath = %(sshd_log)s
</code></pre>
<p>Then restart fail2ban</p>
<pre><code class="html">service fail2ban restart
</code></pre>
<p>Fail2ban will monitor your SSH logs for possible malicious activity and then temporarily ban the source IP.</p>
<h2><a id="16_Audit_your_current_Ciphers_262"></a>16. Audit your current Ciphers</h2>
<pre><code class="html">$ ssh -Q cipher
3des-cbc
blowfish-cbc
cast128-cbc
arcfour
arcfour128
arcfour256
aes128-cbc
aes192-cbc
aes256-cbc
rijndael-cbc@lysator.liu.se
aes128-ctr
aes192-ctr
aes256-ctr
aes128-gcm@openssh.com
aes256-gcm@openssh.com
chacha20-poly1305@openssh.com
</code></pre>
<h2><a id="17_Audit_supported__MACs_283"></a>17. Audit supported  MAC's</h2>
<pre><code class="html">[root@localhost ~]# ssh -Q mac
hmac-sha1
hmac-sha1-96
hmac-sha2-256
hmac-sha2-512
hmac-md5
hmac-md5-96
hmac-ripemd160
hmac-ripemd160@openssh.com
umac-64@openssh.com
umac-128@openssh.com
hmac-sha1-etm@openssh.com
hmac-sha1-96-etm@openssh.com
hmac-sha2-256-etm@openssh.com
hmac-sha2-512-etm@openssh.com
hmac-md5-etm@openssh.com
hmac-md5-96-etm@openssh.com
hmac-ripemd160-etm@openssh.com
umac-64-etm@openssh.com
umac-128-etm@openssh.com
</code></pre>
<h2><a id="18_Audit_Suported_Key_308"></a>18. Audit Suported Key</h2>
<pre><code class="html">$ ssh -Q  key
ssh-ed25519
ssh-ed25519-cert-v01@openssh.com
ssh-rsa
ssh-dss
ecdsa-sha2-nistp256
ecdsa-sha2-nistp384
ecdsa-sha2-nistp521
ssh-rsa-cert-v01@openssh.com
ssh-dss-cert-v01@openssh.com
ecdsa-sha2-nistp256-cert-v01@openssh.com
ecdsa-sha2-nistp384-cert-v01@openssh.com
ecdsa-sha2-nistp521-cert-v01@openssh.com
</code></pre>
<h2><a id="19_Automate_the_Process_327"></a>19. Automate the Process</h2>
<p>Systems will added/deleted over the time, when the inventory is changing rapidly , go towards automation of the SSH-key management which include.</p>
<ol>
<li>
<p>Automated discovery of all SSH keys and configuration information</p>
</li>
<li>
<p>Automation of adding, configuring, removing, and rotating SSH keys.</p>
</li>
<li>
<p>Provide continuous monitoring of SSH keys</p>
</li>
<li>
<p>Enable forensic-level analysis by logging of all relevant operations and management actions</p>
</li>
<li>
<p>Audit.</p>
</li>
</ol>
<h2><a id="Restart_SSHD_341"></a>Restart SSHD</h2>
<p>Any changes in the file <code>/etc/ssh/sshd_config</code> requires restart of the SSH service.</p>
<pre><code class="html">#rhel/centos
/sbin/service sshd restart

#ubuntu 
/etc/init.d/sshd restart
</code></pre>
 

<p> if i Missed out any rules, post a comment, I will add in the List </p>
<p><a href="https://8gwifi.org/sshfunctions.jsp">Generate SSH Key Online (RSA/DSA/ECDSA) </a></p>

<hr>
<%@ include file="thanks.jsp"%>
          <!-- Comments Form -->
    

          <!-- Single Comment -->
 

          <!-- Comment with nested comments -->
          

        </div>

        <!-- Sidebar Widgets Column -->
        <div class="col-md-4">

          <!-- Ad Widget -->
         <%@ include file="footer_adsense.jsp"%> 

          <!-- Article Widget -->
         <%@ include file="related-linux.jsp"%>
         
           <!-- Article Widget -->
         <%@ include file="related-ansible.jsp"%>
         
         <%@ include file="related-kube.jsp"%>
         
         <%@ include file="related-openstack.jsp"%>
         
         <%@ include file="related-cryptography.jsp"%>
         <%@ include file="related-window-crypto.jsp"%>
         
         
         
         
         <!-- Topic Widget -->
         <%@ include file="side.jsp"%>
         
        </div>

      </div>
      <!-- /.row -->
      <%@ include file="addcomments.jsp"%>

    </div>
    <!-- /.container -->

    <!-- Footer -->
    <footer class="py-5 bg-dark">
      <div class="container">
        <p class="m-0 text-center text-white">Copyright &copy; 8gwifi.org 2018</p>
      </div>
      <!-- /.container -->
    </footer>

    <!-- Bootstrap core JavaScript -->
    <script src="vendor/jquery/jquery.min.js"></script>
    <script src="vendor/bootstrap/js/bootstrap.bundle.min.js"></script>

  </body>

</html>