<!DOCTYPE html>
<html lang="en">

  <head>

    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">
    <meta name="description" content="Web Crypto API AES-GCM Export Keys with JWK format ">
    <meta name="keywords" content="Web Crypto API AES-GCM AES-GCM Export Keys with JWK format , windo.crypto javascript examples, Web Cryptography API">
    <meta name="author" content="Anish nath">
    <meta name="robots" content="index,follow" />
	<meta name="googlebot" content="index,follow" />
	<meta name="resource-type" content="document" />
	<meta name="classification" content="tools" />
	<meta name="language" content="en" />

    <title>Web Crypto AES-GCM Export Keys with JWK format </title>

    <!-- Bootstrap core CSS -->
    <link href="vendor/bootstrap/css/bootstrap.min.css" rel="stylesheet">

    <!-- Custom styles for this template -->
    <link href="css/blog-post.css" rel="stylesheet">
    
    <link rel="stylesheet"  href="css/highlight/default.min.css">
	<script src="css/highlight/highlight.min.js"></script>
	<script>hljs.initHighlightingOnLoad();</script>
	
	
		<!-- JSON-LD markup generated by Google Structured Data Markup Helper. -->
<!-- JSON-LD markup generated by Google Structured Data Markup Helper. -->
<script type="application/ld+json">
{
  "@context" : "http://schema.org",
  "@type" : "Article",
  "mainEntityOfPage": {
    "@type": "WebPage",
    "@id": "https://8gwifi.org/docs/window-crypto-aes2.jsp"
  },
  "name" : "Web Crypto API AES-GCM Export Keys with JWK format",
  "author" : {
    "@type" : "Person",
    "name" : "Anish"
  },
  "headline": "Web Crypto API AES-GCM Export Keys with JWK format ",
  "image":"https://8gwifi.org/docs/img/window-crypto-aes3.png",
  "datePublished" : "2018-09-17",
  "dateModified": "2018-08-17",
  "articleSection" : "web crypto api AES-GCM Export Keys with JWK format ",
  "articleBody" : [ "Web Crypto API AES-GCM - generateKey/Encrypt/Decrypt ", "crypto.subtle.exportKey" , "java script example AES-GCM generateKey and Export Keys with JWK format"],
  "publisher" : {
    "@type" : "Organization",
    "name" : "8gwifi.org Tech Blog",
    "logo" :  {
      "@type": "ImageObject",
      "url": "https://8gwifi.org/docs/img/logo.jpg"
    }
  }
}
</script>

    <script type="text/javascript">
    


    function AESGCM_EXPORT_KEYS() {

        var iv = crypto.getRandomValues(new Uint8Array(16));
        window.crypto.subtle.generateKey({
                name: "AES-GCM",
                length: 256, //can be  128, 192, or 256
            },
            true, // the key is extractable (i.e. can be used in exportKey)
            ["encrypt", "decrypt", "wrapKey", "unwrapKey"] //can "encrypt", "decrypt" or  "wrapKey", or "unwrapKey"
        ).then(function(aesgcmkey) {
            var secretKey = aesgcmkey;
            return crypto.subtle.exportKey("jwk", secretKey).then(function(result) {
            key = result;
            document.getElementById("kty").value = key.kty;
            document.getElementById("key_ops").value = key.key_ops;
            document.getElementById("key_algo").value = key.alg
            document.getElementById("key").value = btoa(key.k);
        }, failAndLog);
        })
        .catch(function(err) {
            console.error(err);
        });

        

    }
    
    function failAndLog(error) {
        console.log(error);
    }

    

</script>



  </head>

  <body>

    <!-- Navigation -->
 	<%@ include file="navigation.jsp"%>

    <!-- Page Content -->
    <div class="container">

      <div class="row">

        <!-- Post Content Column -->
        <div class="col-lg-8">

          <!-- Title -->
          <h1 class="mt-4">Web Crypto API AES-GCM Export Keys with JWK format</h1>

          <!-- Author -->
          <p class="lead">
            by
            <a href="https://www.linkedin.com/in/anishnath">Anish</a>
            <p>Posted on Monday september 17, 2018</p>
          </p>
          
          
          
          <%@ include file="footer_adsense.jsp"%>
           <%@ include file="analytics.jsp"%>
           
          <hr>

<p>The <a href="https://www.w3.org/TR/WebCryptoAPI/#dfn-Crypto">Crypto</a> interface represents an interface to general purpose cryptographic functionality including a cryptographically strong pseudo-random number generator seeded with truly random values.</p>
<p>The <strong>SubtleCrypto.generateKey()</strong> method returns a Promise of a newly generated CryptoKey</p>
<p><strong>The Syntax</strong></p>
<pre><code class="html">var result = crypto.subtle.generateKey(algo, extractable, keyUsages);
</code></pre>
<ul>
<li>
<p><strong>algo</strong>: Supported algo are: AES-CBC, AES-CTR, AES-GCM, RSA-OAEP, AES-KW, HMAC, RSASSA-PKCS1-v1_5, ECDSA, ECDH, and DH.</p>
</li>
<li>
<p><strong>extractable</strong> is a Boolean indicating if the key can be extracted from the CryptoKey object at a later stage</p>
</li>
<li>
<p><strong>keyUsages</strong>  is an Array indicating what can be done with the newly generated key. Possible values of the array are for AES encryption:</p>
<ul>
<li><strong>encrypt</strong>, allowing the key to be used for encrypting messages.</li>
<li><strong>decrypt</strong>, allowing the key to be used for decrypting messages.</li>
<li><strong>wrapKey</strong>, allowing the key to wrap a symmetric key for usage (transfer, storage) in unsecure environments.</li>
<li><strong>unwrapKey</strong>, allowing the key to unwrap a symmetric key for usage (transfer, storage) in unsecure environments.</li>
</ul>
</li>
</ul>
<p>The <strong>SubtleCrypto.exportKey()</strong> method returns a Promise of the key encrypted in the requested format</p>
<pre><code class="html">var result = crypto.subtle.exportKey(format, key);
</code></pre>
<h3 class="mt-4"><a id="The_Demo_23"></a>The Demo</h3>

<p>
<div>
        <button class="btn btn-primary" type="button" onclick="AESGCM_EXPORT_KEYS()">AES256-GCM-GENERATE KEY AND EXPORT IN JWK</button>
    </div>
</p>
<p>
    <div>
        KTY: <input class="form-control" type="text" id="kty" size="10">
        ALGO: <input class="form-control" type="text" id="key_algo" size="10">
        use: <input class="form-control" type="text" id="key_ops" size="20">
        key: <input class="form-control" type="text" id="key" size="32">
    </div>
</p>

<p><strong>java script example AES-GCM  generateKey and Export Keys with JWK format</strong></p>
<pre><code class="html"> function AESGCM_EXPORT_KEYS() {

    var iv = crypto.getRandomValues(new Uint8Array(16));
    window.crypto.subtle.generateKey({
            name: &quot;AES-GCM&quot;,
            length: 256, //can be  128, 192, or 256
        },
        true, // the key is extractable (i.e. can be used in exportKey)
        [&quot;encrypt&quot;, &quot;decrypt&quot;, &quot;wrapKey&quot;, &quot;unwrapKey&quot;] //can &quot;encrypt&quot;, &quot;decrypt&quot; or  &quot;wrapKey&quot;, or &quot;unwrapKey&quot;
    ).then(function(aesgcmkey) {
        var secretKey = aesgcmkey;
        return crypto.subtle.exportKey(&quot;jwk&quot;, secretKey).then(function(result) {
        key = result;
        document.getElementById(&quot;kty&quot;).value = key.kty;
        document.getElementById(&quot;key_ops&quot;).value = key.key_ops;
        document.getElementById(&quot;key_algo&quot;).value = key.alg
        document.getElementById(&quot;key&quot;).value = btoa(key.k);
    }, failAndLog);
    })
    .catch(function(err) {
        console.error(err);
    });
}
</code></pre>
<p><strong>The HTML</strong></p>
<pre><code class="html"> &lt;div&gt;
    &lt;button type=&quot;button&quot; onclick=&quot;AESGCM_EXPORT_KEYS()&quot;&gt;AES256-GCM-GENERATE KEY AND EXPORT IN JWK&lt;/button&gt;
&lt;/div&gt;
&lt;div&gt;
    KTY: &lt;input type=&quot;text&quot; id=&quot;kty&quot; size=&quot;10&quot;&gt;
    ALGO: &lt;input type=&quot;text&quot; id=&quot;key_algo&quot; size=&quot;10&quot;&gt;
    use: &lt;input type=&quot;text&quot; id=&quot;key_ops&quot; size=&quot;20&quot;&gt;
    key: &lt;input type=&quot;text&quot; id=&quot;key&quot; size=&quot;32&quot;&gt;
&lt;/div&gt;
</code></pre>
<hr>
Download the sample code <a href="https://drive.google.com/file/d/1vyBtxhAU3WPyVNfHA1YYbDA5nfaT-CsE/view?usp=sharing">here </a>

<hr>
Next Reading <a href="window-crypto-aes.jsp">Perform AES Encryption Using importKey Method </a>

<%@ include file="thanks.jsp"%>

<hr>

<%@ include file="addcomments.jsp"%>
      <!-- Comments Form -->
    

          <!-- Single Comment -->
 

          <!-- Comment with nested comments -->
        
          

        </div>

		
        
        <!-- Sidebar Widgets Column -->
        <div class="col-md-4">

          <!-- Ad Widget -->
         <%@ include file="footer_adsense.jsp"%> 
         
         <%@ include file="related-window-crypto.jsp"%>

		 <%@ include file="related-cryptography.jsp"%>
          <!-- Article Widget -->
         <%@ include file="related-ansible.jsp"%>
         
         <%@ include file="related-kube.jsp"%>
         
         
         
         <%@ include file="related-openstack.jsp"%>
         <%@ include file="related-linux.jsp"%>
         
         
         <!-- Topic Widget -->
         <%@ include file="side.jsp"%>
         
           <!-- Add Comments Support -->
         
         
         

        </div>


      </div>
      
      <!-- /.row -->


	
    
    </div>
    
    
    
    
    <!-- /.container -->

    <!-- Footer -->
    <footer class="py-5 bg-dark">
      <div class="container">
        <p class="m-0 text-center text-white">Copyright &copy; 8gwifi.org 2018</p>
      </div>
      <!-- /.container -->
    </footer>
    
    Here

    <!-- Bootstrap core JavaScript -->
    <script src="vendor/jquery/jquery.min.js"></script>
    <script src="vendor/bootstrap/js/bootstrap.bundle.min.js"></script>


  </body>

</html>