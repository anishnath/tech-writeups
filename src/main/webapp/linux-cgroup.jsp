<!DOCTYPE html>
<html lang="en">

  <head>

    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">
    <meta name="description" content="overview of linux cgroup, configure cgroup">
    <meta name="keywords" content="overview of linux cgroup, cgroup tutorial, cgroup for lamp stack, configure memory limit using cgroup, cgroup vs namespace, cgroup installation, systemd cgroup, linux interview questions">
    <meta name="author" content="Anish nath">
    <meta name="robots" content="index,follow" />
	<meta name="googlebot" content="index,follow" />
	<meta name="resource-type" content="document" />
	<meta name="classification" content="tools" />
	<meta name="language" content="en" />

    <title>Linux cgroup</title>

    <!-- Bootstrap core CSS -->
    <link href="vendor/bootstrap/css/bootstrap.min.css" rel="stylesheet">

    <!-- Custom styles for this template -->
    <link href="css/blog-post.css" rel="stylesheet">
    
    <link rel="stylesheet"  href="css/highlight/default.min.css">
	<script src="css/highlight/highlight.min.js"></script>
	<script>hljs.initHighlightingOnLoad();</script>
	
	
		<!-- JSON-LD markup generated by Google Structured Data Markup Helper. -->
<script type="application/ld+json">
{
  "@context" : "http://schema.org",
  "@type" : "Article",
  "mainEntityOfPage": {
    "@type": "WebPage",
    "@id": "https://8gwifi.org/docs/linux-cgroup.jsp"
  },
  "name" : "overview of linux cgroup",
  "author" : {
    "@type" : "Person",
    "name" : "Anish"
  },
  "headline": "overview of linux cgroup, configure cgroup for lamp stack",
  "image":"https://8gwifi.org/docs/img/cggroup.png",
  "datePublished" : "2019-12-10",
  "dateModified": "2019-12-10",
  "articleSection" : "overview of linux cgroup ",
  "articleBody" : [ "overview of linux cgroup","pid cgroup" , "memory limit with cgroup", "cpu limit with cgroup", "cgroup installation", "cgroup vs docker"],
  "publisher" : {
    "@type" : "Organization",
    "name" : "8gwifi.org Tech Blog",
    "logo" :   {
      "@type": "ImageObject",
      "url": "https://8gwifi.org/docs/img/logo.jpg"
    }
  }
}
</script>


  </head>

  <body>

    <!-- Navigation -->
   <%@ include file="navigation.jsp"%> 

    <!-- Page Content -->
    <div class="container">

      <div class="row">

        <!-- Post Content Column -->
        <div class="col-lg-8">

          <!-- Title -->
          <h1 class="mt-4">Configure CGroup for LAMP stack </h1>

          <!-- Author -->
          <p class="lead">
            by
            <a href="https://www.linkedin.com/in/anishnath">Anish</a>
          </p>

          <hr>

          <!-- Date/Time -->
          <p>Posted on Tuesday December 10/2019</p>

          <hr>


           <%@ include file="footer_adsense.jsp"%>
           <%@ include file="analytics.jsp"%>

          <hr>

          <!-- Post Content -->
        <p class="has-line-data" data-line-start="0" data-line-end="1"><strong>CG</strong>roup were introduced into the kernel by <strong>Google</strong> in 2006 and it's stands for <strong>C</strong>ontrol <strong>G</strong>roups</p>
<p class="has-line-data" data-line-start="2" data-line-end="3">Cgroups allow you to allocate these subsystem resources among user-defined groups of tasks (processes) running on a system</p>
<ul>
<li class="has-line-data" data-line-start="4" data-line-end="5"><strong>cpu</strong>: Uses the scheduler to provide cgroup tasks access to the CPU.</li>
<li class="has-line-data" data-line-start="5" data-line-end="6"><strong>blkio</strong>:  Sets limits on input/output access to and from block devices such as physical drives</li>
<li class="has-line-data" data-line-start="6" data-line-end="7"><strong>cpuacct</strong>: Generates automatic reports on CPU resources used by tasks in a cgroup</li>
<li class="has-line-data" data-line-start="7" data-line-end="8"><strong>cpuset</strong>: Assigns individual CPUs and memory nodes to tasks in a cgroup</li>
<li class="has-line-data" data-line-start="8" data-line-end="9"><strong>devices</strong>: Allows or denies access to devices by tasks in a cgroup</li>
<li class="has-line-data" data-line-start="9" data-line-end="10"><strong>freezer</strong>: Suspends or resumes tasks in a cgroup</li>
<li class="has-line-data" data-line-start="10" data-line-end="11"><strong>perf_event</strong>: Identifies cgroup membership of tasks and can be used for performance analysis</li>
<li class="has-line-data" data-line-start="11" data-line-end="12"><strong>net_cls</strong>: Tags network packets with a class identifier</li>
<li class="has-line-data" data-line-start="12" data-line-end="14"><strong>memory</strong>: Sets limits on memory use by tasks in a cgroup and generates automatic reports on memory resources used by those tasks</li>
</ul>
<h3 class="code-line" data-line-start=14 data-line-end=15 ><a id="CGroup_for_LAMP_14"></a>CGroup for LAMP</h3>
<p class="has-line-data" data-line-start="16" data-line-end="17">For example, let's say we wanted to assign or isolate the resources of an application, for the same purpose we will create two cgroup one for application and other for operating system itself.</p>
<p class="has-line-data" data-line-start="18" data-line-end="19"><img class="img-fluid rounded" src="img/cggroup.png" alt="cgroup lamp stack"></p>
<p class="has-line-data" data-line-start="20" data-line-end="21">Let's extend the scenario to more practical one imagine you have a LAMP stack, you have to manage the <strong>cpu</strong>, <strong>memory</strong>, <strong>disk</strong> and <strong>network bandwidth</strong>, for your LAMP application.</p>
<p class="has-line-data" data-line-start="22" data-line-end="23"><strong>LAMP</strong>  stack (<strong>Linux</strong>,  <strong>Apache</strong>,  <strong>MariaDB/MYSQL</strong>  and  <strong>PHP</strong>)</p>
<p class="has-line-data" data-line-start="24" data-line-end="25">and your cloud/VM has 4GB of Memory and you have to limit the following configuration in the CGgroup</p>
<ul>
<li class="has-line-data" data-line-start="26" data-line-end="27">Form <strong>httpd</strong>  service (  <strong>httpd.service</strong>):  <strong>30</strong>% of CPU,  <strong>1G</strong>  of memory,</li>
<li class="has-line-data" data-line-start="27" data-line-end="28"><strong>PHP</strong>  service (here  <strong>php-fpm.service</strong>):  <strong>20</strong>% of CPU,  <strong>1</strong>G of memory,</li>
<li class="has-line-data" data-line-start="28" data-line-end="30"><strong>MariaDB</strong>  service (here  <strong>mariadb.service</strong>):  <strong>50</strong>% of CPU,  <strong>1</strong>G of memory.</li>
</ul>
<p class="has-line-data" data-line-start="30" data-line-end="31">and you have left  <strong>1</strong>G of memory for the operating system itself.</p>
<p class="has-line-data" data-line-start="32" data-line-end="33">Without <strong>CG</strong>roup processes will share the server power and the memory as they need.</p>
<p class="has-line-data" data-line-start="34" data-line-end="35">with <strong>CG</strong>roup the  <code>httpd service</code>:  will have <code>CPUShares=3072 (3x 1024)</code>; and <code>MemoryLimit=1G</code>, and to configure in <code>httpd</code> service using <code>systemctl</code></p>
<pre><code class="html">[anish@localhost ~]$ sudo systemctl <span class="hljs-built_in">set</span>-property httpd CPUShares=<span class="hljs-number">3072</span>
[anish@localhost ~]$ sudo systemctl <span class="hljs-built_in">set</span>-property httpd  MemoryLimit=<span class="hljs-number">1</span>G
[anish@localhost ~]$ sudo systemctl daemon-reload
[anish@localhost ~]$ sudo systemctl show -p CPUShares,MemoryLimit httpd
CPUShares=<span class="hljs-number">3072</span>
MemoryLimit=<span class="hljs-number">1073741824</span>
</code></pre>
<p class="has-line-data" data-line-start="44" data-line-end="45">The <code>httpd</code> status shows <strong>CG</strong>roup configured with <strong>1GB</strong> limit</p>
<pre><code class="html">[anish@localhost ~]$ systemctl status httpd
 httpd.service - The Apache HTTP Server
   Loaded: loaded (/usr/lib/systemd/system/httpd.service; disabled; vendor preset: disabled)
  Drop-In: /etc/systemd/system/httpd.service.d
           <span class="hljs-number">50</span>-CPUShares.conf, <span class="hljs-number">50</span>-MemoryLimit.conf
   Active: active (running) since Tue <span class="hljs-number">2019</span>-<span class="hljs-number">12</span>-<span class="hljs-number">10</span> <span class="hljs-number">02</span>:<span class="hljs-number">13</span>:<span class="hljs-number">24</span> EST; <span class="hljs-number">6</span>min ago
     Docs: man:httpd(<span class="hljs-number">8</span>)
           man:apachectl(<span class="hljs-number">8</span>)
 Main PID: <span class="hljs-number">1551</span> (httpd)
   Status: <span class="hljs-string">"Total requests: 0; Current requests/sec: 0; Current traffic:   0 B/sec"</span>
    Tasks: <span class="hljs-number">6</span>
   Memory: <span class="hljs-number">2.7</span>M (<span class="hljs-built_in">limit</span>: <span class="hljs-number">1.0</span>G)
   CGroup: /system.slice/httpd.service
           <span class="hljs-number">1551</span> /usr/sbin/httpd -DFOREGROUND
           <span class="hljs-number">1552</span> /usr/sbin/httpd -DFOREGROUND
           <span class="hljs-number">1553</span> /usr/sbin/httpd -DFOREGROUND
</code></pre>
<p class="has-line-data" data-line-start="67" data-line-end="68">The drop-ins files</p>
<pre><code class="html">[anish@localhost ~]$ cat /etc/systemd/system/httpd.service.d/<span class="hljs-number">50</span>-CPUShares.conf 
[Service]
CPUShares=<span class="hljs-number">3072</span>
[anish@localhost ~]$ cat /etc/systemd/system/httpd.service.d/<span class="hljs-number">50</span>-MemoryLimit.conf 
[Service]
MemoryLimit=<span class="hljs-number">1073741824</span>
</code></pre>
<p class="has-line-data" data-line-start="78" data-line-end="79">If you want the <strong>httpd</strong> service to display the amount of memory currently used through the <strong>systemd-cgtop</strong> command, you need to activate accounting by <code>MemoryAccounting=true</code></p>
<pre><code class="html">[anish@localhost ~]$ sudo systemctl <span class="hljs-built_in">set</span>-property httpd  MemoryAccounting=<span class="hljs-literal">true</span> 
[anish@localhost ~]$ sudo systemctl daemon-reload; sudo systemctl restart httpd
</code></pre>
<p class="has-line-data" data-line-start="84" data-line-end="85">and then</p>
<pre><code class="html">[anish@localhost ~]$ systemd-cgtop
</code></pre>
<p class="has-line-data" data-line-start="89" data-line-end="90"><img class="img-fluid rounded" src="img/cgroup1.png" alt="systemd-cgtop"></p>
<p class="has-line-data" data-line-start="92" data-line-end="93"><strong>CG</strong>roup configuration for <code>mariadb service</code>: <code>CPUShares=5120 (5 x 1024)</code>; <code>MemoryLimit=1G</code> and write below 2MB/s onto the <code>/dev/vdb</code> partition</p>
<pre><code class="html">[anish@localhost ~]$ sudo systemctl <span class="hljs-built_in">set</span>-property mariadb CPUShares=<span class="hljs-number">5120</span>
[anish@localhost ~]$ sudo systemctl <span class="hljs-built_in">set</span>-property mariadb  MemoryLimit=<span class="hljs-number">1</span>G
[anish@localhost ~]$ sudo systemctl <span class="hljs-built_in">set</span>-property mariadb.service BlockIOWriteBandwidth=<span class="hljs-string">"/dev/vdb 2M"</span>
[anish@localhost ~]$ sudo systemctl daemon-reload
[anish@localhost ~]$ sudo systemctl restart mariadb
</code></pre>
<p class="has-line-data" data-line-start="102" data-line-end="103">The <code>mariadb</code> status shows <strong>CG</strong>roup configured with <strong>1GB</strong> limit and with required <code>BlockIOWriteBandwidth</code> and  <code>CPUShares</code></p>
<pre><code class="html">[anish@localhost ~]$ systemctl status mariadb
 mariadb.service - MariaDB database server
   Loaded: loaded (/usr/lib/systemd/system/mariadb.service; disabled; vendor preset: disabled)
  Drop-In: /etc/systemd/system/mariadb.service.d
           <span class="hljs-number">50</span>-BlockIOWriteBandwidth.conf, <span class="hljs-number">50</span>-CPUShares.conf, <span class="hljs-number">50</span>-MemoryLimit.conf
   Active: active (running) since Tue <span class="hljs-number">2019</span>-<span class="hljs-number">12</span>-<span class="hljs-number">10</span> <span class="hljs-number">02</span>:<span class="hljs-number">47</span>:<span class="hljs-number">14</span> EST; <span class="hljs-number">28</span>s ago
  Process: <span class="hljs-number">2371</span> ExecStartPost=/usr/libexec/mariadb-wait-ready <span class="hljs-variable">$MAINPID</span> (code=exited, status=<span class="hljs-number">0</span>/SUCCESS)
  Process: <span class="hljs-number">2335</span> ExecStartPre=/usr/libexec/mariadb-prepare-db-dir %n (code=exited, status=<span class="hljs-number">0</span>/SUCCESS)
 Main PID: <span class="hljs-number">2370</span> (mysqld_safe)
    Tasks: <span class="hljs-number">20</span>
   Memory: <span class="hljs-number">74.4</span>M (<span class="hljs-built_in">limit</span>: <span class="hljs-number">1.0</span>G)
   CGroup: /system.slice/mariadb.service
           <span class="hljs-number">2370</span> /bin/sh /usr/bin/mysqld_safe --basedir=/usr
           <span class="hljs-number">2532</span> /usr/libexec/mysqld --basedir=/usr --datadir=/var/lib/mysql --plugin-dir=/usr/lib64/mysql/plugin --log-error=/var/
</code></pre>
<h3 class="code-line" data-line-start=121 data-line-end=122 ><a id="CGroup_Fundamentals_121"></a>CGroup Fundamentals</h3>
<p class="has-line-data" data-line-start="123" data-line-end="124">Installation on rhel7/8 and centos Like system,</p>
<p class="has-line-data" data-line-start="125" data-line-end="126">if you are using <code>systemd</code> the <code>systemd</code> uses CGroups <code>libcgroup</code> package and is installed by default</p>
<pre><code class="html">$ yum -y install libcgroup libcgroup-tools
$ systemctl start cgroup
$ systemctl <span class="hljs-built_in">enable</span> cgroup
</code></pre>
<p class="has-line-data" data-line-start="133" data-line-end="134"><code>lscgroup</code> list all cgroups</p>
<pre><code class="html">[root@localhost ~]# lscgroup
cpu,cpuacct:/
cpu,cpuacct:/user.slice
cpu,cpuacct:/system.slice
cpu,cpuacct:/system.slice/mariadb.service
cpu,cpuacct:/system.slice/httpd.service
.....
.....
</code></pre>
<p class="has-line-data" data-line-start="146" data-line-end="147"><code>lssubsys</code> - list hierarchies containing given subsystem</p>
<pre><code class="html">[root@localhost ~]# lssubsys
cpuset
cpu,cpuacct
memory
devices
freezer
net_cls,net_prio
blkio
perf_event
hugetlb
pids
</code></pre>
<h4 class="code-line" data-line-start=162 data-line-end=163 ><a id="limiting_memory_usage_162"></a>limiting memory usage</h4>
<p class="has-line-data" data-line-start="164" data-line-end="165">This example shows how a new cgroup is created assiged a user to it and set some memmory limits</p>
<pre><code class="html">[root@localhost ~]<span class="hljs-comment"># adduser testing</span>
</code></pre>
<p class="has-line-data" data-line-start="170" data-line-end="171"><code>cgcreate</code> will create a new directory within the mounted <code>memory</code> cgroup with assiged username</p>
<pre><code class="html">[root@localhost ~]# cgcreate -a testing -g memory,cpu:testing
</code></pre>
<p class="has-line-data" data-line-start="176" data-line-end="177">For testing set <code>256MB</code> of memory limit in this cgroup <code>testing</code></p>
<pre><code class="html">[root@localhost ~]# echo 268435456 &gt; /sys/fs/cgroup/memory/testing/memory.limit_in_bytes
</code></pre>
<p class="has-line-data" data-line-start="181" data-line-end="182">Validate the <code>memory.limit_in_bytes</code></p>
<pre><code class="html">[root@localhost ~]# cat /sys/fs/cgroup/memory/testing/memory.limit_in_bytes
268435456
</code></pre>
<p class="has-line-data" data-line-start="187" data-line-end="188">Switch to newly created user</p>
<pre><code class="html">[root@localhost ~]# su - testing
</code></pre>
<p class="has-line-data" data-line-start="193" data-line-end="194">run <code>stress</code> with the <code>-m</code> option to consume memory and see what happens</p>
<pre><code class="html">[testing@localhost ~]$ stress -m 2 --vm-bytes 800M --vm-keep
stress: info: [2678] dispatching hogs: 0 cpu, 0 io, 2 vm, 0 hdd
stress: FAIL: [2678] (415) &lt;-- worker 2679 got signal 9
stress: WARN: [2678] (417) now reaping child worker processes
stress: FAIL: [2678] (451) failed run completed in 1s
</code></pre>
<p class="has-line-data" data-line-start="202" data-line-end="203">The Application just crash because of <code>memory.oom_control</code></p>
<pre><code class="html">[testing@localhost ~]$  cat /sys/fs/cgroup/memory/testing/memory.oom_control
oom_<span class="hljs-built_in">kill</span>_<span class="hljs-built_in">disable</span> <span class="hljs-number">0</span>
under_oom <span class="hljs-number">0</span>
</code></pre>

<hr>
<p>Next Reading :  <a href="linux-namespace.jsp">Overview of Linux Namespace </a> </p>

<hr>
<%@ include file="thanks.jsp"%>
          <!-- Comments Form -->
    

          <!-- Single Comment -->
 

          <!-- Comment with nested comments -->
          

        </div>

        <!-- Sidebar Widgets Column -->
        <div class="col-md-4">

          <!-- Ad Widget -->
         <%@ include file="footer_adsense.jsp"%> 

          <!-- Article Widget -->
         <%@ include file="related-linux.jsp"%>
         
           <!-- Article Widget -->
         <%@ include file="related-ansible.jsp"%>
         
         <%@ include file="related-kube.jsp"%>
         
         <%@ include file="related-openstack.jsp"%>
         
         <%@ include file="related-cryptography.jsp"%>
         <%@ include file="related-window-crypto.jsp"%>
         
         
         
         
         <!-- Topic Widget -->
         <%@ include file="side.jsp"%>
         
        </div>

      </div>
      <!-- /.row -->
      <%@ include file="addcomments.jsp"%>

    </div>
    <!-- /.container -->

    <!-- Footer -->
    <footer class="py-5 bg-dark">
      <div class="container">
        <p class="m-0 text-center text-white">Copyright &copy; 8gwifi.org 2018</p>
      </div>
      <!-- /.container -->
    </footer>

    <!-- Bootstrap core JavaScript -->
    <script src="vendor/jquery/jquery.min.js"></script>
    <script src="vendor/bootstrap/js/bootstrap.bundle.min.js"></script>

  </body>

</html>