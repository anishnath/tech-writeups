<!DOCTYPE html>
<html lang="en">

  <head>

    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">
    <meta name="description" content="How to install kubernetes in centos7,fedora,rhel7,ubuntu">
    <meta name="keywords" content="kubernetes installation, ansible kubernetes instalaltion, kubernetes dashbaords, kubernetes UI,linux,fedora,rhel7,ubuntu,centos7,kubectl get services -n kube-system.kubeadm token create,kubernetes interview questions">
    <meta name="author" content="Anish nath">
    <meta name="robots" content="index,follow" />
	<meta name="googlebot" content="index,follow" />
	<meta name="resource-type" content="document" />
	<meta name="classification" content="tools" />
	<meta name="language" content="en" />

    <title>How to install kubernetes in centos7,fedora,rhel7,ubuntu</title>

    <!-- Bootstrap core CSS -->
    <link href="vendor/bootstrap/css/bootstrap.min.css" rel="stylesheet">

    <!-- Custom styles for this template -->
    <link href="css/blog-post.css" rel="stylesheet">
    
    <link rel="stylesheet"  href="css/highlight/default.min.css">
	<script src="css/highlight/highlight.min.js"></script>
	<script>hljs.initHighlightingOnLoad();</script>
	
	
		<!-- JSON-LD markup generated by Google Structured Data Markup Helper. -->
<!-- JSON-LD markup generated by Google Structured Data Markup Helper. -->
<script type="application/ld+json">
{
  "@context" : "http://schema.org",
  "@type" : "Article",
  "mainEntityOfPage": {
    "@type": "WebPage",
    "@id": "https://8gwifi.org/docs/kube-install.jsp"
  },
  "name" : "How to install kubernetes using ansible",
  "author" : {
    "@type" : "Person",
    "name" : "Anish"
  },
  "headline": "How to install kubernetes in centos7,fedora,rhel7,ubuntu",
  "image":"https://8gwifi.org/docs/img/kube-install.png",
  "datePublished" : "2018-07-11",
  "dateModified": "2018-07-11",
  "articleSection" : "kubernetes Installation on centos7/RHEL77/Ubuntu 16.04",
  "articleBody" : [ "Steps Required to Install Kubenetes-master and Kubenetes-minion","Install Docker & enable on restart" ,"kubernetes Installation starts here", "kubernetes installation on centos7/rhel7" ,"kubernetes installation on Ubuntu Setting up Kubernetes apt repository for Ubuntu" ,"Verify that your Docker cgroup driver matches the kubelet config: (kube-master node)","For flannel to work correctly","For Calico to work correctly","kubectl cluster-info"],
  "publisher" : {
    "@type" : "Organization",
    "name" : "8gwifi.org Tech Blog",
    "logo" :  {
      "@type": "ImageObject",
      "url": "https://8gwifi.org/docs/img/logo.jpg"
    }
  }
}
</script>


  </head>

  <body>

    <!-- Navigation -->
 	<%@ include file="navigation.jsp"%>

    <!-- Page Content -->
    <div class="container">

      <div class="row">

        <!-- Post Content Column -->
        <div class="col-lg-8">

          <!-- Title -->
          <h1 class="mt-4">kubernetes Installation on centos7/RHEL77/Ubuntu 16.04+</h1>

          <!-- Author -->
          <p class="lead">
            by
            <a href="https://www.linkedin.com/in/anishnath">Anish</a>
            <p>Posted on Wednesday July 11, 2018</p>
          </p>
          
          <img class="img-fluid rounded" src="img/kube-install.png" height="400" width="500" alt="Referefce ">
          
          <%@ include file="footer_adsense.jsp"%>
           <%@ include file="analytics.jsp"%>
           
          <hr>

<h3 class="mt-4">Introduction </h3>
<p>In this section we will learn how to install kubernetes in centos7/rhel7/ubuntu like system</p>
          <!-- Date/Time -->
          

   <h2 id="prerequisitemachines">Prerequisite Machines</h2>

<ol>
<li>Ubuntu 16.04+</li>

<li>CentOS 7</li>

<li>RHEL 7</li>

<li>2 GB or more of RAM per machine (any less will leave little room for your apps)</li>
</ol>

<h2 id="setupenvironment">Setup Environment</h2>

<p>
<pre><code class="html">
| Master          | Minion Cluster    |
|-------------    |----------------   |
| kube-master     | kube-minion-1     |
</code></pre></p>

<h2 id="stepsrequiredtoinstallkubenetesmasterandkubenetesminion">Steps Required to Install Kubenetes-master and Kubenetes-minion</h2>

<p>
<pre><code class="html">
| Requirement                                        | Kubenetes-master  | Kubenetes-minion  |
|------------------------------------------------    |------------------ |------------------ |
| Disable system swap and SELinux                    | Y                 | Y                 |
| remove any swap entry from /etc/fstab              | Y                 | Y                 |
| net.bridge.bridge-nf-call-iptables is set to 1     | Y                 | Y                 |
| Install Docker &amp; enable on restart             | Y                 | Y                 |
| Install kubeadm                                    | Y                 | Y                 |
| Install kubelet                                    | Y                 | N                 |
| Install kubectl                                    | Y                 | N                 |
| Configure docker cgroupsfs                         | Y                 | N                 |
| Creating Network Addons (flannel/Calico)           | Y                 | N                 |
</code></pre>
</p>

<p><strong>Step-1</strong> Disable system swap run <code> swapoff -a</code> this will immediately disable swap and remove any swap entry from <code>/etc/fstab</code></p>

<p><strong>Step-2</strong> Disable SE Linux by <code>setenforce 0</code></p>

<p><strong>Step-4</strong> You should ensure <code>net.bridge.bridge-nf-call-iptables</code> is <strong>set to 1</strong> in your <strong>sysctl</strong> config</p>

<pre><code class="html">cat &lt;&lt;EOF &gt;  /etc/sysctl.d/k8s.conf
net.bridge.bridge-nf-call-ip6tables = 1
net.bridge.bridge-nf-call-iptables = 1
EOF
sysctl --system
</code></pre>

<p><strong>Step-5</strong> Install Docker &amp; enable on restart <strong>CentOS7&amp;RHEL7</strong></p>

<pre><code class="html">yum -y update
yum install -y docker 
</code></pre>

<p><strong>Step-5.1</strong> Install Docker &amp; enable on restart <strong>Ubuntu</strong></p>

<pre><code class="html">apt-get update 
apt-get install -y docker.io
</code></pre>

<p>start and enable Docker Service and check docker service is running  </p>

<pre><code class="html">systemctl start docker
systemctl enable docker
systemctl status docker
</code></pre>

<h3 id="step6kubernetesinstallationstartshere">Step-6 kubernetes Installation starts here</h3>

<p>You will install these packages on all of your machines:</p>

<ol>
<li><strong>kubeadm</strong>: the command to bootstrap the cluster.</li>

<li><strong>kubelet</strong>: the component that runs on all of the machines in your cluster and does things like starting pods and containers.</li>

<li><strong>kubectl</strong>: the command line util to talk to your cluster.</li>
</ol>

<p><strong>kubernetes installation on centos7/rhel7</strong></p>

<p>Setting up Kubernetes yum repository on centos6.x/rhel7.x </p>

<pre><code class="html">cat &lt;&lt;EOF &gt; /etc/yum.repos.d/kubernetes.repo
[kubernetes]
name=Kubernetes
baseurl=https://packages.cloud.google.com/yum/repos/kubernetes-el7-x86_64
enabled=1
gpgcheck=1
repo_gpgcheck=1
gpgkey=https://packages.cloud.google.com/yum/doc/yum-key.gpg https://packages.cloud.google.com/yum/doc/rpm-package-key.gpg
EOF
</code></pre>

<p>Install Kubernetes in <strong>centos7/rhel7</strong></p>

<pre><code class="html">yum install -y kubelet kubeadm kubectl
</code></pre>

<p><strong>kubernetes installation on Ubuntu</strong>
Setting up Kubernetes apt repository for <strong>Ubuntu</strong></p>

<pre><code class="html">apt-get install -y apt-transport-https curl
apt-get install -y docker.io

</code></pre>
<p>Add kube Repo</p>
<pre><code class="html">
curl -s https://packages.cloud.google.com/apt/doc/apt-key.gpg | apt-key add -
cat &lt;&lt;EOF &gt;/etc/apt/sources.list.d/kubernetes.list
deb http://apt.kubernetes.io/ kubernetes-xenial main
EOF
apt-get update
</code></pre>

<p>Install Kubernetes in <strong>ubuntu</strong></p>

<pre><code class="html">apt-get install -y kubelet kubeadm kubectl
</code></pre>

<p>Enable &amp; start <strong>kublet</strong></p>

<pre><code class="html">systemctl enable kubelet  
systemctl start kubelet
</code></pre>

<p><strong>Step-7</strong> Verify that your Docker cgroup driver matches the kubelet config: (kube-master node)</p>

<pre><code class="html">docker info | grep -i cgroup
Cgroup Driver: cgroupfs
</code></pre>

<p>Configuration for cgroup drive is right in <code>/etc/systemd/system/kubelet.service.d/10-kubeadm.conf</code></p>

<pre><code class="html">[Service]
Environment="KUBELET_CGROUP_ARGS=--cgroup-driver=cgroupfs"
</code></pre>

<p><strong>Step-8</strong> reload daemon  and restart kubelet: (kube-master node)</p>

<pre><code class="html">systemctl daemon-reload
systemctl restart kubelet
</code></pre>

<p><strong>Step-9</strong> Flush Reset Kubernetes component <em>(This will wipeout all the cluster config if exist any do not run this after the config create)</em></p>

<pre><code class="html">kubeadm reset -f 
</code></pre>

<h3 id="step10kubernetesnetworkaddonsetupsstartshere">Step-10 kubernetes Network Addon setups starts here</h3>

<ul>
<li>For flannel to work correctly, <code>--pod-network-cidr=10.244.0.0/16</code> has to be passed to <code>kubeadm init</code>.</li>

<li>For Calico to work correctly, <code>--pod-network-cidr=192.168.0.0/16</code> has to be passed to <code>kubeadm init</code>.</li>
</ul>

<p><em>*Creating flannel Networks *</em></p>

<p>Note <code>apiserver-advertise-address</code> is the IP of the <strong>kube-master</strong></p>

<pre><code class="html">kubeadm init --service-cidr 10.96.0.0/12 --kubernetes-version v1.11.0 --pod-network-cidr 10.244.0.0/16 --apiserver-advertise-address 192.168.1.130
</code></pre>

<p>You should get information back on initiating commands as a normal user, as well as the network that you need to deploy as well as how to join worker nodes to the cluster.</p>

<pre><code class="html">To start using your cluster, you need to run the following as a regular user:

  mkdir -p $HOME/.kube
  sudo cp -i /etc/kubernetes/admin.conf $HOME/.kube/config
  sudo chown $(id -u):$(id -g) $HOME/.kube/config

You can now join any number of machines by running the following on each node
as root:
</code></pre>

<p><strong>Step-11</strong> Join the Cluster (kube-minnion)</p>

<pre><code class="html">kubeadm join 192.168.1.130:6443 --token 5m8qxr.46rpadiwt8fcka0v --discovery-token-ca-cert-hash sha256:b05a0b8849a57432247c06200864f5ce99d40ffdcae965293c0026204ef33da4
</code></pre>

<p><strong>Step-12</strong> Run <code>kubectl get nodes</code> on the master to see this node join the cluster.
It will few seconds to get your cluster in ready state </p>

<pre><code class="html">root@kube-master:kubectl get nodes
NAME          STATUS    ROLES     AGE       VERSION
kube-master   Ready     master    2m        v1.11.0
kube-minion   Ready     &lt;none&gt;    47s       v1.11.0
</code></pre>

<p><strong>Step-12</strong> Apply flannel Addons </p>

<pre><code class="html">kubectl apply -f https://raw.githubusercontent.com/coreos/flannel/v0.10.0/Documentation/kube-flannel.yml
</code></pre>

<p>You will get output like this </p>

<pre><code class="html">clusterrole.rbac.authorization.k8s.io/flannel created
clusterrolebinding.rbac.authorization.k8s.io/flannel created
serviceaccount/flannel created
configmap/kube-flannel-cfg created
daemonset.extensions/kube-flannel-ds created
</code></pre>

<p><strong>Step-13</strong></em> Enable and restart kubelet engine</p>

<pre><code class="html">systemctl restart kubelet
systemctl status kubelet
</code></pre>

<h3 id="verification">Verification</h3>

<p>Verify the Cluster Information </p>

<pre><code class="html">root@kube-master: kubectl cluster-info 
Kubernetes master is running at https://192.168.1.132:6443
KubeDNS is running at https://192.168.1.132:6443/api/v1/namespaces/kube-system/services/kube-dns:dns/proxy
</code></pre>

<p>Verify the Services </p>

<pre><code class="html">root@kube-master:kubectl get services -n kube-system
NAME                   TYPE        CLUSTER-IP      EXTERNAL-IP   PORT(S)         AGE
kube-dns               ClusterIP   10.96.0.10      &lt;none&gt;        53/UDP,53/TCP   2m
</code></pre>

<p>Create Tokens</p>

<pre><code class="html">[root@kube-master ~]kubeadm token create 
I0710 04:08:37.149017    8685 feature_gate.go:230] feature gates: &amp;{map[]}
d49l0d.mheeem1dkrw3n436
</code></pre>

<p>All Service Operational </p>
          



<%@ include file="thanks.jsp"%>


<hr>


      <!-- Comments Form -->
    

          <!-- Single Comment -->
 

          <!-- Comment with nested comments -->
        
          

        </div>

		
        
        <!-- Sidebar Widgets Column -->
        <div class="col-md-4">

          <!-- Ad Widget -->
         <%@ include file="footer_adsense.jsp"%> 

          
          <%@ include file="related-kube.jsp"%>
          
          <!-- Article Widget -->
         <%@ include file="related-linux.jsp"%>
         
           <!-- Article Widget -->
         <%@ include file="related-ansible.jsp"%>
         
         
         <%@ include file="related-openstack.jsp"%>
         
         <%@ include file="related-cryptography.jsp"%>
         <%@ include file="related-window-crypto.jsp"%>
         
         <!-- Topic Widget -->
         <%@ include file="side.jsp"%>
         
           <!-- Add Comments Support -->
         
         
         

        </div>

      </div>
      <!-- /.row -->


	<%@ include file="addcomments.jsp"%>
    
    </div>
    
    
    
    
    <!-- /.container -->

    <!-- Footer -->
    <footer class="py-5 bg-dark">
      <div class="container">
        <p class="m-0 text-center text-white">Copyright &copy; 8gwifi.org 2018</p>
      </div>
      <!-- /.container -->
    </footer>
    
    Here

    <!-- Bootstrap core JavaScript -->
    <script src="vendor/jquery/jquery.min.js"></script>
    <script src="vendor/bootstrap/js/bootstrap.bundle.min.js"></script>


  </body>

</html>